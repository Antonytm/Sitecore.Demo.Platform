<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/" xmlns:role="http://www.sitecore.net/xmlconfig/role/" xmlns:coveo="http://www.sitecore.net/xmlconfig/coveo/">
	<sitecore coveo:require="!disabled">
		<settings>
			<!--
				DEMO WORKAROUND
				Coveo for Sitecore back-end code tries to issue HTTPS requests to the CM at the end of a rebuild to validate items are searchable and deleted from the index.
				This does not work inside the Docker container network which only has HTTP endpoints.
				We disable committed and deleted documents polling to solve this issue.
			-->
			<setting name="Coveo.Indexing.CommittedDocumentsPollingEnabled" value="false" />
			<setting name="Coveo.Indexing.DeletedDocumentsPollingEnabled" value="false" />
		</settings>
		<pipelines>
			<coveoPostItemProcessingPipeline>
				<processor type="Sitecore.Demo.Platform.Foundation.CoveoIndexing.Processors.EnsureWebDatabaseUseCdUrisPostItemProcessing, Sitecore.Demo.Platform.Foundation.CoveoIndexing" patch:before="*[@type='Coveo.SearchProvider.Processors.ExecuteGetBinaryDataPipeline, Coveo.SearchProviderBase']" />
				<processor type="Sitecore.Demo.Platform.Foundation.CoveoIndexing.Processors.EnsureLanguageInUrisPostItemProcessing, Sitecore.Demo.Platform.Foundation.CoveoIndexing" patch:before="*[@type='Coveo.SearchProvider.Processors.ExecuteGetBinaryDataPipeline, Coveo.SearchProviderBase']" />
			</coveoPostItemProcessingPipeline>
			<coveoGetBinaryData>
				<processor type="Coveo.SearchProvider.Processors.FetchPageContentProcessor, Coveo.SearchProviderBase">
					<postProcessing hint="list:AddPostProcessing">
						<processor type="Coveo.SearchProvider.Processors.FetchPageContent.PostProcessing.CleanHtml, Coveo.SearchProviderBase">
							<patch:delete />
						</processor>
					</postProcessing>
				</processor>
			</coveoGetBinaryData>
		</pipelines>
		<sites>
			<!--
				DEMO WORKAROUND
				Coveo for Sitecore and Horizon modules are incompatible by default. Horizon handles the coveo_website as a content site.
				We are applying a workaround similar to what Unicorn had done to fix the same issue: https://github.com/SitecoreUnicorn/Unicorn/issues/398
				We change the coveo_website rootPath to a item that does not exist.
			-->
			<site name="coveo_website">
				<patch:attribute name="rootPath" value="/coveo/for/sitecore/module" />
			</site>
		</sites>
		<coveo>
			<defaultIndexConfiguration>
				<serverUrl>$(env:COVEO_SERVER_URL)</serverUrl>
				<fieldMap>
					<fieldNames hint="raw:AddFieldByFieldName">
						<fieldType fieldName="PageTags" isMultiValue="true" settingType="Coveo.Framework.Configuration.FieldConfiguration, Coveo.Framework"/>
					</fieldNames>
				</fieldMap>
				<documentOptions>
					<exclude hint="list:AddExcludedTemplate">
						<carouselSlide>{142E5FC1-EC62-4540-BAD9-CD88F337CD2E}</carouselSlide>
						<accordion>{705CC8B3-BDE5-4CB3-BF1C-E455A2A36EF1}</accordion>
						<accordionItem>{A6DDAC75-7D24-4BDB-B3F6-5F47FBB21379}</accordionItem>
					</exclude>
					<fields hint="raw:AddComputedIndexField">
						<field fieldName="PageTags" sourceField="sxatags" referencedFieldName="Title">Coveo.SearchProvider.ComputedFields.ReferencedFieldComputedField, Coveo.SearchProviderBase</field>
					</fields>
				</documentOptions>
			</defaultIndexConfiguration>
		</coveo>
		<contentSearch>
			<configuration>
				<indexes>
					<index role:require="!ContentDelivery" id="Coveo_master_index">
						<enableItemLanguageFallback>true</enableItemLanguageFallback>
						<enableFieldLanguageFallback>true</enableFieldLanguageFallback>
						<locations>
							<crawler name="ContentCrawler">
								<patch:delete />
							</crawler>
							<crawler name="MediaLibraryCrawler">
								<patch:delete />
							</crawler>
						</locations>
					</index>
					<index id="Coveo_web_index">
						<enableItemLanguageFallback>true</enableItemLanguageFallback>
						<enableFieldLanguageFallback>true</enableFieldLanguageFallback>
						<locations>
							<crawler name="ContentCrawler">
								<patch:delete />
							</crawler>
							<crawler name="MediaLibraryCrawler">
								<patch:delete />
							</crawler>
						</locations>
					</index>
				</indexes>
			</configuration>
		</contentSearch>
	</sitecore>
</configuration>
