@using Sitecore.Links
@using Sitecore.Mvc
@model Sitecore.HabitatHome.Feature.Search.Models.SearchResultsViewModel

@{
    var pageUrl = string.Format("{0}?query={1}&page=", LinkManager.GetItemUrl(Sitecore.Context.Item), Model.SearchTerm);
}
<div class="search-results">

    <div class="container">
        <div class="row">
            <div class="col-sm-12">
                @if (!string.IsNullOrEmpty(Model.SearchTerm))
                {
                    <h2 class="text-center">We've found @Model.NumberOfSearchResults results for your search term '@Model.SearchTerm'</h2>
                }
                else
                {
                    <h2 class="text-center">Enter the text you want to find on the site</h2>
                }
            </div>
        </div>
    </div>


    <div class="container">
        <div class="row">
            <div class="col-12 mx-auto">
                @Html.Sitecore().Placeholder("hh-searchresults-form")
            </div>
        </div>
    </div>

    <div class="album py-5 bg-light">
        <div class="container">
            <div class="row">
            @foreach (var news in Model.SearchResultsItems)
            {
                <div class="col-md-4">
                    <div class="card mb-4 shadow-sm">
                        <svg class="bd-placeholder-img card-img-top" width="100%" height="225" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid slice" focusable="false" role="img" aria-label="Placeholder: Thumbnail"><title>Placeholder</title><rect width="100%" height="100%" fill="#55595c"></rect><text x="50%" y="50%" fill="#eceeef" dy=".3em">Thumbnail</text></svg>
                        <div class="card-body">
                            <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
                            <div class="d-flex justify-content-between align-items-center">
                                <div class="btn-group">
                                    <a href="#" class="link_arrow">Read more</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            </div>
        </div>
    </div>

    @if (!(Model.NumberOfSearchResults <= 1))
    {
        <div class="container mt-5">
            <ul class="pagination justify-content-center">
                @for (var i = 1; i < Model.NumberOfPages + 1; i++)
                {
                    var url = pageUrl + i;
                    <li class="page-item">
                        <a class="page-link" href="@url">@i</a>
                    </li>
                }
            </ul>
        </div>
    }
</div>