---
ID: "cccd4244-143c-4885-8c53-18dd4c6bf14e"
Parent: "fbe5e6a7-eeee-4151-b8f1-02bcfdc9ebfa"
Template: "962b53c4-f93b-4df9-9821-415c867b8903"
Path: "/sitecore/media library/Themes/Habitat Sites/Habitat Home Basic/package-lock"
DB: master
SharedFields:
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: "-/media/CCCD4244143C48858C5318DD4C6BF14E.ashx?h=16&thn=1&w=16"
- ID: "40e50ed9-ba07-4702-992e-a912738d32dc"
  Hint: Blob
  BlobID: "2eca4d0c-8555-4fce-ad6c-dd8df73beb12"
  Value: {
    "name": "gulptheme",
    "version": "0.9.0",
    "lockfileVersion": 1,
    "requires": true,
    "dependencies": {
        "@gulp-sourcemaps/identity-map": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/@gulp-sourcemaps/identity-map/-/identity-map-1.0.2.tgz",
            "integrity": "sha512-ciiioYMLdo16ShmfHBXJBOFm3xPC4AuwO4xeRpFeHz7WK9PYsWCmigagG2XyzZpubK4a3qNKoUBDhbzHfa50LQ==",
            "requires": {
                "acorn": "5.7.3",
                "css": "2.2.4",
                "normalize-path": "2.1.1",
                "source-map": "0.6.1",
                "through2": "2.0.3"
            },
            "dependencies": {
                "source-map": {
                    "version": "0.6.1",
                    "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
                    "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="
                }
            }
        },
        "@gulp-sourcemaps/map-sources": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/@gulp-sourcemaps/map-sources/-/map-sources-1.0.0.tgz",
            "integrity": "sha1-iQrnxdjId/bThIYCFazp1+yUW9o=",
            "requires": {
                "normalize-path": "2.1.1",
                "through2": "2.0.3"
            }
        },
        "abbrev": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz",
            "integrity": "sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q=="
        },
        "acorn": {
            "version": "5.7.3",
            "resolved": "https://registry.npmjs.org/acorn/-/acorn-5.7.3.tgz",
            "integrity": "sha512-T/zvzYRfbVojPWahDsE5evJdHb3oJoQfFbsrKM7w5Zcs++Tr257tia3BmMP8XYVjp1S9RZXQMh7gao96BlqZOw=="
        },
        "acorn-jsx": {
            "version": "3.0.1",
            "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-3.0.1.tgz",
            "integrity": "sha1-r9+UiPsezvyDSPb7IvRk4ypYs2s=",
            "requires": {
                "acorn": "3.3.0"
            },
            "dependencies": {
                "acorn": {
                    "version": "3.3.0",
                    "resolved": "http://registry.npmjs.org/acorn/-/acorn-3.3.0.tgz",
                    "integrity": "sha1-ReN/s56No/JbruP/U2niu18iAXo="
                }
            }
        },
        "address": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/address/-/address-1.0.3.tgz",
            "integrity": "sha512-z55ocwKBRLryBs394Sm3ushTtBeg6VAeuku7utSoSnsJKvKcnXFIyC6vh27n3rXyxSgkJBBCAvyOn7gSUcTYjg=="
        },
        "agent-base": {
            "version": "4.2.1",
            "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-4.2.1.tgz",
            "integrity": "sha512-JVwXMr9nHYTUXsBFKUqhJwvlcYU/blreOEUkhNR2eXZIvwd+c+o5V4MgDPKWnMS/56awN3TRzIP+KoPn+roQtg==",
            "requires": {
                "es6-promisify": "5.0.0"
            }
        },
        "ajv": {
            "version": "4.11.8",
            "resolved": "https://registry.npmjs.org/ajv/-/ajv-4.11.8.tgz",
            "integrity": "sha1-gv+wKynmYq5TvcIK8VlHcGc5xTY=",
            "requires": {
                "co": "4.6.0",
                "json-stable-stringify": "1.0.1"
            }
        },
        "ajv-keywords": {
            "version": "1.5.1",
            "resolved": "https://registry.npmjs.org/ajv-keywords/-/ajv-keywords-1.5.1.tgz",
            "integrity": "sha1-MU3QpLM2j609/NxU7eYXG4htrzw="
        },
        "align-text": {
            "version": "0.1.4",
            "resolved": "https://registry.npmjs.org/align-text/-/align-text-0.1.4.tgz",
            "integrity": "sha1-DNkKVhCT810KmSVsIrcGlDP60Rc=",
            "requires": {
                "kind-of": "3.2.2",
                "longest": "1.0.1",
                "repeat-string": "1.6.1"
            },
            "dependencies": {
                "kind-of": {
                    "version": "3.2.2",
                    "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
                    "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
                    "requires": {
                        "is-buffer": "1.1.6"
                    }
                }
            }
        },
        "amdefine": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/amdefine/-/amdefine-1.0.1.tgz",
            "integrity": "sha1-SlKCrBZHKek2Gbz9OtFR+BfOkfU="
        },
        "ansi-cyan": {
            "version": "0.1.1",
            "resolved": "https://registry.npmjs.org/ansi-cyan/-/ansi-cyan-0.1.1.tgz",
            "integrity": "sha1-U4rlKK+JgvKK4w2G8vF0VtJgmHM=",
            "requires": {
                "ansi-wrap": "0.1.0"
            }
        },
        "ansi-escapes": {
            "version": "1.4.0",
            "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-1.4.0.tgz",
            "integrity": "sha1-06ioOzGapneTZisT52HHkRQiMG4="
        },
        "ansi-gray": {
            "version": "0.1.1",
            "resolved": "https://registry.npmjs.org/ansi-gray/-/ansi-gray-0.1.1.tgz",
            "integrity": "sha1-KWLPVOyXksSFEKPetSRDaGHvclE=",
            "requires": {
                "ansi-wrap": "0.1.0"
            }
        },
        "ansi-red": {
            "version": "0.1.1",
            "resolved": "https://registry.npmjs.org/ansi-red/-/ansi-red-0.1.1.tgz",
            "integrity": "sha1-jGOPnRCAgAo1PJwoyKgcpHBdlGw=",
            "requires": {
                "ansi-wrap": "0.1.0"
            }
        },
        "ansi-regex": {
            "version": "2.1.1",
            "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
            "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="
        },
        "ansi-styles": {
            "version": "2.2.1",
            "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",
            "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4="
        },
        "ansi-wrap": {
            "version": "0.1.0",
            "resolved": "https://registry.npmjs.org/ansi-wrap/-/ansi-wrap-0.1.0.tgz",
            "integrity": "sha1-qCJQ3bABXponyoLoLqYDu/pF768="
        },
        "any-promise": {
            "version": "1.3.0",
            "resolved": "https://registry.npmjs.org/any-promise/-/any-promise-1.3.0.tgz",
            "integrity": "sha1-q8av7tzqUugJzcA3au0845Y10X8="
        },
        "anymatch": {
            "version": "1.3.2",
            "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-1.3.2.tgz",
            "integrity": "sha512-0XNayC8lTHQ2OI8aljNCN3sSx6hsr/1+rlcDAotXJR7C1oZZHCNsfpbKwMjRA3Uqb5tF1Rae2oloTr4xpq+WjA==",
            "requires": {
                "micromatch": "2.3.11",
                "normalize-path": "2.1.1"
            },
            "dependencies": {
                "arr-diff": {
                    "version": "2.0.0",
                    "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-2.0.0.tgz",
                    "integrity": "sha1-jzuCf5Vai9ZpaX5KQlasPOrjVs8=",
                    "requires": {
                        "arr-flatten": "1.1.0"
                    }
                },
                "array-unique": {
                    "version": "0.2.1",
                    "resolved": "https://registry.npmjs.org/array-unique/-/array-unique-0.2.1.tgz",
                    "integrity": "sha1-odl8yvy8JiXMcPrc6zalDFiwGlM="
                },
                "braces": {
                    "version": "1.8.5",
                    "resolved": "https://registry.npmjs.org/braces/-/braces-1.8.5.tgz",
                    "integrity": "sha1-uneWLhLf+WnWt2cR6RS3N4V79qc=",
                    "requires": {
                        "expand-range": "1.8.2",
                        "preserve": "0.2.0",
                        "repeat-element": "1.1.3"
                    }
                },
                "expand-brackets": {
                    "version": "0.1.5",
                    "resolved": "https://registry.npmjs.org/expand-brackets/-/expand-brackets-0.1.5.tgz",
                    "integrity": "sha1-3wcoTjQqgHzXM6xa9yQR5YHRF3s=",
                    "requires": {
                        "is-posix-bracket": "0.1.1"
                    }
                },
                "extglob": {
                    "version": "0.3.2",
                    "resolved": "https://registry.npmjs.org/extglob/-/extglob-0.3.2.tgz",
                    "integrity": "sha1-Lhj/PS9JqydlzskCPwEdqo2DSaE=",
                    "requires": {
                        "is-extglob": "1.0.0"
                    }
                },
                "is-extglob": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-1.0.0.tgz",
                    "integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA="
                },
                "is-glob": {
                    "version": "2.0.1",
                    "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-2.0.1.tgz",
                    "integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
                    "requires": {
                        "is-extglob": "1.0.0"
                    }
                },
                "kind-of": {
                    "version": "3.2.2",
                    "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
                    "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
                    "requires": {
                        "is-buffer": "1.1.6"
                    }
                },
                "micromatch": {
                    "version": "2.3.11",
                    "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-2.3.11.tgz",
                    "integrity": "sha1-hmd8l9FyCzY0MdBNDRUpO9OMFWU=",
                    "requires": {
                        "arr-diff": "2.0.0",
                        "array-unique": "0.2.1",
                        "braces": "1.8.5",
                        "expand-brackets": "0.1.5",
                        "extglob": "0.3.2",
                        "filename-regex": "2.0.1",
                        "is-extglob": "1.0.0",
                        "is-glob": "2.0.1",
                        "kind-of": "3.2.2",
                        "normalize-path": "2.1.1",
                        "object.omit": "2.0.1",
                        "parse-glob": "3.0.4",
                        "regex-cache": "0.4.4"
                    }
                }
            }
        },
        "aproba": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/aproba/-/aproba-1.2.0.tgz",
            "integrity": "sha512-Y9J6ZjXtoYh8RnXVCMOU/ttDmk1aBjunq9vO0ta5x85WDQiQfUF9sIPBITdbiiIVcBo03Hi3jMxigBtsddlXRw=="
        },
        "archy": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/archy/-/archy-1.0.0.tgz",
            "integrity": "sha1-+cjBN1fMHde8N5rHeyxipcKGjEA="
        },
        "are-we-there-yet": {
            "version": "1.1.5",
            "resolved": "https://registry.npmjs.org/are-we-there-yet/-/are-we-there-yet-1.1.5.tgz",
            "integrity": "sha512-5hYdAkZlcG8tOLujVDTgCT+uPX0VnpAH28gWsLfzpXYm7wP6mp5Q/gYyR7YQ0cKVJcXJnl3j2kpBan13PtQf6w==",
            "requires": {
                "delegates": "1.0.0",
                "readable-stream": "2.3.6"
            },
            "dependencies": {
                "isarray": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
                    "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
                },
                "readable-stream": {
                    "version": "2.3.6",
                    "resolved": "http://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz",
                    "integrity": "sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==",
                    "requires": {
                        "core-util-is": "1.0.2",
                        "inherits": "2.0.3",
                        "isarray": "1.0.0",
                        "process-nextick-args": "2.0.0",
                        "safe-buffer": "5.1.2",
                        "string_decoder": "1.1.1",
                        "util-deprecate": "1.0.2"
                    }
                },
                "string_decoder": {
                    "version": "1.1.1",
                    "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
                    "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
                    "requires": {
                        "safe-buffer": "5.1.2"
                    }
                }
            }
        },
        "argparse": {
            "version": "1.0.10",
            "resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",
            "integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",
            "requires": {
                "sprintf-js": "1.0.3"
            }
        },
        "arr-diff": {
            "version": "4.0.0",
            "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-4.0.0.tgz",
            "integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
        },
        "arr-flatten": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/arr-flatten/-/arr-flatten-1.1.0.tgz",
            "integrity": "sha512-L3hKV5R/p5o81R7O02IGnwpDmkp6E982XhtbuwSe3O4qOtMMMtodicASA1Cny2U+aCXcNpml+m4dPsvsJ3jatg=="
        },
        "arr-union": {
            "version": "3.1.0",
            "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-3.1.0.tgz",
            "integrity": "sha1-45sJrqne+Gao8gbiiK9jkZuuOcQ="
        },
        "array-differ": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/array-differ/-/array-differ-1.0.0.tgz",
            "integrity": "sha1-7/UuN1gknTO+QCuLuOVkuytdQDE="
        },
        "array-each": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/array-each/-/array-each-1.0.1.tgz",
            "integrity": "sha1-p5SvDAWrF1KEbudTofIRoFugxE8="
        },
        "array-find-index": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/array-find-index/-/array-find-index-1.0.2.tgz",
            "integrity": "sha1-3wEKoSh+Fku9pvlyOwqWoexBh6E="
        },
        "array-slice": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/array-slice/-/array-slice-1.1.0.tgz",
            "integrity": "sha512-B1qMD3RBP7O8o0H2KbrXDyB0IccejMF15+87Lvlor12ONPRHP6gTjXMNkt/d3ZuOGbAe66hFmaCfECI24Ufp6w=="
        },
        "array-union": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/array-union/-/array-union-1.0.2.tgz",
            "integrity": "sha1-mjRBDk9OPaI96jdb5b5w8kd47Dk=",
            "requires": {
                "array-uniq": "1.0.3"
            }
        },
        "array-uniq": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/array-uniq/-/array-uniq-1.0.3.tgz",
            "integrity": "sha1-r2rId6Jcx/dOBYiUdThY39sk/bY="
        },
        "array-unique": {
            "version": "0.3.2",
            "resolved": "https://registry.npmjs.org/array-unique/-/array-unique-0.3.2.tgz",
            "integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
        },
        "arrify": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/arrify/-/arrify-1.0.1.tgz",
            "integrity": "sha1-iYUI2iIm84DfkEcoRWhJwVAaSw0="
        },
        "asn1": {
            "version": "0.2.4",
            "resolved": "https://registry.npmjs.org/asn1/-/asn1-0.2.4.tgz",
            "integrity": "sha512-jxwzQpLQjSmWXgwaCZE9Nz+glAG01yF1QnWgbhGwHI5A6FRIEY6IVqtHhIepHqI7/kyEyQEagBC5mBEFlIYvdg==",
            "requires": {
                "safer-buffer": "2.1.2"
            }
        },
        "assert-plus": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
            "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU="
        },
        "assign-symbols": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/assign-symbols/-/assign-symbols-1.0.0.tgz",
            "integrity": "sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c="
        },
        "ast-types": {
            "version": "0.11.5",
            "resolved": "https://registry.npmjs.org/ast-types/-/ast-types-0.11.5.tgz",
            "integrity": "sha512-oJjo+5e7/vEc2FBK8gUalV0pba4L3VdBIs2EKhOLHLcOd2FgQIVQN9xb0eZ9IjEWyAL7vq6fGJxOvVvdCHNyMw=="
        },
        "async": {
            "version": "2.1.5",
            "resolved": "https://registry.npmjs.org/async/-/async-2.1.5.tgz",
            "integrity": "sha1-5YfGhYCZSsZ/xW/4bTrFa9voELw=",
            "requires": {
                "lodash": "4.17.11"
            }
        },
        "async-each": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/async-each/-/async-each-1.0.1.tgz",
            "integrity": "sha1-GdOGodntxufByF04iu28xW0zYC0="
        },
        "async-foreach": {
            "version": "0.1.3",
            "resolved": "https://registry.npmjs.org/async-foreach/-/async-foreach-0.1.3.tgz",
            "integrity": "sha1-NhIfhFwFeBct5Bmpfb6x0W7DRUI="
        },
        "asynckit": {
            "version": "0.4.0",
            "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
            "integrity": "sha1-x57Zf380y48robyXkLzDZkdLS3k="
        },
        "atob": {
            "version": "2.1.2",
            "resolved": "https://registry.npmjs.org/atob/-/atob-2.1.2.tgz",
            "integrity": "sha512-Wm6ukoaOGJi/73p/cl2GvLjTI5JM1k/O14isD73YML8StrH/7/lRFgmg8nICZgD3bZZvjwCGxtMOD3wWNAu8cg=="
        },
        "autoprefixer": {
            "version": "6.7.7",
            "resolved": "https://registry.npmjs.org/autoprefixer/-/autoprefixer-6.7.7.tgz",
            "integrity": "sha1-Hb0cg1ZY41zj+ZhAmdsAWFx4IBQ=",
            "requires": {
                "browserslist": "1.7.7",
                "caniuse-db": "1.0.30000885",
                "normalize-range": "0.1.2",
                "num2fraction": "1.2.2",
                "postcss": "5.2.18",
                "postcss-value-parser": "3.3.0"
            }
        },
        "aws-sign2": {
            "version": "0.7.0",
            "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",
            "integrity": "sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg="
        },
        "aws4": {
            "version": "1.8.0",
            "resolved": "https://registry.npmjs.org/aws4/-/aws4-1.8.0.tgz",
            "integrity": "sha512-ReZxvNHIOv88FlT7rxcXIIC0fPt4KZqZbOlivyWtXLt8ESx84zd3kMC6iK5jVeS2qt+g7ftS7ye4fi06X5rtRQ=="
        },
        "babel-code-frame": {
            "version": "6.26.0",
            "resolved": "https://registry.npmjs.org/babel-code-frame/-/babel-code-frame-6.26.0.tgz",
            "integrity": "sha1-Y/1D99weO7fONZR9uP42mj9Yx0s=",
            "requires": {
                "chalk": "1.1.3",
                "esutils": "2.0.2",
                "js-tokens": "3.0.2"
            }
        },
        "babel-core": {
            "version": "6.26.3",
            "resolved": "https://registry.npmjs.org/babel-core/-/babel-core-6.26.3.tgz",
            "integrity": "sha512-6jyFLuDmeidKmUEb3NM+/yawG0M2bDZ9Z1qbZP59cyHLz8kYGKYwpJP0UwUKKUiTRNvxfLesJnTedqczP7cTDA==",
            "requires": {
                "babel-code-frame": "6.26.0",
                "babel-generator": "6.26.1",
                "babel-helpers": "6.24.1",
                "babel-messages": "6.23.0",
                "babel-register": "6.26.0",
                "babel-runtime": "6.26.0",
                "babel-template": "6.26.0",
                "babel-traverse": "6.26.0",
                "babel-types": "6.26.0",
                "babylon": "6.18.0",
                "convert-source-map": "1.6.0",
                "debug": "2.6.9",
                "json5": "0.5.1",
                "lodash": "4.17.11",
                "minimatch": "3.0.4",
                "path-is-absolute": "1.0.1",
                "private": "0.1.8",
                "slash": "1.0.0",
                "source-map": "0.5.7"
            }
        },
        "babel-generator": {
            "version": "6.26.1",
            "resolved": "https://registry.npmjs.org/babel-generator/-/babel-generator-6.26.1.tgz",
            "integrity": "sha512-HyfwY6ApZj7BYTcJURpM5tznulaBvyio7/0d4zFOeMPUmfxkCjHocCuoLa2SAGzBI8AREcH3eP3758F672DppA==",
            "requires": {
                "babel-messages": "6.23.0",
                "babel-runtime": "6.26.0",
                "babel-types": "6.26.0",
                "detect-indent": "4.0.0",
                "jsesc": "1.3.0",
                "lodash": "4.17.11",
                "source-map": "0.5.7",
                "trim-right": "1.0.1"
            }
        },
        "babel-helper-call-delegate": {
            "version": "6.24.1",
            "resolved": "https://registry.npmjs.org/babel-helper-call-delegate/-/babel-helper-call-delegate-6.24.1.tgz",
            "integrity": "sha1-7Oaqzdx25Bw0YfiL/Fdb0Nqi340=",
            "requires": {
                "babel-helper-hoist-variables": "6.24.1",
                "babel-runtime": "6.26.0",
                "babel-traverse": "6.26.0",
                "babel-types": "6.26.0"
            }
        },
        "babel-helper-define-map": {
            "version": "6.26.0",
            "resolved": "https://registry.npmjs.org/babel-helper-define-map/-/babel-helper-define-map-6.26.0.tgz",
            "integrity": "sha1-pfVtq0GiX5fstJjH66ypgZ+Vvl8=",
            "requires": {
                "babel-helper-function-name": "6.24.1",
                "babel-runtime": "6.26.0",
                "babel-types": "6.26.0",
                "lodash": "4.17.11"
            }
        },
        "babel-helper-function-name": {
            "version": "6.24.1",
            "resolved": "https://registry.npmjs.org/babel-helper-function-name/-/babel-helper-function-name-6.24.1.tgz",
            "integrity": "sha1-00dbjAPtmCQqJbSDUasYOZ01gKk=",
            "requires": {
                "babel-helper-get-function-arity": "6.24.1",
                "babel-runtime": "6.26.0",
                "babel-template": "6.26.0",
                "babel-traverse": "6.26.0",
                "babel-types": "6.26.0"
            }
        },
        "babel-helper-get-function-arity": {
            "version": "6.24.1",
            "resolved": "https://registry.npmjs.org/babel-helper-get-function-arity/-/babel-helper-get-function-arity-6.24.1.tgz",
            "integrity": "sha1-j3eCqpNAfEHTqlCQj4mwMbG2hT0=",
            "requires": {
                "babel-runtime": "6.26.0",
                "babel-types": "6.26.0"
            }
        },
        "babel-helper-hoist-variables": {
            "version": "6.24.1",
            "resolved": "https://registry.npmjs.org/babel-helper-hoist-variables/-/babel-helper-hoist-variables-6.24.1.tgz",
            "integrity": "sha1-HssnaJydJVE+rbyZFKc/VAi+enY=",
            "requires": {
                "babel-runtime": "6.26.0",
                "babel-types": "6.26.0"
            }
        },
        "babel-helper-optimise-call-expression": {
            "version": "6.24.1",
            "resolved": "https://registry.npmjs.org/babel-helper-optimise-call-expression/-/babel-helper-optimise-call-expression-6.24.1.tgz",
            "integrity": "sha1-96E0J7qfc/j0+pk8VKl4gtEkQlc=",
            "requires": {
                "babel-runtime": "6.26.0",
                "babel-types": "6.26.0"
            }
        },
        "babel-helper-regex": {
            "version": "6.26.0",
            "resolved": "https://registry.npmjs.org/babel-helper-regex/-/babel-helper-regex-6.26.0.tgz",
            "integrity": "sha1-MlxZ+QL4LyS3T6zu0DY5VPZJXnI=",
            "requires": {
                "babel-runtime": "6.26.0",
                "babel-types": "6.26.0",
                "lodash": "4.17.11"
            }
        },
        "babel-helper-replace-supers": {
            "version": "6.24.1",
            "resolved": "https://registry.npmjs.org/babel-helper-replace-supers/-/babel-helper-replace-supers-6.24.1.tgz",
            "integrity": "sha1-v22/5Dk40XNpohPKiov3S2qQqxo=",
            "requires": {
                "babel-helper-optimise-call-expression": "6.24.1",
                "babel-messages": "6.23.0",
                "babel-runtime": "6.26.0",
                "babel-template": "6.26.0",
                "babel-traverse": "6.26.0",
                "babel-types": "6.26.0"
            }
        },
        "babel-helpers": {
            "version": "6.24.1",
            "resolved": "https://registry.npmjs.org/babel-helpers/-/babel-helpers-6.24.1.tgz",
            "integrity": "sha1-NHHenK7DiOXIUOWX5Yom3fN2ArI=",
            "requires": {
                "babel-runtime": "6.26.0",
                "babel-template": "6.26.0"
            }
        },
        "babel-messages": {
            "version": "6.23.0",
            "resolved": "https://registry.npmjs.org/babel-messages/-/babel-messages-6.23.0.tgz",
            "integrity": "sha1-8830cDhYA1sqKVHG7F7fbGLyYw4=",
            "requires": {
                "babel-runtime": "6.26.0"
            }
        },
        "babel-plugin-check-es2015-constants": {
            "version": "6.22.0",
            "resolved": "https://registry.npmjs.org/babel-plugin-check-es2015-constants/-/babel-plugin-check-es2015-constants-6.22.0.tgz",
            "integrity": "sha1-NRV7EBQm/S/9PaP3XH0ekYNbv4o=",
            "requires": {
                "babel-runtime": "6.26.0"
            }
        },
        "babel-plugin-transform-es2015-arrow-functions": {
            "version": "6.22.0",
            "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-arrow-functions/-/babel-plugin-transform-es2015-arrow-functions-6.22.0.tgz",
            "integrity": "sha1-RSaSy3EdX3ncf4XkQM5BufJE0iE=",
            "requires": {
                "babel-runtime": "6.26.0"
            }
        },
        "babel-plugin-transform-es2015-block-scoped-functions": {
            "version": "6.22.0",
            "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-block-scoped-functions/-/babel-plugin-transform-es2015-block-scoped-functions-6.22.0.tgz",
            "integrity": "sha1-u8UbSflk1wy42OC5ToICRs46YUE=",
            "requires": {
                "babel-runtime": "6.26.0"
            }
        },
        "babel-plugin-transform-es2015-block-scoping": {
            "version": "6.26.0",
            "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-block-scoping/-/babel-plugin-transform-es2015-block-scoping-6.26.0.tgz",
            "integrity": "sha1-1w9SmcEwjQXBL0Y4E7CgnnOxiV8=",
            "requires": {
                "babel-runtime": "6.26.0",
                "babel-template": "6.26.0",
                "babel-traverse": "6.26.0",
                "babel-types": "6.26.0",
                "lodash": "4.17.11"
            }
        },
        "babel-plugin-transform-es2015-classes": {
            "version": "6.24.1",
            "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-classes/-/babel-plugin-transform-es2015-classes-6.24.1.tgz",
            "integrity": "sha1-WkxYpQyclGHlZLSyo7+ryXolhNs=",
            "requires": {
                "babel-helper-define-map": "6.26.0",
                "babel-helper-function-name": "6.24.1",
                "babel-helper-optimise-call-expression": "6.24.1",
                "babel-helper-replace-supers": "6.24.1",
                "babel-messages": "6.23.0",
                "babel-runtime": "6.26.0",
                "babel-template": "6.26.0",
                "babel-traverse": "6.26.0",
                "babel-types": "6.26.0"
            }
        },
        "babel-plugin-transform-es2015-computed-properties": {
            "version": "6.24.1",
            "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-computed-properties/-/babel-plugin-transform-es2015-computed-properties-6.24.1.tgz",
            "integrity": "sha1-b+Ko0WiV1WNPTNmZttNICjCBWbM=",
            "requires": {
                "babel-runtime": "6.26.0",
                "babel-template": "6.26.0"
            }
        },
        "babel-plugin-transform-es2015-destructuring": {
            "version": "6.23.0",
            "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-destructuring/-/babel-plugin-transform-es2015-destructuring-6.23.0.tgz",
            "integrity": "sha1-mXux8auWf2gtKwh2/jWNYOdlxW0=",
            "requires": {
                "babel-runtime": "6.26.0"
            }
        },
        "babel-plugin-transform-es2015-duplicate-keys": {
            "version": "6.24.1",
            "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-duplicate-keys/-/babel-plugin-transform-es2015-duplicate-keys-6.24.1.tgz",
            "integrity": "sha1-c+s9MQypaePvnskcU3QabxV2Qj4=",
            "requires": {
                "babel-runtime": "6.26.0",
                "babel-types": "6.26.0"
            }
        },
        "babel-plugin-transform-es2015-for-of": {
            "version": "6.23.0",
            "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-for-of/-/babel-plugin-transform-es2015-for-of-6.23.0.tgz",
            "integrity": "sha1-9HyVsrYT3x0+zC/bdXNiPHUkhpE=",
            "requires": {
                "babel-runtime": "6.26.0"
            }
        },
        "babel-plugin-transform-es2015-function-name": {
            "version": "6.24.1",
            "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-function-name/-/babel-plugin-transform-es2015-function-name-6.24.1.tgz",
            "integrity": "sha1-g0yJhTvDaxrw86TF26qU/Y6sqos=",
            "requires": {
                "babel-helper-function-name": "6.24.1",
                "babel-runtime": "6.26.0",
                "babel-types": "6.26.0"
            }
        },
        "babel-plugin-transform-es2015-literals": {
            "version": "6.22.0",
            "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-literals/-/babel-plugin-transform-es2015-literals-6.22.0.tgz",
            "integrity": "sha1-T1SgLWzWbPkVKAAZox0xklN3yi4=",
            "requires": {
                "babel-runtime": "6.26.0"
            }
        },
        "babel-plugin-transform-es2015-modules-amd": {
            "version": "6.24.1",
            "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-modules-amd/-/babel-plugin-transform-es2015-modules-amd-6.24.1.tgz",
            "integrity": "sha1-Oz5UAXI5hC1tGcMBHEvS8AoA0VQ=",
            "requires": {
                "babel-plugin-transform-es2015-modules-commonjs": "6.26.2",
                "babel-runtime": "6.26.0",
                "babel-template": "6.26.0"
            }
        },
        "babel-plugin-transform-es2015-modules-commonjs": {
            "version": "6.26.2",
            "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-modules-commonjs/-/babel-plugin-transform-es2015-modules-commonjs-6.26.2.tgz",
            "integrity": "sha512-CV9ROOHEdrjcwhIaJNBGMBCodN+1cfkwtM1SbUHmvyy35KGT7fohbpOxkE2uLz1o6odKK2Ck/tz47z+VqQfi9Q==",
            "requires": {
                "babel-plugin-transform-strict-mode": "6.24.1",
                "babel-runtime": "6.26.0",
                "babel-template": "6.26.0",
                "babel-types": "6.26.0"
            }
        },
        "babel-plugin-transform-es2015-modules-systemjs": {
            "version": "6.24.1",
            "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-modules-systemjs/-/babel-plugin-transform-es2015-modules-systemjs-6.24.1.tgz",
            "integrity": "sha1-/4mhQrkRmpBhlfXxBuzzBdlAfSM=",
            "requires": {
                "babel-helper-hoist-variables": "6.24.1",
                "babel-runtime": "6.26.0",
                "babel-template": "6.26.0"
            }
        },
        "babel-plugin-transform-es2015-modules-umd": {
            "version": "6.24.1",
            "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-modules-umd/-/babel-plugin-transform-es2015-modules-umd-6.24.1.tgz",
            "integrity": "sha1-rJl+YoXNGO1hdq22B9YCNErThGg=",
            "requires": {
                "babel-plugin-transform-es2015-modules-amd": "6.24.1",
                "babel-runtime": "6.26.0",
                "babel-template": "6.26.0"
            }
        },
        "babel-plugin-transform-es2015-object-super": {
            "version": "6.24.1",
            "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-object-super/-/babel-plugin-transform-es2015-object-super-6.24.1.tgz",
            "integrity": "sha1-JM72muIcuDp/hgPa0CH1cusnj40=",
            "requires": {
                "babel-helper-replace-supers": "6.24.1",
                "babel-runtime": "6.26.0"
            }
        },
        "babel-plugin-transform-es2015-parameters": {
            "version": "6.24.1",
            "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-parameters/-/babel-plugin-transform-es2015-parameters-6.24.1.tgz",
            "integrity": "sha1-V6w1GrScrxSpfNE7CfZv3wpiXys=",
            "requires": {
                "babel-helper-call-delegate": "6.24.1",
                "babel-helper-get-function-arity": "6.24.1",
                "babel-runtime": "6.26.0",
                "babel-template": "6.26.0",
                "babel-traverse": "6.26.0",
                "babel-types": "6.26.0"
            }
        },
        "babel-plugin-transform-es2015-shorthand-properties": {
            "version": "6.24.1",
            "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-shorthand-properties/-/babel-plugin-transform-es2015-shorthand-properties-6.24.1.tgz",
            "integrity": "sha1-JPh11nIch2YbvZmkYi5R8U3jiqA=",
            "requires": {
                "babel-runtime": "6.26.0",
                "babel-types": "6.26.0"
            }
        },
        "babel-plugin-transform-es2015-spread": {
            "version": "6.22.0",
            "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-spread/-/babel-plugin-transform-es2015-spread-6.22.0.tgz",
            "integrity": "sha1-1taKmfia7cRTbIGlQujdnxdG+NE=",
            "requires": {
                "babel-runtime": "6.26.0"
            }
        },
        "babel-plugin-transform-es2015-sticky-regex": {
            "version": "6.24.1",
            "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-sticky-regex/-/babel-plugin-transform-es2015-sticky-regex-6.24.1.tgz",
            "integrity": "sha1-AMHNsaynERLN8M9hJsLta0V8zbw=",
            "requires": {
                "babel-helper-regex": "6.26.0",
                "babel-runtime": "6.26.0",
                "babel-types": "6.26.0"
            }
        },
        "babel-plugin-transform-es2015-template-literals": {
            "version": "6.22.0",
            "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-template-literals/-/babel-plugin-transform-es2015-template-literals-6.22.0.tgz",
            "integrity": "sha1-qEs0UPfp+PH2g51taH2oS7EjbY0=",
            "requires": {
                "babel-runtime": "6.26.0"
            }
        },
        "babel-plugin-transform-es2015-typeof-symbol": {
            "version": "6.23.0",
            "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-typeof-symbol/-/babel-plugin-transform-es2015-typeof-symbol-6.23.0.tgz",
            "integrity": "sha1-3sCfHN3/lLUqxz1QXITfWdzOs3I=",
            "requires": {
                "babel-runtime": "6.26.0"
            }
        },
        "babel-plugin-transform-es2015-unicode-regex": {
            "version": "6.24.1",
            "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-unicode-regex/-/babel-plugin-transform-es2015-unicode-regex-6.24.1.tgz",
            "integrity": "sha1-04sS9C6nMj9yk4fxinxa4frrNek=",
            "requires": {
                "babel-helper-regex": "6.26.0",
                "babel-runtime": "6.26.0",
                "regexpu-core": "2.0.0"
            }
        },
        "babel-plugin-transform-regenerator": {
            "version": "6.26.0",
            "resolved": "https://registry.npmjs.org/babel-plugin-transform-regenerator/-/babel-plugin-transform-regenerator-6.26.0.tgz",
            "integrity": "sha1-4HA2lvveJ/Cj78rPi03KL3s6jy8=",
            "requires": {
                "regenerator-transform": "0.10.1"
            }
        },
        "babel-plugin-transform-strict-mode": {
            "version": "6.24.1",
            "resolved": "https://registry.npmjs.org/babel-plugin-transform-strict-mode/-/babel-plugin-transform-strict-mode-6.24.1.tgz",
            "integrity": "sha1-1fr3qleKZbvlkc9e2uBKDGcCB1g=",
            "requires": {
                "babel-runtime": "6.26.0",
                "babel-types": "6.26.0"
            }
        },
        "babel-preset-es2015": {
            "version": "6.24.1",
            "resolved": "https://registry.npmjs.org/babel-preset-es2015/-/babel-preset-es2015-6.24.1.tgz",
            "integrity": "sha1-1EBQ1rwsn+6nAqrzjXJ6AhBTiTk=",
            "requires": {
                "babel-plugin-check-es2015-constants": "6.22.0",
                "babel-plugin-transform-es2015-arrow-functions": "6.22.0",
                "babel-plugin-transform-es2015-block-scoped-functions": "6.22.0",
                "babel-plugin-transform-es2015-block-scoping": "6.26.0",
                "babel-plugin-transform-es2015-classes": "6.24.1",
                "babel-plugin-transform-es2015-computed-properties": "6.24.1",
                "babel-plugin-transform-es2015-destructuring": "6.23.0",
                "babel-plugin-transform-es2015-duplicate-keys": "6.24.1",
                "babel-plugin-transform-es2015-for-of": "6.23.0",
                "babel-plugin-transform-es2015-function-name": "6.24.1",
                "babel-plugin-transform-es2015-literals": "6.22.0",
                "babel-plugin-transform-es2015-modules-amd": "6.24.1",
                "babel-plugin-transform-es2015-modules-commonjs": "6.26.2",
                "babel-plugin-transform-es2015-modules-systemjs": "6.24.1",
                "babel-plugin-transform-es2015-modules-umd": "6.24.1",
                "babel-plugin-transform-es2015-object-super": "6.24.1",
                "babel-plugin-transform-es2015-parameters": "6.24.1",
                "babel-plugin-transform-es2015-shorthand-properties": "6.24.1",
                "babel-plugin-transform-es2015-spread": "6.22.0",
                "babel-plugin-transform-es2015-sticky-regex": "6.24.1",
                "babel-plugin-transform-es2015-template-literals": "6.22.0",
                "babel-plugin-transform-es2015-typeof-symbol": "6.23.0",
                "babel-plugin-transform-es2015-unicode-regex": "6.24.1",
                "babel-plugin-transform-regenerator": "6.26.0"
            }
        },
        "babel-register": {
            "version": "6.26.0",
            "resolved": "https://registry.npmjs.org/babel-register/-/babel-register-6.26.0.tgz",
            "integrity": "sha1-btAhFz4vy0htestFxgCahW9kcHE=",
            "requires": {
                "babel-core": "6.26.3",
                "babel-runtime": "6.26.0",
                "core-js": "2.5.7",
                "home-or-tmp": "2.0.0",
                "lodash": "4.17.11",
                "mkdirp": "0.5.1",
                "source-map-support": "0.4.18"
            }
        },
        "babel-runtime": {
            "version": "6.26.0",
            "resolved": "https://registry.npmjs.org/babel-runtime/-/babel-runtime-6.26.0.tgz",
            "integrity": "sha1-llxwWGaOgrVde/4E/yM3vItWR/4=",
            "requires": {
                "core-js": "2.5.7",
                "regenerator-runtime": "0.11.1"
            }
        },
        "babel-template": {
            "version": "6.26.0",
            "resolved": "https://registry.npmjs.org/babel-template/-/babel-template-6.26.0.tgz",
            "integrity": "sha1-3gPi0WOWsGn0bdn/+FIfsaDjXgI=",
            "requires": {
                "babel-runtime": "6.26.0",
                "babel-traverse": "6.26.0",
                "babel-types": "6.26.0",
                "babylon": "6.18.0",
                "lodash": "4.17.11"
            }
        },
        "babel-traverse": {
            "version": "6.26.0",
            "resolved": "https://registry.npmjs.org/babel-traverse/-/babel-traverse-6.26.0.tgz",
            "integrity": "sha1-RqnL1+3MYsjlwGTi0tjQ9ANXZu4=",
            "requires": {
                "babel-code-frame": "6.26.0",
                "babel-messages": "6.23.0",
                "babel-runtime": "6.26.0",
                "babel-types": "6.26.0",
                "babylon": "6.18.0",
                "debug": "2.6.9",
                "globals": "9.18.0",
                "invariant": "2.2.4",
                "lodash": "4.17.11"
            }
        },
        "babel-types": {
            "version": "6.26.0",
            "resolved": "https://registry.npmjs.org/babel-types/-/babel-types-6.26.0.tgz",
            "integrity": "sha1-o7Bz+Uq0nrb6Vc1lInozQ4BjJJc=",
            "requires": {
                "babel-runtime": "6.26.0",
                "esutils": "2.0.2",
                "lodash": "4.17.11",
                "to-fast-properties": "1.0.3"
            }
        },
        "babylon": {
            "version": "6.18.0",
            "resolved": "https://registry.npmjs.org/babylon/-/babylon-6.18.0.tgz",
            "integrity": "sha512-q/UEjfGJ2Cm3oKV71DJz9d25TPnq5rhBVL2Q4fA5wcC3jcrdn7+SssEybFIxwAvvP+YCsCYNKughoF33GxgycQ=="
        },
        "balanced-match": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.0.tgz",
            "integrity": "sha1-ibTRmasr7kneFk6gK4nORi1xt2c="
        },
        "base": {
            "version": "0.11.2",
            "resolved": "https://registry.npmjs.org/base/-/base-0.11.2.tgz",
            "integrity": "sha512-5T6P4xPgpp0YDFvSWwEZ4NoE3aM4QBQXDzmVbraCkFj8zHM+mba8SyqB5DbZWyR7mYHo6Y7BdQo3MoA4m0TeQg==",
            "requires": {
                "cache-base": "1.0.1",
                "class-utils": "0.3.6",
                "component-emitter": "1.2.1",
                "define-property": "1.0.0",
                "isobject": "3.0.1",
                "mixin-deep": "1.3.1",
                "pascalcase": "0.1.1"
            },
            "dependencies": {
                "define-property": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",
                    "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
                    "requires": {
                        "is-descriptor": "1.0.2"
                    }
                },
                "is-accessor-descriptor": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
                    "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
                    "requires": {
                        "kind-of": "6.0.2"
                    }
                },
                "is-data-descriptor": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
                    "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
                    "requires": {
                        "kind-of": "6.0.2"
                    }
                },
                "is-descriptor": {
                    "version": "1.0.2",
                    "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
                    "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
                    "requires": {
                        "is-accessor-descriptor": "1.0.0",
                        "is-data-descriptor": "1.0.0",
                        "kind-of": "6.0.2"
                    }
                }
            }
        },
        "bcrypt-pbkdf": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz",
            "integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
            "optional": true,
            "requires": {
                "tweetnacl": "0.14.5"
            }
        },
        "beeper": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/beeper/-/beeper-1.1.1.tgz",
            "integrity": "sha1-5tXqjF2tABMEpwsiY4RH9pyy+Ak="
        },
        "bin-pack": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/bin-pack/-/bin-pack-1.0.2.tgz",
            "integrity": "sha1-wqAU7b8L7XCjKSBi7UZXe5YSBnk="
        },
        "binary-extensions": {
            "version": "1.12.0",
            "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-1.12.0.tgz",
            "integrity": "sha512-DYWGk01lDcxeS/K9IHPGWfT8PsJmbXRtRd2Sx72Tnb8pcYZQFF1oSDb8hJtS1vhp212q1Rzi5dUf9+nq0o9UIg=="
        },
        "block-stream": {
            "version": "0.0.9",
            "resolved": "https://registry.npmjs.org/block-stream/-/block-stream-0.0.9.tgz",
            "integrity": "sha1-E+v+d4oDIFz+A3UUgeu0szAMEmo=",
            "requires": {
                "inherits": "2.0.3"
            }
        },
        "boom": {
            "version": "2.10.1",
            "resolved": "https://registry.npmjs.org/boom/-/boom-2.10.1.tgz",
            "integrity": "sha1-OciRjO/1eZ+D+UkqhI9iWt0Mdm8=",
            "requires": {
                "hoek": "2.16.3"
            }
        },
        "brace-expansion": {
            "version": "1.1.11",
            "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
            "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
            "requires": {
                "balanced-match": "1.0.0",
                "concat-map": "0.0.1"
            }
        },
        "braces": {
            "version": "2.3.2",
            "resolved": "https://registry.npmjs.org/braces/-/braces-2.3.2.tgz",
            "integrity": "sha512-aNdbnj9P8PjdXU4ybaWLK2IF3jc/EoDYbC7AazW6to3TRsfXxscC9UXOB5iDiEQrkyIbWp2SLQda4+QAa7nc3w==",
            "requires": {
                "arr-flatten": "1.1.0",
                "array-unique": "0.3.2",
                "extend-shallow": "2.0.1",
                "fill-range": "4.0.0",
                "isobject": "3.0.1",
                "repeat-element": "1.1.3",
                "snapdragon": "0.8.2",
                "snapdragon-node": "2.1.1",
                "split-string": "3.1.0",
                "to-regex": "3.0.2"
            },
            "dependencies": {
                "extend-shallow": {
                    "version": "2.0.1",
                    "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
                    "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
                    "requires": {
                        "is-extendable": "0.1.1"
                    }
                }
            }
        },
        "browserslist": {
            "version": "1.7.7",
            "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-1.7.7.tgz",
            "integrity": "sha1-C9dnBCWL6CmyOYu1Dkti0aFmsLk=",
            "requires": {
                "caniuse-db": "1.0.30000885",
                "electron-to-chromium": "1.3.70"
            }
        },
        "buffer-from": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.1.tgz",
            "integrity": "sha512-MQcXEUbCKtEo7bhqEs6560Hyd4XaovZlO/k9V3hjVUF/zwW7KBVdSK4gIt/bzwS9MbR5qob+F5jusZsb0YQK2A=="
        },
        "bufferstreams": {
            "version": "1.1.3",
            "resolved": "https://registry.npmjs.org/bufferstreams/-/bufferstreams-1.1.3.tgz",
            "integrity": "sha512-HaJnVuslRF4g2kSDeyl++AaVizoitCpL9PglzCYwy0uHHyvWerfvEb8jWmYbF1z4kiVFolGomnxSGl+GUQp2jg==",
            "requires": {
                "readable-stream": "2.3.6"
            },
            "dependencies": {
                "isarray": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
                    "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
                },
                "readable-stream": {
                    "version": "2.3.6",
                    "resolved": "http://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz",
                    "integrity": "sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==",
                    "requires": {
                        "core-util-is": "1.0.2",
                        "inherits": "2.0.3",
                        "isarray": "1.0.0",
                        "process-nextick-args": "2.0.0",
                        "safe-buffer": "5.1.2",
                        "string_decoder": "1.1.1",
                        "util-deprecate": "1.0.2"
                    }
                },
                "string_decoder": {
                    "version": "1.1.1",
                    "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
                    "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
                    "requires": {
                        "safe-buffer": "5.1.2"
                    }
                }
            }
        },
        "builtin-modules": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/builtin-modules/-/builtin-modules-1.1.1.tgz",
            "integrity": "sha1-Jw8HbFpywC9bZaR9+Uxf46J4iS8="
        },
        "bytes": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.0.0.tgz",
            "integrity": "sha1-0ygVQE1olpn4Wk6k+odV3ROpYEg="
        },
        "cache-base": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/cache-base/-/cache-base-1.0.1.tgz",
            "integrity": "sha512-AKcdTnFSWATd5/GCPRxr2ChwIJ85CeyrEyjRHlKxQ56d4XJMGym0uAiKn0xbLOGOl3+yRpOTi484dVCEc5AUzQ==",
            "requires": {
                "collection-visit": "1.0.0",
                "component-emitter": "1.2.1",
                "get-value": "2.0.6",
                "has-value": "1.0.0",
                "isobject": "3.0.1",
                "set-value": "2.0.0",
                "to-object-path": "0.3.0",
                "union-value": "1.0.0",
                "unset-value": "1.0.0"
            }
        },
        "caller-path": {
            "version": "0.1.0",
            "resolved": "https://registry.npmjs.org/caller-path/-/caller-path-0.1.0.tgz",
            "integrity": "sha1-lAhe9jWB7NPaqSREqP6U6CV3dR8=",
            "requires": {
                "callsites": "0.2.0"
            }
        },
        "callsites": {
            "version": "0.2.0",
            "resolved": "https://registry.npmjs.org/callsites/-/callsites-0.2.0.tgz",
            "integrity": "sha1-r6uWJikQp/M8GaV3WCXGnzTjUMo="
        },
        "camelcase": {
            "version": "2.1.1",
            "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-2.1.1.tgz",
            "integrity": "sha1-fB0W1nmhu+WcoCys7PsBHiAfWh8="
        },
        "camelcase-keys": {
            "version": "2.1.0",
            "resolved": "https://registry.npmjs.org/camelcase-keys/-/camelcase-keys-2.1.0.tgz",
            "integrity": "sha1-MIvur/3ygRkFHvodkyITyRuPkuc=",
            "requires": {
                "camelcase": "2.1.1",
                "map-obj": "1.0.1"
            }
        },
        "caniuse-db": {
            "version": "1.0.30000885",
            "resolved": "https://registry.npmjs.org/caniuse-db/-/caniuse-db-1.0.30000885.tgz",
            "integrity": "sha512-Hy1a+UIXooG+tRlt3WnT9avMf+l999bR9J1MqlQdYKgbsYjKxV4a4rgcmiyMmdCLPBFsiRoDxdl9tnNyaq2RXw=="
        },
        "caseless": {
            "version": "0.12.0",
            "resolved": "https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz",
            "integrity": "sha1-G2gcIf+EAzyCZUMJBolCDRhxUdw="
        },
        "center-align": {
            "version": "0.1.3",
            "resolved": "https://registry.npmjs.org/center-align/-/center-align-0.1.3.tgz",
            "integrity": "sha1-qg0yYptu6XIgBBHL1EYckHvCt60=",
            "requires": {
                "align-text": "0.1.4",
                "lazy-cache": "1.0.4"
            }
        },
        "chalk": {
            "version": "1.1.3",
            "resolved": "http://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",
            "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
            "requires": {
                "ansi-styles": "2.2.1",
                "escape-string-regexp": "1.0.5",
                "has-ansi": "2.0.0",
                "strip-ansi": "3.0.1",
                "supports-color": "2.0.0"
            }
        },
        "chardet": {
            "version": "0.4.2",
            "resolved": "https://registry.npmjs.org/chardet/-/chardet-0.4.2.tgz",
            "integrity": "sha1-tUc7M9yXxCTl2Y3IfVXU2KKci/I="
        },
        "chokidar": {
            "version": "1.7.0",
            "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-1.7.0.tgz",
            "integrity": "sha1-eY5ol3gVHIB2tLNg5e3SjNortGg=",
            "requires": {
                "anymatch": "1.3.2",
                "async-each": "1.0.1",
                "fsevents": "1.2.4",
                "glob-parent": "2.0.0",
                "inherits": "2.0.3",
                "is-binary-path": "1.0.1",
                "is-glob": "2.0.1",
                "path-is-absolute": "1.0.1",
                "readdirp": "2.2.1"
            },
            "dependencies": {
                "is-extglob": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-1.0.0.tgz",
                    "integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA="
                },
                "is-glob": {
                    "version": "2.0.1",
                    "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-2.0.1.tgz",
                    "integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
                    "requires": {
                        "is-extglob": "1.0.0"
                    }
                }
            }
        },
        "circular-json": {
            "version": "0.3.3",
            "resolved": "https://registry.npmjs.org/circular-json/-/circular-json-0.3.3.tgz",
            "integrity": "sha512-UZK3NBx2Mca+b5LsG7bY183pHWt5Y1xts4P3Pz7ENTwGVnJOUWbRb3ocjvX7hx9tq/yTAdclXm9sZ38gNuem4A=="
        },
        "class-utils": {
            "version": "0.3.6",
            "resolved": "https://registry.npmjs.org/class-utils/-/class-utils-0.3.6.tgz",
            "integrity": "sha512-qOhPa/Fj7s6TY8H8esGu5QNpMMQxz79h+urzrNYN6mn+9BnxlDGf5QZ+XeCDsxSjPqsSR56XOZOJmpeurnLMeg==",
            "requires": {
                "arr-union": "3.1.0",
                "define-property": "0.2.5",
                "isobject": "3.0.1",
                "static-extend": "0.1.2"
            },
            "dependencies": {
                "define-property": {
                    "version": "0.2.5",
                    "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
                    "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
                    "requires": {
                        "is-descriptor": "0.1.6"
                    }
                }
            }
        },
        "cli-cursor": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-1.0.2.tgz",
            "integrity": "sha1-ZNo/fValRBLll5S9Ytw1KV6PKYc=",
            "requires": {
                "restore-cursor": "1.0.1"
            }
        },
        "cli-width": {
            "version": "2.2.0",
            "resolved": "https://registry.npmjs.org/cli-width/-/cli-width-2.2.0.tgz",
            "integrity": "sha1-/xnt6Kml5XkyQUewwR8PvLq+1jk="
        },
        "cliui": {
            "version": "3.2.0",
            "resolved": "https://registry.npmjs.org/cliui/-/cliui-3.2.0.tgz",
            "integrity": "sha1-EgYBU3qRbSmUD5NNo7SNWFo5IT0=",
            "requires": {
                "string-width": "1.0.2",
                "strip-ansi": "3.0.1",
                "wrap-ansi": "2.1.0"
            }
        },
        "clone": {
            "version": "1.0.4",
            "resolved": "https://registry.npmjs.org/clone/-/clone-1.0.4.tgz",
            "integrity": "sha1-2jCcwmPfFZlMaIypAheco8fNfH4="
        },
        "clone-buffer": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/clone-buffer/-/clone-buffer-1.0.0.tgz",
            "integrity": "sha1-4+JbIHrE5wGvch4staFnksrD3Fg="
        },
        "clone-stats": {
            "version": "0.0.1",
            "resolved": "https://registry.npmjs.org/clone-stats/-/clone-stats-0.0.1.tgz",
            "integrity": "sha1-uI+UqCzzi4eR1YBG6kAprYjKmdE="
        },
        "cloneable-readable": {
            "version": "1.1.2",
            "resolved": "https://registry.npmjs.org/cloneable-readable/-/cloneable-readable-1.1.2.tgz",
            "integrity": "sha512-Bq6+4t+lbM8vhTs/Bef5c5AdEMtapp/iFb6+s4/Hh9MVTt8OLKH7ZOOZSCT+Ys7hsHvqv0GuMPJ1lnQJVHvxpg==",
            "requires": {
                "inherits": "2.0.3",
                "process-nextick-args": "2.0.0",
                "readable-stream": "2.3.6"
            },
            "dependencies": {
                "isarray": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
                    "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
                },
                "readable-stream": {
                    "version": "2.3.6",
                    "resolved": "http://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz",
                    "integrity": "sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==",
                    "requires": {
                        "core-util-is": "1.0.2",
                        "inherits": "2.0.3",
                        "isarray": "1.0.0",
                        "process-nextick-args": "2.0.0",
                        "safe-buffer": "5.1.2",
                        "string_decoder": "1.1.1",
                        "util-deprecate": "1.0.2"
                    }
                },
                "string_decoder": {
                    "version": "1.1.1",
                    "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
                    "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
                    "requires": {
                        "safe-buffer": "5.1.2"
                    }
                }
            }
        },
        "co": {
            "version": "4.6.0",
            "resolved": "https://registry.npmjs.org/co/-/co-4.6.0.tgz",
            "integrity": "sha1-bqa989hTrlTMuOR7+gvz+QMfsYQ="
        },
        "code-point-at": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/code-point-at/-/code-point-at-1.1.0.tgz",
            "integrity": "sha1-DQcLTQQ6W+ozovGkDi7bPZpMz3c="
        },
        "collection-visit": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/collection-visit/-/collection-visit-1.0.0.tgz",
            "integrity": "sha1-S8A3PBZLwykbTTaMgpzxqApZ3KA=",
            "requires": {
                "map-visit": "1.0.0",
                "object-visit": "1.0.1"
            }
        },
        "color-convert": {
            "version": "1.9.3",
            "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
            "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
            "requires": {
                "color-name": "1.1.3"
            }
        },
        "color-name": {
            "version": "1.1.3",
            "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
            "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU="
        },
        "color-support": {
            "version": "1.1.3",
            "resolved": "https://registry.npmjs.org/color-support/-/color-support-1.1.3.tgz",
            "integrity": "sha512-qiBjkpbMLO/HL68y+lh4q0/O1MZFj2RX6X/KmMa3+gJD3z+WwI1ZzDHysvqHGS3mP6mznPckpXmw1nI9cJjyRg=="
        },
        "colors": {
            "version": "1.3.2",
            "resolved": "https://registry.npmjs.org/colors/-/colors-1.3.2.tgz",
            "integrity": "sha512-rhP0JSBGYvpcNQj4s5AdShMeE5ahMop96cTeDl/v9qQQm2fYClE2QXZRi8wLzc+GmXSxdIqqbOIAhyObEXDbfQ=="
        },
        "combined-stream": {
            "version": "1.0.6",
            "resolved": "http://registry.npmjs.org/combined-stream/-/combined-stream-1.0.6.tgz",
            "integrity": "sha1-cj599ugBrFYTETp+RFqbactjKBg=",
            "requires": {
                "delayed-stream": "1.0.0"
            }
        },
        "commander": {
            "version": "2.17.1",
            "resolved": "https://registry.npmjs.org/commander/-/commander-2.17.1.tgz",
            "integrity": "sha512-wPMUt6FnH2yzG95SA6mzjQOEKUU3aLaDEmzs1ti+1E9h+CsrZghRlqEM/EJ4KscsQVG8uNN4uVreUeT8+drlgg==",
            "optional": true
        },
        "component-emitter": {
            "version": "1.2.1",
            "resolved": "https://registry.npmjs.org/component-emitter/-/component-emitter-1.2.1.tgz",
            "integrity": "sha1-E3kY1teCg/ffemt8WmPhQOaUJeY="
        },
        "concat-map": {
            "version": "0.0.1",
            "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
            "integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s="
        },
        "concat-stream": {
            "version": "1.6.2",
            "resolved": "https://registry.npmjs.org/concat-stream/-/concat-stream-1.6.2.tgz",
            "integrity": "sha512-27HBghJxjiZtIk3Ycvn/4kbJk/1uZuJFfuPEns6LaEvpvG1f0hTea8lilrouyo9mVc2GWdcEZ8OLoGmSADlrCw==",
            "requires": {
                "buffer-from": "1.1.1",
                "inherits": "2.0.3",
                "readable-stream": "2.3.6",
                "typedarray": "0.0.6"
            },
            "dependencies": {
                "isarray": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
                    "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
                },
                "readable-stream": {
                    "version": "2.3.6",
                    "resolved": "http://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz",
                    "integrity": "sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==",
                    "requires": {
                        "core-util-is": "1.0.2",
                        "inherits": "2.0.3",
                        "isarray": "1.0.0",
                        "process-nextick-args": "2.0.0",
                        "safe-buffer": "5.1.2",
                        "string_decoder": "1.1.1",
                        "util-deprecate": "1.0.2"
                    }
                },
                "string_decoder": {
                    "version": "1.1.1",
                    "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
                    "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
                    "requires": {
                        "safe-buffer": "5.1.2"
                    }
                }
            }
        },
        "concat-with-sourcemaps": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/concat-with-sourcemaps/-/concat-with-sourcemaps-1.1.0.tgz",
            "integrity": "sha512-4gEjHJFT9e+2W/77h/DS5SGUgwDaOwprX8L/gl5+3ixnzkVJJsZWDSelmN3Oilw3LNDZjZV0yqH1hLG3k6nghg==",
            "requires": {
                "source-map": "0.6.1"
            },
            "dependencies": {
                "source-map": {
                    "version": "0.6.1",
                    "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
                    "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="
                }
            }
        },
        "console-control-strings": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/console-control-strings/-/console-control-strings-1.1.0.tgz",
            "integrity": "sha1-PXz0Rk22RG6mRL9LOVB/mFEAjo4="
        },
        "content-type": {
            "version": "1.0.4",
            "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.4.tgz",
            "integrity": "sha512-hIP3EEPs8tB9AT1L+NUqtwOAps4mk2Zob89MWXMHjHWg9milF/j4osnnQLXBCBFBk/tvIG/tUc9mOUJiPBhPXA=="
        },
        "contentstream": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/contentstream/-/contentstream-1.0.0.tgz",
            "integrity": "sha1-C9z6RtowRkqGzo+n7OVlQQ3G+aU=",
            "requires": {
                "readable-stream": "1.0.34"
            },
            "dependencies": {
                "readable-stream": {
                    "version": "1.0.34",
                    "resolved": "http://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz",
                    "integrity": "sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=",
                    "requires": {
                        "core-util-is": "1.0.2",
                        "inherits": "2.0.3",
                        "isarray": "0.0.1",
                        "string_decoder": "0.10.31"
                    }
                }
            }
        },
        "convert-source-map": {
            "version": "1.6.0",
            "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.6.0.tgz",
            "integrity": "sha512-eFu7XigvxdZ1ETfbgPBohgyQ/Z++C0eEhTor0qRwBw9unw+L0/6V8wkSuGgzdThkiS5lSpdptOQPD8Ak40a+7A==",
            "requires": {
                "safe-buffer": "5.1.2"
            }
        },
        "copy-descriptor": {
            "version": "0.1.1",
            "resolved": "https://registry.npmjs.org/copy-descriptor/-/copy-descriptor-0.1.1.tgz",
            "integrity": "sha1-Z29us8OZl8LuGsOpJP1hJHSPV40="
        },
        "copy-props": {
            "version": "1.6.0",
            "resolved": "https://registry.npmjs.org/copy-props/-/copy-props-1.6.0.tgz",
            "integrity": "sha1-8DJLvumXcRAeezraES8xPDk9uO0=",
            "requires": {
                "each-props": "1.3.2",
                "is-plain-object": "2.0.4"
            }
        },
        "copy-to": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/copy-to/-/copy-to-2.0.1.tgz",
            "integrity": "sha1-JoD7uAaKSNCGVrYJgJK9r8kG9KU="
        },
        "core-js": {
            "version": "2.5.7",
            "resolved": "https://registry.npmjs.org/core-js/-/core-js-2.5.7.tgz",
            "integrity": "sha512-RszJCAxg/PP6uzXVXL6BsxSXx/B05oJAQ2vkJRjyjrEcNVycaqOmNb5OTxZPE3xa5gwZduqza6L9JOCenh/Ecw=="
        },
        "core-util-is": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz",
            "integrity": "sha1-tf1UIgqivFq1eqtxQMlAdUUDwac="
        },
        "cross-spawn": {
            "version": "3.0.1",
            "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-3.0.1.tgz",
            "integrity": "sha1-ElYDfsufDF9549bvE14wdwGEuYI=",
            "requires": {
                "lru-cache": "4.1.3",
                "which": "1.3.1"
            },
            "dependencies": {
                "lru-cache": {
                    "version": "4.1.3",
                    "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.3.tgz",
                    "integrity": "sha512-fFEhvcgzuIoJVUF8fYr5KR0YqxD238zgObTps31YdADwPPAp82a4M8TrckkWyx7ekNlf9aBcVn81cFwwXngrJA==",
                    "requires": {
                        "pseudomap": "1.0.2",
                        "yallist": "2.1.2"
                    }
                }
            }
        },
        "css": {
            "version": "2.2.4",
            "resolved": "https://registry.npmjs.org/css/-/css-2.2.4.tgz",
            "integrity": "sha512-oUnjmWpy0niI3x/mPL8dVEI1l7MnG3+HHyRPHf+YFSbK+svOhXpmSOcDURUh2aOCgl2grzrOPt1nHLuCVFULLw==",
            "requires": {
                "inherits": "2.0.3",
                "source-map": "0.6.1",
                "source-map-resolve": "0.5.2",
                "urix": "0.1.0"
            },
            "dependencies": {
                "source-map": {
                    "version": "0.6.1",
                    "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
                    "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="
                }
            }
        },
        "currently-unhandled": {
            "version": "0.4.1",
            "resolved": "https://registry.npmjs.org/currently-unhandled/-/currently-unhandled-0.4.1.tgz",
            "integrity": "sha1-mI3zP+qxke95mmE2nddsF635V+o=",
            "requires": {
                "array-find-index": "1.0.2"
            }
        },
        "cwise": {
            "version": "1.0.10",
            "resolved": "https://registry.npmjs.org/cwise/-/cwise-1.0.10.tgz",
            "integrity": "sha1-JO7mBy69/WuMb12tsXCQtkmxK+8=",
            "requires": {
                "cwise-compiler": "1.1.3",
                "cwise-parser": "1.0.3",
                "static-module": "1.5.0",
                "uglify-js": "2.8.29"
            },
            "dependencies": {
                "camelcase": {
                    "version": "1.2.1",
                    "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-1.2.1.tgz",
                    "integrity": "sha1-m7UwTS4LVmmLLHWLCKPqqdqlijk="
                },
                "cliui": {
                    "version": "2.1.0",
                    "resolved": "https://registry.npmjs.org/cliui/-/cliui-2.1.0.tgz",
                    "integrity": "sha1-S0dXYP+AJkx2LDoXGQMukcf+oNE=",
                    "requires": {
                        "center-align": "0.1.3",
                        "right-align": "0.1.3",
                        "wordwrap": "0.0.2"
                    }
                },
                "uglify-js": {
                    "version": "2.8.29",
                    "resolved": "https://registry.npmjs.org/uglify-js/-/uglify-js-2.8.29.tgz",
                    "integrity": "sha1-KcVzMUgFe7Th913zW3qcty5qWd0=",
                    "requires": {
                        "source-map": "0.5.7",
                        "uglify-to-browserify": "1.0.2",
                        "yargs": "3.10.0"
                    }
                },
                "window-size": {
                    "version": "0.1.0",
                    "resolved": "https://registry.npmjs.org/window-size/-/window-size-0.1.0.tgz",
                    "integrity": "sha1-VDjNLqk7IC76Ohn+iIeu58lPnJ0="
                },
                "wordwrap": {
                    "version": "0.0.2",
                    "resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.2.tgz",
                    "integrity": "sha1-t5Zpu0LstAn4PVg8rVLKF+qhZD8="
                },
                "yargs": {
                    "version": "3.10.0",
                    "resolved": "http://registry.npmjs.org/yargs/-/yargs-3.10.0.tgz",
                    "integrity": "sha1-9+572FfdfB0tOMDnTvvWgdFDH9E=",
                    "requires": {
                        "camelcase": "1.2.1",
                        "cliui": "2.1.0",
                        "decamelize": "1.2.0",
                        "window-size": "0.1.0"
                    }
                }
            }
        },
        "cwise-compiler": {
            "version": "1.1.3",
            "resolved": "https://registry.npmjs.org/cwise-compiler/-/cwise-compiler-1.1.3.tgz",
            "integrity": "sha1-9NZnQQ6FDToxOn0tt7HlBbsDTMU=",
            "requires": {
                "uniq": "1.0.1"
            }
        },
        "cwise-parser": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/cwise-parser/-/cwise-parser-1.0.3.tgz",
            "integrity": "sha1-jkk8F9VPl8sDCp6YVLyGyd+zVP4=",
            "requires": {
                "esprima": "1.2.5",
                "uniq": "1.0.1"
            },
            "dependencies": {
                "esprima": {
                    "version": "1.2.5",
                    "resolved": "https://registry.npmjs.org/esprima/-/esprima-1.2.5.tgz",
                    "integrity": "sha1-CZNQL+r2aBODJXVvMPmlH+7sEek="
                }
            }
        },
        "d": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/d/-/d-1.0.0.tgz",
            "integrity": "sha1-dUu1v+VUUdpppYuU1F9MWwRi1Y8=",
            "requires": {
                "es5-ext": "0.10.46"
            }
        },
        "dashdash": {
            "version": "1.14.1",
            "resolved": "https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz",
            "integrity": "sha1-hTz6D3y+L+1d4gMmuN1YEDX24vA=",
            "requires": {
                "assert-plus": "1.0.0"
            }
        },
        "data-uri-to-buffer": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/data-uri-to-buffer/-/data-uri-to-buffer-1.2.0.tgz",
            "integrity": "sha512-vKQ9DTQPN1FLYiiEEOQ6IBGFqvjCa5rSK3cWMy/Nespm5d/x3dGFT9UBZnkLxCwua/IXBi2TYnwTEpsOvhC4UQ=="
        },
        "dateformat": {
            "version": "2.2.0",
            "resolved": "https://registry.npmjs.org/dateformat/-/dateformat-2.2.0.tgz",
            "integrity": "sha1-QGXiATz5+5Ft39gu+1Bq1MZ2kGI="
        },
        "debug": {
            "version": "2.6.9",
            "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
            "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
            "requires": {
                "ms": "2.0.0"
            }
        },
        "debug-fabulous": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/debug-fabulous/-/debug-fabulous-1.1.0.tgz",
            "integrity": "sha512-GZqvGIgKNlUnHUPQhepnUZFIMoi3dgZKQBzKDeL2g7oJF9SNAji/AAu36dusFUas0O+pae74lNeoIPHqXWDkLg==",
            "requires": {
                "debug": "3.2.5",
                "memoizee": "0.4.14",
                "object-assign": "4.1.1"
            },
            "dependencies": {
                "debug": {
                    "version": "3.2.5",
                    "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.5.tgz",
                    "integrity": "sha512-D61LaDQPQkxJ5AUM2mbSJRbPkNs/TmdmOeLAi1hgDkpDfIfetSrjmWhccwtuResSwMbACjx/xXQofvM9CE/aeg==",
                    "requires": {
                        "ms": "2.1.1"
                    }
                },
                "ms": {
                    "version": "2.1.1",
                    "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.1.tgz",
                    "integrity": "sha512-tgp+dl5cGk28utYktBsrFqA7HKgrhgPsg6Z/EfhWI4gl1Hwq8B/GmY/0oXZ6nF8hDVesS/FpnYaD/kOWhYQvyg=="
                },
                "object-assign": {
                    "version": "4.1.1",
                    "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
                    "integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
                }
            }
        },
        "decamelize": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz",
            "integrity": "sha1-9lNNFRSCabIDUue+4m9QH5oZEpA="
        },
        "decode-uri-component": {
            "version": "0.2.0",
            "resolved": "https://registry.npmjs.org/decode-uri-component/-/decode-uri-component-0.2.0.tgz",
            "integrity": "sha1-6zkTMzRYd1y4TNGh+uBiEGu4dUU="
        },
        "deep-is": {
            "version": "0.1.3",
            "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.3.tgz",
            "integrity": "sha1-s2nW+128E+7PUk+RsHD+7cNXzzQ="
        },
        "default-user-agent": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/default-user-agent/-/default-user-agent-1.0.0.tgz",
            "integrity": "sha1-FsRu/cq6PtxF8k8r1IaLAbfCrcY=",
            "requires": {
                "os-name": "1.0.3"
            }
        },
        "defaults": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/defaults/-/defaults-1.0.3.tgz",
            "integrity": "sha1-xlYFHpgX2f8I7YgUd/P+QBnz730=",
            "requires": {
                "clone": "1.0.4"
            }
        },
        "define-property": {
            "version": "2.0.2",
            "resolved": "https://registry.npmjs.org/define-property/-/define-property-2.0.2.tgz",
            "integrity": "sha512-jwK2UV4cnPpbcG7+VRARKTZPUWowwXA8bzH5NP6ud0oeAxyYPuGZUAC7hMugpCdz4BeSZl2Dl9k66CHJ/46ZYQ==",
            "requires": {
                "is-descriptor": "1.0.2",
                "isobject": "3.0.1"
            },
            "dependencies": {
                "is-accessor-descriptor": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
                    "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
                    "requires": {
                        "kind-of": "6.0.2"
                    }
                },
                "is-data-descriptor": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
                    "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
                    "requires": {
                        "kind-of": "6.0.2"
                    }
                },
                "is-descriptor": {
                    "version": "1.0.2",
                    "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
                    "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
                    "requires": {
                        "is-accessor-descriptor": "1.0.0",
                        "is-data-descriptor": "1.0.0",
                        "kind-of": "6.0.2"
                    }
                }
            }
        },
        "degenerator": {
            "version": "1.0.4",
            "resolved": "https://registry.npmjs.org/degenerator/-/degenerator-1.0.4.tgz",
            "integrity": "sha1-/PSQo37OJmRk2cxDGrmMWBnO0JU=",
            "requires": {
                "ast-types": "0.11.5",
                "escodegen": "1.11.0",
                "esprima": "3.1.3"
            },
            "dependencies": {
                "esprima": {
                    "version": "3.1.3",
                    "resolved": "https://registry.npmjs.org/esprima/-/esprima-3.1.3.tgz",
                    "integrity": "sha1-/cpRzuYTOJXjyI1TXOSdv/YqRjM="
                }
            }
        },
        "del": {
            "version": "2.2.2",
            "resolved": "https://registry.npmjs.org/del/-/del-2.2.2.tgz",
            "integrity": "sha1-wSyYHQZ4RshLyvhiz/kw2Qf/0ag=",
            "requires": {
                "globby": "5.0.0",
                "is-path-cwd": "1.0.0",
                "is-path-in-cwd": "1.0.1",
                "object-assign": "4.1.1",
                "pify": "2.3.0",
                "pinkie-promise": "2.0.1",
                "rimraf": "2.6.2"
            },
            "dependencies": {
                "object-assign": {
                    "version": "4.1.1",
                    "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
                    "integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
                }
            }
        },
        "delayed-stream": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
            "integrity": "sha1-3zrhmayt+31ECqrgsp4icrJOxhk="
        },
        "delegates": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/delegates/-/delegates-1.0.0.tgz",
            "integrity": "sha1-hMbhWbgZBP3KWaDvRM2HDTElD5o="
        },
        "depd": {
            "version": "1.1.2",
            "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",
            "integrity": "sha1-m81S4UwJd2PnSbJ0xDRu0uVgtak="
        },
        "deprecated": {
            "version": "0.0.1",
            "resolved": "https://registry.npmjs.org/deprecated/-/deprecated-0.0.1.tgz",
            "integrity": "sha1-+cmvVGSvoeepcUWKi97yqpTVuxk="
        },
        "destroy": {
            "version": "1.0.4",
            "resolved": "https://registry.npmjs.org/destroy/-/destroy-1.0.4.tgz",
            "integrity": "sha1-l4hXRCxEdJ5CBmE+N5RiBYJqvYA="
        },
        "detect-file": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/detect-file/-/detect-file-1.0.0.tgz",
            "integrity": "sha1-8NZtA2cqglyxtzvbP+YjEMjlUrc="
        },
        "detect-indent": {
            "version": "4.0.0",
            "resolved": "https://registry.npmjs.org/detect-indent/-/detect-indent-4.0.0.tgz",
            "integrity": "sha1-920GQ1LN9Docts5hnE7jqUdd4gg=",
            "requires": {
                "repeating": "2.0.1"
            }
        },
        "detect-newline": {
            "version": "2.1.0",
            "resolved": "https://registry.npmjs.org/detect-newline/-/detect-newline-2.1.0.tgz",
            "integrity": "sha1-9B8cEL5LAOh7XxPaaAdZ8sW/0+I="
        },
        "digest-header": {
            "version": "0.0.1",
            "resolved": "https://registry.npmjs.org/digest-header/-/digest-header-0.0.1.tgz",
            "integrity": "sha1-Ecz23uxXZqw3l0TZAcEsuklRS+Y=",
            "requires": {
                "utility": "0.1.11"
            },
            "dependencies": {
                "utility": {
                    "version": "0.1.11",
                    "resolved": "http://registry.npmjs.org/utility/-/utility-0.1.11.tgz",
                    "integrity": "sha1-/eYM+bTkdRlHoM9dEEzik2ciZxU=",
                    "requires": {
                        "address": "1.0.3"
                    }
                }
            }
        },
        "doctrine": {
            "version": "2.1.0",
            "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz",
            "integrity": "sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==",
            "requires": {
                "esutils": "2.0.2"
            }
        },
        "duplexer": {
            "version": "0.1.1",
            "resolved": "http://registry.npmjs.org/duplexer/-/duplexer-0.1.1.tgz",
            "integrity": "sha1-rOb/gIwc5mtX0ev5eXessCM0z8E="
        },
        "duplexer2": {
            "version": "0.0.2",
            "resolved": "https://registry.npmjs.org/duplexer2/-/duplexer2-0.0.2.tgz",
            "integrity": "sha1-xhTc9n4vsUmVqRcR5aYX6KYKMds=",
            "requires": {
                "readable-stream": "1.1.14"
            }
        },
        "duplexify": {
            "version": "3.6.0",
            "resolved": "https://registry.npmjs.org/duplexify/-/duplexify-3.6.0.tgz",
            "integrity": "sha512-fO3Di4tBKJpYTFHAxTU00BcfWMY9w24r/x21a6rZRbsD/ToUgGxsMbiGRmB7uVAXeGKXD9MwiLZa5E97EVgIRQ==",
            "requires": {
                "end-of-stream": "1.4.1",
                "inherits": "2.0.3",
                "readable-stream": "2.3.6",
                "stream-shift": "1.0.0"
            },
            "dependencies": {
                "end-of-stream": {
                    "version": "1.4.1",
                    "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.1.tgz",
                    "integrity": "sha512-1MkrZNvWTKCaigbn+W15elq2BB/L22nqrSY5DKlo3X6+vclJm8Bb5djXJBmEX6fS3+zCh/F4VBK5Z2KxJt4s2Q==",
                    "requires": {
                        "once": "1.4.0"
                    }
                },
                "isarray": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
                    "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
                },
                "once": {
                    "version": "1.4.0",
                    "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
                    "integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",
                    "requires": {
                        "wrappy": "1.0.2"
                    }
                },
                "readable-stream": {
                    "version": "2.3.6",
                    "resolved": "http://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz",
                    "integrity": "sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==",
                    "requires": {
                        "core-util-is": "1.0.2",
                        "inherits": "2.0.3",
                        "isarray": "1.0.0",
                        "process-nextick-args": "2.0.0",
                        "safe-buffer": "5.1.2",
                        "string_decoder": "1.1.1",
                        "util-deprecate": "1.0.2"
                    }
                },
                "string_decoder": {
                    "version": "1.1.1",
                    "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
                    "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
                    "requires": {
                        "safe-buffer": "5.1.2"
                    }
                }
            }
        },
        "each-props": {
            "version": "1.3.2",
            "resolved": "https://registry.npmjs.org/each-props/-/each-props-1.3.2.tgz",
            "integrity": "sha512-vV0Hem3zAGkJAyU7JSjixeU66rwdynTAa1vofCrSA5fEln+m67Az9CcnkVD776/fsN/UjIWmBDoNRS6t6G9RfA==",
            "requires": {
                "is-plain-object": "2.0.4",
                "object.defaults": "1.1.0"
            }
        },
        "ecc-jsbn": {
            "version": "0.1.2",
            "resolved": "https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz",
            "integrity": "sha1-OoOpBOVDUyh4dMVkt1SThoSamMk=",
            "optional": true,
            "requires": {
                "jsbn": "0.1.1",
                "safer-buffer": "2.1.2"
            }
        },
        "ee-first": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
            "integrity": "sha1-WQxhFWsK4vTwJVcyoViyZrxWsh0="
        },
        "electron-to-chromium": {
            "version": "1.3.70",
            "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.3.70.tgz",
            "integrity": "sha512-WYMjqCnPVS5JA+XvwEnpwucJpVi2+q9cdCFpbhxgWGsCtforFBEkuP9+nCyy/wnU/0SyLcLRIeZct9ayMGcXoQ=="
        },
        "end-of-stream": {
            "version": "0.1.5",
            "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-0.1.5.tgz",
            "integrity": "sha1-jhdyBsPICDfYVjLouTWd/osvbq8=",
            "requires": {
                "once": "1.3.3"
            }
        },
        "error-ex": {
            "version": "1.3.2",
            "resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz",
            "integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==",
            "requires": {
                "is-arrayish": "0.2.1"
            }
        },
        "es5-ext": {
            "version": "0.10.46",
            "resolved": "https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.46.tgz",
            "integrity": "sha512-24XxRvJXNFwEMpJb3nOkiRJKRoupmjYmOPVlI65Qy2SrtxwOTB+g6ODjBKOtwEHbYrhWRty9xxOWLNdClT2djw==",
            "requires": {
                "es6-iterator": "2.0.3",
                "es6-symbol": "3.1.1",
                "next-tick": "1.0.0"
            }
        },
        "es6-iterator": {
            "version": "2.0.3",
            "resolved": "https://registry.npmjs.org/es6-iterator/-/es6-iterator-2.0.3.tgz",
            "integrity": "sha1-p96IkUGgWpSwhUQDstCg+/qY87c=",
            "requires": {
                "d": "1.0.0",
                "es5-ext": "0.10.46",
                "es6-symbol": "3.1.1"
            }
        },
        "es6-map": {
            "version": "0.1.5",
            "resolved": "https://registry.npmjs.org/es6-map/-/es6-map-0.1.5.tgz",
            "integrity": "sha1-kTbgUD3MBqMBaQ8LsU/042TpSfA=",
            "requires": {
                "d": "1.0.0",
                "es5-ext": "0.10.46",
                "es6-iterator": "2.0.3",
                "es6-set": "0.1.5",
                "es6-symbol": "3.1.1",
                "event-emitter": "0.3.5"
            }
        },
        "es6-promise": {
            "version": "4.2.5",
            "resolved": "https://registry.npmjs.org/es6-promise/-/es6-promise-4.2.5.tgz",
            "integrity": "sha512-n6wvpdE43VFtJq+lUDYDBFUwV8TZbuGXLV4D6wKafg13ldznKsyEvatubnmUe31zcvelSzOHF+XbaT+Bl9ObDg=="
        },
        "es6-promisify": {
            "version": "5.0.0",
            "resolved": "https://registry.npmjs.org/es6-promisify/-/es6-promisify-5.0.0.tgz",
            "integrity": "sha1-UQnWLz5W6pZ8S2NQWu8IKRyKUgM=",
            "requires": {
                "es6-promise": "4.2.5"
            }
        },
        "es6-set": {
            "version": "0.1.5",
            "resolved": "https://registry.npmjs.org/es6-set/-/es6-set-0.1.5.tgz",
            "integrity": "sha1-0rPsXU2ADO2BjbU40ol02wpzzLE=",
            "requires": {
                "d": "1.0.0",
                "es5-ext": "0.10.46",
                "es6-iterator": "2.0.3",
                "es6-symbol": "3.1.1",
                "event-emitter": "0.3.5"
            }
        },
        "es6-symbol": {
            "version": "3.1.1",
            "resolved": "https://registry.npmjs.org/es6-symbol/-/es6-symbol-3.1.1.tgz",
            "integrity": "sha1-vwDvT9q2uhtG7Le2KbTH7VcVzHc=",
            "requires": {
                "d": "1.0.0",
                "es5-ext": "0.10.46"
            }
        },
        "es6-weak-map": {
            "version": "2.0.2",
            "resolved": "https://registry.npmjs.org/es6-weak-map/-/es6-weak-map-2.0.2.tgz",
            "integrity": "sha1-XjqzIlH/0VOKH45f+hNXdy+S2W8=",
            "requires": {
                "d": "1.0.0",
                "es5-ext": "0.10.46",
                "es6-iterator": "2.0.3",
                "es6-symbol": "3.1.1"
            }
        },
        "escape-html": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
            "integrity": "sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg="
        },
        "escape-string-regexp": {
            "version": "1.0.5",
            "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
            "integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ="
        },
        "escodegen": {
            "version": "1.11.0",
            "resolved": "https://registry.npmjs.org/escodegen/-/escodegen-1.11.0.tgz",
            "integrity": "sha512-IeMV45ReixHS53K/OmfKAIztN/igDHzTJUhZM3k1jMhIZWjk45SMwAtBsEXiJp3vSPmTcu6CXn7mDvFHRN66fw==",
            "requires": {
                "esprima": "3.1.3",
                "estraverse": "4.2.0",
                "esutils": "2.0.2",
                "optionator": "0.8.2",
                "source-map": "0.6.1"
            },
            "dependencies": {
                "esprima": {
                    "version": "3.1.3",
                    "resolved": "https://registry.npmjs.org/esprima/-/esprima-3.1.3.tgz",
                    "integrity": "sha1-/cpRzuYTOJXjyI1TXOSdv/YqRjM="
                },
                "source-map": {
                    "version": "0.6.1",
                    "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
                    "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
                    "optional": true
                }
            }
        },
        "escope": {
            "version": "3.6.0",
            "resolved": "https://registry.npmjs.org/escope/-/escope-3.6.0.tgz",
            "integrity": "sha1-4Bl16BJ4GhY6ba392AOY3GTIicM=",
            "requires": {
                "es6-map": "0.1.5",
                "es6-weak-map": "2.0.2",
                "esrecurse": "4.2.1",
                "estraverse": "4.2.0"
            }
        },
        "eslint": {
            "version": "3.19.0",
            "resolved": "https://registry.npmjs.org/eslint/-/eslint-3.19.0.tgz",
            "integrity": "sha1-yPxiAcf0DdCJQbh8CFdnOGpnmsw=",
            "requires": {
                "babel-code-frame": "6.26.0",
                "chalk": "1.1.3",
                "concat-stream": "1.6.2",
                "debug": "2.6.9",
                "doctrine": "2.1.0",
                "escope": "3.6.0",
                "espree": "3.5.4",
                "esquery": "1.0.1",
                "estraverse": "4.2.0",
                "esutils": "2.0.2",
                "file-entry-cache": "2.0.0",
                "glob": "7.1.3",
                "globals": "9.18.0",
                "ignore": "3.3.10",
                "imurmurhash": "0.1.4",
                "inquirer": "0.12.0",
                "is-my-json-valid": "2.19.0",
                "is-resolvable": "1.1.0",
                "js-yaml": "3.12.0",
                "json-stable-stringify": "1.0.1",
                "levn": "0.3.0",
                "lodash": "4.17.11",
                "mkdirp": "0.5.1",
                "natural-compare": "1.4.0",
                "optionator": "0.8.2",
                "path-is-inside": "1.0.2",
                "pluralize": "1.2.1",
                "progress": "1.1.8",
                "require-uncached": "1.0.3",
                "shelljs": "0.7.8",
                "strip-bom": "3.0.0",
                "strip-json-comments": "2.0.1",
                "table": "3.8.3",
                "text-table": "0.2.0",
                "user-home": "2.0.0"
            },
            "dependencies": {
                "glob": {
                    "version": "7.1.3",
                    "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.3.tgz",
                    "integrity": "sha512-vcfuiIxogLV4DlGBHIUOwI0IbrJ8HWPc4MU7HzviGeNho/UJDfi6B5p3sHeWIQ0KGIU0Jpxi5ZHxemQfLkkAwQ==",
                    "requires": {
                        "fs.realpath": "1.0.0",
                        "inflight": "1.0.6",
                        "inherits": "2.0.3",
                        "minimatch": "3.0.4",
                        "once": "1.3.3",
                        "path-is-absolute": "1.0.1"
                    }
                },
                "inquirer": {
                    "version": "0.12.0",
                    "resolved": "http://registry.npmjs.org/inquirer/-/inquirer-0.12.0.tgz",
                    "integrity": "sha1-HvK/1jUE3wvHV4X/+MLEHfEvB34=",
                    "requires": {
                        "ansi-escapes": "1.4.0",
                        "ansi-regex": "2.1.1",
                        "chalk": "1.1.3",
                        "cli-cursor": "1.0.2",
                        "cli-width": "2.2.0",
                        "figures": "1.7.0",
                        "lodash": "4.17.11",
                        "readline2": "1.0.1",
                        "run-async": "0.1.0",
                        "rx-lite": "3.1.2",
                        "string-width": "1.0.2",
                        "strip-ansi": "3.0.1",
                        "through": "2.3.8"
                    }
                },
                "strip-bom": {
                    "version": "3.0.0",
                    "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
                    "integrity": "sha1-IzTBjpx1n3vdVv3vfprj1YjmjtM="
                },
                "user-home": {
                    "version": "2.0.0",
                    "resolved": "https://registry.npmjs.org/user-home/-/user-home-2.0.0.tgz",
                    "integrity": "sha1-nHC/2Babwdy/SGBODwS4tJzenp8=",
                    "requires": {
                        "os-homedir": "1.0.2"
                    }
                }
            }
        },
        "espree": {
            "version": "3.5.4",
            "resolved": "https://registry.npmjs.org/espree/-/espree-3.5.4.tgz",
            "integrity": "sha512-yAcIQxtmMiB/jL32dzEp2enBeidsB7xWPLNiw3IIkpVds1P+h7qF9YwJq1yUNzp2OKXgAprs4F61ih66UsoD1A==",
            "requires": {
                "acorn": "5.7.3",
                "acorn-jsx": "3.0.1"
            }
        },
        "esprima": {
            "version": "4.0.1",
            "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
            "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A=="
        },
        "esquery": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.0.1.tgz",
            "integrity": "sha512-SmiyZ5zIWH9VM+SRUReLS5Q8a7GxtRdxEBVZpm98rJM7Sb+A9DVCndXfkeFUd3byderg+EbDkfnevfCwynWaNA==",
            "requires": {
                "estraverse": "4.2.0"
            }
        },
        "esrecurse": {
            "version": "4.2.1",
            "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.2.1.tgz",
            "integrity": "sha512-64RBB++fIOAXPw3P9cy89qfMlvZEXZkqqJkjqqXIvzP5ezRZjW+lPWjw35UX/3EhUPFYbg5ER4JYgDw4007/DQ==",
            "requires": {
                "estraverse": "4.2.0"
            }
        },
        "estraverse": {
            "version": "4.2.0",
            "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.2.0.tgz",
            "integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM="
        },
        "esutils": {
            "version": "2.0.2",
            "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.2.tgz",
            "integrity": "sha1-Cr9PHKpbyx96nYrMbepPqqBLrJs="
        },
        "event-emitter": {
            "version": "0.3.5",
            "resolved": "https://registry.npmjs.org/event-emitter/-/event-emitter-0.3.5.tgz",
            "integrity": "sha1-34xp7vFkeSPHFXuc6DhAYQsCzDk=",
            "requires": {
                "d": "1.0.0",
                "es5-ext": "0.10.46"
            }
        },
        "event-stream": {
            "version": "3.0.20",
            "resolved": "http://registry.npmjs.org/event-stream/-/event-stream-3.0.20.tgz",
            "integrity": "sha1-A4u7LqnqkDhbJvvBhU0LU58qvqM=",
            "requires": {
                "duplexer": "0.1.1",
                "from": "0.1.7",
                "map-stream": "0.0.7",
                "pause-stream": "0.0.11",
                "split": "0.2.10",
                "stream-combiner": "0.0.4",
                "through": "2.3.8"
            }
        },
        "exit-hook": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/exit-hook/-/exit-hook-1.1.1.tgz",
            "integrity": "sha1-8FyiM7SMBdVP/wd2XfhQfpXAL/g="
        },
        "expand-brackets": {
            "version": "2.1.4",
            "resolved": "https://registry.npmjs.org/expand-brackets/-/expand-brackets-2.1.4.tgz",
            "integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
            "requires": {
                "debug": "2.6.9",
                "define-property": "0.2.5",
                "extend-shallow": "2.0.1",
                "posix-character-classes": "0.1.1",
                "regex-not": "1.0.2",
                "snapdragon": "0.8.2",
                "to-regex": "3.0.2"
            },
            "dependencies": {
                "define-property": {
                    "version": "0.2.5",
                    "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
                    "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
                    "requires": {
                        "is-descriptor": "0.1.6"
                    }
                },
                "extend-shallow": {
                    "version": "2.0.1",
                    "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
                    "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
                    "requires": {
                        "is-extendable": "0.1.1"
                    }
                }
            }
        },
        "expand-range": {
            "version": "1.8.2",
            "resolved": "https://registry.npmjs.org/expand-range/-/expand-range-1.8.2.tgz",
            "integrity": "sha1-opnv/TNf4nIeuujiV+x5ZE/IUzc=",
            "requires": {
                "fill-range": "2.2.4"
            },
            "dependencies": {
                "fill-range": {
                    "version": "2.2.4",
                    "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-2.2.4.tgz",
                    "integrity": "sha512-cnrcCbj01+j2gTG921VZPnHbjmdAf8oQV/iGeV2kZxGSyfYjjTyY79ErsK1WJWMpw6DaApEX72binqJE+/d+5Q==",
                    "requires": {
                        "is-number": "2.1.0",
                        "isobject": "2.1.0",
                        "randomatic": "3.1.0",
                        "repeat-element": "1.1.3",
                        "repeat-string": "1.6.1"
                    }
                },
                "is-number": {
                    "version": "2.1.0",
                    "resolved": "https://registry.npmjs.org/is-number/-/is-number-2.1.0.tgz",
                    "integrity": "sha1-Afy7s5NGOlSPL0ZszhbezknbkI8=",
                    "requires": {
                        "kind-of": "3.2.2"
                    }
                },
                "isarray": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
                    "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
                },
                "isobject": {
                    "version": "2.1.0",
                    "resolved": "https://registry.npmjs.org/isobject/-/isobject-2.1.0.tgz",
                    "integrity": "sha1-8GVWEJaj8dou9GJy+BXIQNh+DIk=",
                    "requires": {
                        "isarray": "1.0.0"
                    }
                },
                "kind-of": {
                    "version": "3.2.2",
                    "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
                    "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
                    "requires": {
                        "is-buffer": "1.1.6"
                    }
                }
            }
        },
        "expand-tilde": {
            "version": "2.0.2",
            "resolved": "https://registry.npmjs.org/expand-tilde/-/expand-tilde-2.0.2.tgz",
            "integrity": "sha1-l+gBqgUt8CRU3kawK/YhZCzchQI=",
            "requires": {
                "homedir-polyfill": "1.0.1"
            }
        },
        "extend": {
            "version": "3.0.2",
            "resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",
            "integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g=="
        },
        "extend-shallow": {
            "version": "3.0.2",
            "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-3.0.2.tgz",
            "integrity": "sha1-Jqcarwc7OfshJxcnRhMcJwQCjbg=",
            "requires": {
                "assign-symbols": "1.0.0",
                "is-extendable": "1.0.1"
            },
            "dependencies": {
                "is-extendable": {
                    "version": "1.0.1",
                    "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-1.0.1.tgz",
                    "integrity": "sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==",
                    "requires": {
                        "is-plain-object": "2.0.4"
                    }
                }
            }
        },
        "external-editor": {
            "version": "2.2.0",
            "resolved": "http://registry.npmjs.org/external-editor/-/external-editor-2.2.0.tgz",
            "integrity": "sha512-bSn6gvGxKt+b7+6TKEv1ZycHleA7aHhRHyAqJyp5pbUFuYYNIzpZnQDk7AsYckyWdEnTeAnay0aCy2aV6iTk9A==",
            "requires": {
                "chardet": "0.4.2",
                "iconv-lite": "0.4.24",
                "tmp": "0.0.33"
            }
        },
        "extglob": {
            "version": "2.0.4",
            "resolved": "https://registry.npmjs.org/extglob/-/extglob-2.0.4.tgz",
            "integrity": "sha512-Nmb6QXkELsuBr24CJSkilo6UHHgbekK5UiZgfE6UHD3Eb27YC6oD+bhcT+tJ6cl8dmsgdQxnWlcry8ksBIBLpw==",
            "requires": {
                "array-unique": "0.3.2",
                "define-property": "1.0.0",
                "expand-brackets": "2.1.4",
                "extend-shallow": "2.0.1",
                "fragment-cache": "0.2.1",
                "regex-not": "1.0.2",
                "snapdragon": "0.8.2",
                "to-regex": "3.0.2"
            },
            "dependencies": {
                "define-property": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",
                    "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
                    "requires": {
                        "is-descriptor": "1.0.2"
                    }
                },
                "extend-shallow": {
                    "version": "2.0.1",
                    "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
                    "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
                    "requires": {
                        "is-extendable": "0.1.1"
                    }
                },
                "is-accessor-descriptor": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
                    "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
                    "requires": {
                        "kind-of": "6.0.2"
                    }
                },
                "is-data-descriptor": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
                    "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
                    "requires": {
                        "kind-of": "6.0.2"
                    }
                },
                "is-descriptor": {
                    "version": "1.0.2",
                    "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
                    "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
                    "requires": {
                        "is-accessor-descriptor": "1.0.0",
                        "is-data-descriptor": "1.0.0",
                        "kind-of": "6.0.2"
                    }
                }
            }
        },
        "extsprintf": {
            "version": "1.3.0",
            "resolved": "https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz",
            "integrity": "sha1-lpGEQOMEGnpBT4xS48V06zw+HgU="
        },
        "falafel": {
            "version": "2.1.0",
            "resolved": "https://registry.npmjs.org/falafel/-/falafel-2.1.0.tgz",
            "integrity": "sha1-lrsXdh2rqU9G0AFzizzt86Z/4Gw=",
            "requires": {
                "acorn": "5.7.3",
                "foreach": "2.0.5",
                "isarray": "0.0.1",
                "object-keys": "1.0.12"
            }
        },
        "fancy-log": {
            "version": "1.3.2",
            "resolved": "https://registry.npmjs.org/fancy-log/-/fancy-log-1.3.2.tgz",
            "integrity": "sha1-9BEl49hPLn2JpD0G2VjI94vha+E=",
            "requires": {
                "ansi-gray": "0.1.1",
                "color-support": "1.1.3",
                "time-stamp": "1.1.0"
            }
        },
        "fast-deep-equal": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-1.1.0.tgz",
            "integrity": "sha1-wFNHeBfIa1HaqFPIHgWbcz0CNhQ="
        },
        "fast-json-stable-stringify": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.0.0.tgz",
            "integrity": "sha1-1RQsDK7msRifh9OnYREGT4bIu/I="
        },
        "fast-levenshtein": {
            "version": "2.0.6",
            "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
            "integrity": "sha1-PYpcZog6FqMMqGQ+hR8Zuqd5eRc="
        },
        "figures": {
            "version": "1.7.0",
            "resolved": "https://registry.npmjs.org/figures/-/figures-1.7.0.tgz",
            "integrity": "sha1-y+Hjr/zxzUS4DK3+0o3Hk6lwHS4=",
            "requires": {
                "escape-string-regexp": "1.0.5",
                "object-assign": "4.1.1"
            },
            "dependencies": {
                "object-assign": {
                    "version": "4.1.1",
                    "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
                    "integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
                }
            }
        },
        "file-entry-cache": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-2.0.0.tgz",
            "integrity": "sha1-w5KZDD5oR4PYOLjISkXYoEhFg2E=",
            "requires": {
                "flat-cache": "1.3.0",
                "object-assign": "4.1.1"
            },
            "dependencies": {
                "object-assign": {
                    "version": "4.1.1",
                    "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
                    "integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
                }
            }
        },
        "file-uri-to-path": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/file-uri-to-path/-/file-uri-to-path-1.0.0.tgz",
            "integrity": "sha512-0Zt+s3L7Vf1biwWZ29aARiVYLx7iMGnEUl9x33fbB/j3jR81u/O2LbqK+Bm1CDSNDKVtJ/YjwY7TUd5SkeLQLw=="
        },
        "filename-regex": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/filename-regex/-/filename-regex-2.0.1.tgz",
            "integrity": "sha1-wcS5vuPglyXdsQa3XB4wH+LxiyY="
        },
        "fill-range": {
            "version": "4.0.0",
            "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-4.0.0.tgz",
            "integrity": "sha1-1USBHUKPmOsGpj3EAtJAPDKMOPc=",
            "requires": {
                "extend-shallow": "2.0.1",
                "is-number": "3.0.0",
                "repeat-string": "1.6.1",
                "to-regex-range": "2.1.1"
            },
            "dependencies": {
                "extend-shallow": {
                    "version": "2.0.1",
                    "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
                    "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
                    "requires": {
                        "is-extendable": "0.1.1"
                    }
                }
            }
        },
        "find-index": {
            "version": "0.1.1",
            "resolved": "https://registry.npmjs.org/find-index/-/find-index-0.1.1.tgz",
            "integrity": "sha1-Z101iyyjiS15Whq0cjL4tuLg3eQ="
        },
        "find-up": {
            "version": "1.1.2",
            "resolved": "https://registry.npmjs.org/find-up/-/find-up-1.1.2.tgz",
            "integrity": "sha1-ay6YIrGizgpgq2TWEOzK1TyyTQ8=",
            "requires": {
                "path-exists": "2.1.0",
                "pinkie-promise": "2.0.1"
            }
        },
        "findup-sync": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/findup-sync/-/findup-sync-2.0.0.tgz",
            "integrity": "sha1-kyaxSIwi0aYIhlCoaQGy2akKLLw=",
            "requires": {
                "detect-file": "1.0.0",
                "is-glob": "3.1.0",
                "micromatch": "3.1.10",
                "resolve-dir": "1.0.1"
            }
        },
        "fined": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/fined/-/fined-1.1.0.tgz",
            "integrity": "sha1-s33IRLdqL15wgeiE98CuNE8VNHY=",
            "requires": {
                "expand-tilde": "2.0.2",
                "is-plain-object": "2.0.4",
                "object.defaults": "1.1.0",
                "object.pick": "1.3.0",
                "parse-filepath": "1.0.2"
            }
        },
        "first-chunk-stream": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/first-chunk-stream/-/first-chunk-stream-1.0.0.tgz",
            "integrity": "sha1-Wb+1DNkF9g18OUzT2ayqtOatk04="
        },
        "flagged-respawn": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/flagged-respawn/-/flagged-respawn-1.0.0.tgz",
            "integrity": "sha1-Tnmumy6zi/hrO7Vr8+ClaqX8q9c="
        },
        "flat-cache": {
            "version": "1.3.0",
            "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-1.3.0.tgz",
            "integrity": "sha1-0wMLMrOBVPTjt+nHCfSQ9++XxIE=",
            "requires": {
                "circular-json": "0.3.3",
                "del": "2.2.2",
                "graceful-fs": "4.1.11",
                "write": "0.2.1"
            },
            "dependencies": {
                "graceful-fs": {
                    "version": "4.1.11",
                    "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.11.tgz",
                    "integrity": "sha1-Dovf5NHduIVNZOBOp8AOKgJuVlg="
                }
            }
        },
        "for-in": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/for-in/-/for-in-1.0.2.tgz",
            "integrity": "sha1-gQaNKVqBQuwKxybG4iAMMPttXoA="
        },
        "for-own": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/for-own/-/for-own-1.0.0.tgz",
            "integrity": "sha1-xjMy9BXO3EsE2/5wz4NklMU8tEs=",
            "requires": {
                "for-in": "1.0.2"
            }
        },
        "foreach": {
            "version": "2.0.5",
            "resolved": "https://registry.npmjs.org/foreach/-/foreach-2.0.5.tgz",
            "integrity": "sha1-C+4AUBiusmDQo6865ljdATbsG5k="
        },
        "forever-agent": {
            "version": "0.6.1",
            "resolved": "https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz",
            "integrity": "sha1-+8cfDEGt6zf5bFd60e1C2P2sypE="
        },
        "fork-stream": {
            "version": "0.0.4",
            "resolved": "https://registry.npmjs.org/fork-stream/-/fork-stream-0.0.4.tgz",
            "integrity": "sha1-24Sfznf2cIpfjzhq5TOgkHtUrnA="
        },
        "form-data": {
            "version": "2.3.2",
            "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.2.tgz",
            "integrity": "sha1-SXBJi+YEwgwAXU9cI67NIda0kJk=",
            "requires": {
                "asynckit": "0.4.0",
                "combined-stream": "1.0.6",
                "mime-types": "2.1.20"
            }
        },
        "formstream": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/formstream/-/formstream-1.1.0.tgz",
            "integrity": "sha1-UfOXDyYTbrCtRDBN5M67UCB7RHk=",
            "requires": {
                "destroy": "1.0.4",
                "mime": "1.6.0",
                "pause-stream": "0.0.11"
            }
        },
        "fragment-cache": {
            "version": "0.2.1",
            "resolved": "https://registry.npmjs.org/fragment-cache/-/fragment-cache-0.2.1.tgz",
            "integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=",
            "requires": {
                "map-cache": "0.2.2"
            }
        },
        "from": {
            "version": "0.1.7",
            "resolved": "https://registry.npmjs.org/from/-/from-0.1.7.tgz",
            "integrity": "sha1-g8YK/Fi5xWmXAH7Rp2izqzA6RP4="
        },
        "fs.realpath": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
            "integrity": "sha1-FQStJSMVjKpA20onh8sBQRmU6k8="
        },
        "fsevents": {
            "version": "1.2.4",
            "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-1.2.4.tgz",
            "integrity": "sha512-z8H8/diyk76B7q5wg+Ud0+CqzcAF3mBBI/bA5ne5zrRUUIvNkJY//D3BqyH571KuAC4Nr7Rw7CjWX4r0y9DvNg==",
            "optional": true,
            "requires": {
                "nan": "2.11.0",
                "node-pre-gyp": "0.10.0"
            },
            "dependencies": {
                "abbrev": {
                    "version": "1.1.1",
                    "bundled": true,
                    "optional": true
                },
                "ansi-regex": {
                    "version": "2.1.1",
                    "bundled": true
                },
                "aproba": {
                    "version": "1.2.0",
                    "bundled": true,
                    "optional": true
                },
                "are-we-there-yet": {
                    "version": "1.1.4",
                    "bundled": true,
                    "optional": true,
                    "requires": {
                        "delegates": "1.0.0",
                        "readable-stream": "2.3.6"
                    }
                },
                "balanced-match": {
                    "version": "1.0.0",
                    "bundled": true
                },
                "brace-expansion": {
                    "version": "1.1.11",
                    "bundled": true,
                    "requires": {
                        "balanced-match": "1.0.0",
                        "concat-map": "0.0.1"
                    }
                },
                "chownr": {
                    "version": "1.0.1",
                    "bundled": true,
                    "optional": true
                },
                "code-point-at": {
                    "version": "1.1.0",
                    "bundled": true
                },
                "concat-map": {
                    "version": "0.0.1",
                    "bundled": true
                },
                "console-control-strings": {
                    "version": "1.1.0",
                    "bundled": true
                },
                "core-util-is": {
                    "version": "1.0.2",
                    "bundled": true,
                    "optional": true
                },
                "debug": {
                    "version": "2.6.9",
                    "bundled": true,
                    "optional": true,
                    "requires": {
                        "ms": "2.0.0"
                    }
                },
                "deep-extend": {
                    "version": "0.5.1",
                    "bundled": true,
                    "optional": true
                },
                "delegates": {
                    "version": "1.0.0",
                    "bundled": true,
                    "optional": true
                },
                "detect-libc": {
                    "version": "1.0.3",
                    "bundled": true,
                    "optional": true
                },
                "fs-minipass": {
                    "version": "1.2.5",
                    "bundled": true,
                    "optional": true,
                    "requires": {
                        "minipass": "2.2.4"
                    }
                },
                "fs.realpath": {
                    "version": "1.0.0",
                    "bundled": true,
                    "optional": true
                },
                "gauge": {
                    "version": "2.7.4",
                    "bundled": true,
                    "optional": true,
                    "requires": {
                        "aproba": "1.2.0",
                        "console-control-strings": "1.1.0",
                        "has-unicode": "2.0.1",
                        "object-assign": "4.1.1",
                        "signal-exit": "3.0.2",
                        "string-width": "1.0.2",
                        "strip-ansi": "3.0.1",
                        "wide-align": "1.1.2"
                    }
                },
                "glob": {
                    "version": "7.1.2",
                    "bundled": true,
                    "optional": true,
                    "requires": {
                        "fs.realpath": "1.0.0",
                        "inflight": "1.0.6",
                        "inherits": "2.0.3",
                        "minimatch": "3.0.4",
                        "once": "1.4.0",
                        "path-is-absolute": "1.0.1"
                    }
                },
                "has-unicode": {
                    "version": "2.0.1",
                    "bundled": true,
                    "optional": true
                },
                "iconv-lite": {
                    "version": "0.4.21",
                    "bundled": true,
                    "optional": true,
                    "requires": {
                        "safer-buffer": "2.1.2"
                    }
                },
                "ignore-walk": {
                    "version": "3.0.1",
                    "bundled": true,
                    "optional": true,
                    "requires": {
                        "minimatch": "3.0.4"
                    }
                },
                "inflight": {
                    "version": "1.0.6",
                    "bundled": true,
                    "optional": true,
                    "requires": {
                        "once": "1.4.0",
                        "wrappy": "1.0.2"
                    }
                },
                "inherits": {
                    "version": "2.0.3",
                    "bundled": true
                },
                "ini": {
                    "version": "1.3.5",
                    "bundled": true,
                    "optional": true
                },
                "is-fullwidth-code-point": {
                    "version": "1.0.0",
                    "bundled": true,
                    "requires": {
                        "number-is-nan": "1.0.1"
                    }
                },
                "isarray": {
                    "version": "1.0.0",
                    "bundled": true,
                    "optional": true
                },
                "minimatch": {
                    "version": "3.0.4",
                    "bundled": true,
                    "requires": {
                        "brace-expansion": "1.1.11"
                    }
                },
                "minimist": {
                    "version": "0.0.8",
                    "bundled": true
                },
                "minipass": {
                    "version": "2.2.4",
                    "bundled": true,
                    "requires": {
                        "safe-buffer": "5.1.1",
                        "yallist": "3.0.2"
                    }
                },
                "minizlib": {
                    "version": "1.1.0",
                    "bundled": true,
                    "optional": true,
                    "requires": {
                        "minipass": "2.2.4"
                    }
                },
                "mkdirp": {
                    "version": "0.5.1",
                    "bundled": true,
                    "requires": {
                        "minimist": "0.0.8"
                    }
                },
                "ms": {
                    "version": "2.0.0",
                    "bundled": true,
                    "optional": true
                },
                "needle": {
                    "version": "2.2.0",
                    "bundled": true,
                    "optional": true,
                    "requires": {
                        "debug": "2.6.9",
                        "iconv-lite": "0.4.21",
                        "sax": "1.2.4"
                    }
                },
                "node-pre-gyp": {
                    "version": "0.10.0",
                    "bundled": true,
                    "optional": true,
                    "requires": {
                        "detect-libc": "1.0.3",
                        "mkdirp": "0.5.1",
                        "needle": "2.2.0",
                        "nopt": "4.0.1",
                        "npm-packlist": "1.1.10",
                        "npmlog": "4.1.2",
                        "rc": "1.2.7",
                        "rimraf": "2.6.2",
                        "semver": "5.5.0",
                        "tar": "4.4.1"
                    }
                },
                "nopt": {
                    "version": "4.0.1",
                    "bundled": true,
                    "optional": true,
                    "requires": {
                        "abbrev": "1.1.1",
                        "osenv": "0.1.5"
                    }
                },
                "npm-bundled": {
                    "version": "1.0.3",
                    "bundled": true,
                    "optional": true
                },
                "npm-packlist": {
                    "version": "1.1.10",
                    "bundled": true,
                    "optional": true,
                    "requires": {
                        "ignore-walk": "3.0.1",
                        "npm-bundled": "1.0.3"
                    }
                },
                "npmlog": {
                    "version": "4.1.2",
                    "bundled": true,
                    "optional": true,
                    "requires": {
                        "are-we-there-yet": "1.1.4",
                        "console-control-strings": "1.1.0",
                        "gauge": "2.7.4",
                        "set-blocking": "2.0.0"
                    }
                },
                "number-is-nan": {
                    "version": "1.0.1",
                    "bundled": true
                },
                "object-assign": {
                    "version": "4.1.1",
                    "bundled": true,
                    "optional": true
                },
                "once": {
                    "version": "1.4.0",
                    "bundled": true,
                    "requires": {
                        "wrappy": "1.0.2"
                    }
                },
                "os-homedir": {
                    "version": "1.0.2",
                    "bundled": true,
                    "optional": true
                },
                "os-tmpdir": {
                    "version": "1.0.2",
                    "bundled": true,
                    "optional": true
                },
                "osenv": {
                    "version": "0.1.5",
                    "bundled": true,
                    "optional": true,
                    "requires": {
                        "os-homedir": "1.0.2",
                        "os-tmpdir": "1.0.2"
                    }
                },
                "path-is-absolute": {
                    "version": "1.0.1",
                    "bundled": true,
                    "optional": true
                },
                "process-nextick-args": {
                    "version": "2.0.0",
                    "bundled": true,
                    "optional": true
                },
                "rc": {
                    "version": "1.2.7",
                    "bundled": true,
                    "optional": true,
                    "requires": {
                        "deep-extend": "0.5.1",
                        "ini": "1.3.5",
                        "minimist": "1.2.0",
                        "strip-json-comments": "2.0.1"
                    },
                    "dependencies": {
                        "minimist": {
                            "version": "1.2.0",
                            "bundled": true,
                            "optional": true
                        }
                    }
                },
                "readable-stream": {
                    "version": "2.3.6",
                    "bundled": true,
                    "optional": true,
                    "requires": {
                        "core-util-is": "1.0.2",
                        "inherits": "2.0.3",
                        "isarray": "1.0.0",
                        "process-nextick-args": "2.0.0",
                        "safe-buffer": "5.1.1",
                        "string_decoder": "1.1.1",
                        "util-deprecate": "1.0.2"
                    }
                },
                "rimraf": {
                    "version": "2.6.2",
                    "bundled": true,
                    "optional": true,
                    "requires": {
                        "glob": "7.1.2"
                    }
                },
                "safe-buffer": {
                    "version": "5.1.1",
                    "bundled": true
                },
                "safer-buffer": {
                    "version": "2.1.2",
                    "bundled": true,
                    "optional": true
                },
                "sax": {
                    "version": "1.2.4",
                    "bundled": true,
                    "optional": true
                },
                "semver": {
                    "version": "5.5.0",
                    "bundled": true,
                    "optional": true
                },
                "set-blocking": {
                    "version": "2.0.0",
                    "bundled": true,
                    "optional": true
                },
                "signal-exit": {
                    "version": "3.0.2",
                    "bundled": true,
                    "optional": true
                },
                "string-width": {
                    "version": "1.0.2",
                    "bundled": true,
                    "requires": {
                        "code-point-at": "1.1.0",
                        "is-fullwidth-code-point": "1.0.0",
                        "strip-ansi": "3.0.1"
                    }
                },
                "string_decoder": {
                    "version": "1.1.1",
                    "bundled": true,
                    "optional": true,
                    "requires": {
                        "safe-buffer": "5.1.1"
                    }
                },
                "strip-ansi": {
                    "version": "3.0.1",
                    "bundled": true,
                    "requires": {
                        "ansi-regex": "2.1.1"
                    }
                },
                "strip-json-comments": {
                    "version": "2.0.1",
                    "bundled": true,
                    "optional": true
                },
                "tar": {
                    "version": "4.4.1",
                    "bundled": true,
                    "optional": true,
                    "requires": {
                        "chownr": "1.0.1",
                        "fs-minipass": "1.2.5",
                        "minipass": "2.2.4",
                        "minizlib": "1.1.0",
                        "mkdirp": "0.5.1",
                        "safe-buffer": "5.1.1",
                        "yallist": "3.0.2"
                    }
                },
                "util-deprecate": {
                    "version": "1.0.2",
                    "bundled": true,
                    "optional": true
                },
                "wide-align": {
                    "version": "1.1.2",
                    "bundled": true,
                    "optional": true,
                    "requires": {
                        "string-width": "1.0.2"
                    }
                },
                "wrappy": {
                    "version": "1.0.2",
                    "bundled": true
                },
                "yallist": {
                    "version": "3.0.2",
                    "bundled": true
                }
            }
        },
        "fstream": {
            "version": "1.0.11",
            "resolved": "https://registry.npmjs.org/fstream/-/fstream-1.0.11.tgz",
            "integrity": "sha1-XB+x8RdHcRTwYyoOtLcbPLD9MXE=",
            "requires": {
                "graceful-fs": "4.1.11",
                "inherits": "2.0.3",
                "mkdirp": "0.5.1",
                "rimraf": "2.6.2"
            },
            "dependencies": {
                "graceful-fs": {
                    "version": "4.1.11",
                    "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.11.tgz",
                    "integrity": "sha1-Dovf5NHduIVNZOBOp8AOKgJuVlg="
                }
            }
        },
        "ftp": {
            "version": "0.3.10",
            "resolved": "https://registry.npmjs.org/ftp/-/ftp-0.3.10.tgz",
            "integrity": "sha1-kZfYYa2BQvPmPVqDv+TFn3MwiF0=",
            "requires": {
                "readable-stream": "1.1.14",
                "xregexp": "2.0.0"
            }
        },
        "function-bind": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",
            "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A=="
        },
        "gauge": {
            "version": "2.7.4",
            "resolved": "https://registry.npmjs.org/gauge/-/gauge-2.7.4.tgz",
            "integrity": "sha1-LANAXHU4w51+s3sxcCLjJfsBi/c=",
            "requires": {
                "aproba": "1.2.0",
                "console-control-strings": "1.1.0",
                "has-unicode": "2.0.1",
                "object-assign": "4.1.1",
                "signal-exit": "3.0.2",
                "string-width": "1.0.2",
                "strip-ansi": "3.0.1",
                "wide-align": "1.1.3"
            },
            "dependencies": {
                "object-assign": {
                    "version": "4.1.1",
                    "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
                    "integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
                }
            }
        },
        "gaze": {
            "version": "0.5.2",
            "resolved": "https://registry.npmjs.org/gaze/-/gaze-0.5.2.tgz",
            "integrity": "sha1-QLcJU30k0dRXZ9takIaJ3+aaxE8=",
            "requires": {
                "globule": "0.1.0"
            }
        },
        "generate-function": {
            "version": "2.3.1",
            "resolved": "https://registry.npmjs.org/generate-function/-/generate-function-2.3.1.tgz",
            "integrity": "sha512-eeB5GfMNeevm/GRYq20ShmsaGcmI81kIX2K9XQx5miC8KdHaC6Jm0qQ8ZNeGOi7wYB8OsdxKs+Y2oVuTFuVwKQ==",
            "requires": {
                "is-property": "1.0.2"
            }
        },
        "generate-object-property": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/generate-object-property/-/generate-object-property-1.2.0.tgz",
            "integrity": "sha1-nA4cQDCM6AT0eDYYuTf6iPmdUNA=",
            "requires": {
                "is-property": "1.0.2"
            }
        },
        "get-caller-file": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-1.0.3.tgz",
            "integrity": "sha512-3t6rVToeoZfYSGd8YoLFR2DJkiQrIiUrGcjvFX2mDw3bn6k2OtwHN0TNCLbBO+w8qTvimhDkv+LSscbJY1vE6w=="
        },
        "get-own-enumerable-property-symbols": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/get-own-enumerable-property-symbols/-/get-own-enumerable-property-symbols-2.0.1.tgz",
            "integrity": "sha512-TtY/sbOemiMKPRUDDanGCSgBYe7Mf0vbRsWnBZ+9yghpZ1MvcpSpuZFjHdEeY/LZjZy0vdLjS77L6HosisFiug==",
            "dev": true
        },
        "get-pixels": {
            "version": "3.3.2",
            "resolved": "https://registry.npmjs.org/get-pixels/-/get-pixels-3.3.2.tgz",
            "integrity": "sha512-6ar+8yPxRd1pskEcl2GSEu1La0+xYRjjnkby6AYiRDDwZ0tJbPQmHnSeH9fGLskT8kvR0OukVgtZLcsENF9YKQ==",
            "requires": {
                "data-uri-to-buffer": "0.0.3",
                "jpeg-js": "0.3.4",
                "mime-types": "2.1.20",
                "ndarray": "1.0.18",
                "ndarray-pack": "1.2.1",
                "node-bitmap": "0.0.1",
                "omggif": "1.0.9",
                "parse-data-uri": "0.2.0",
                "pngjs": "3.3.3",
                "request": "2.88.0",
                "through": "2.3.8"
            },
            "dependencies": {
                "data-uri-to-buffer": {
                    "version": "0.0.3",
                    "resolved": "https://registry.npmjs.org/data-uri-to-buffer/-/data-uri-to-buffer-0.0.3.tgz",
                    "integrity": "sha1-GK6XmmoMqZSwYlhTkW0mYruuCxo="
                }
            }
        },
        "get-stdin": {
            "version": "4.0.1",
            "resolved": "https://registry.npmjs.org/get-stdin/-/get-stdin-4.0.1.tgz",
            "integrity": "sha1-uWjGsKBDhDJJAui/Gl3zJXmkUP4="
        },
        "get-uri": {
            "version": "2.0.2",
            "resolved": "https://registry.npmjs.org/get-uri/-/get-uri-2.0.2.tgz",
            "integrity": "sha512-ZD325dMZOgerGqF/rF6vZXyFGTAay62svjQIT+X/oU2PtxYpFxvSkbsdi+oxIrsNxlZVd4y8wUDqkaExWTI/Cw==",
            "requires": {
                "data-uri-to-buffer": "1.2.0",
                "debug": "2.6.9",
                "extend": "3.0.2",
                "file-uri-to-path": "1.0.0",
                "ftp": "0.3.10",
                "readable-stream": "2.3.6"
            },
            "dependencies": {
                "isarray": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
                    "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
                },
                "readable-stream": {
                    "version": "2.3.6",
                    "resolved": "http://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz",
                    "integrity": "sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==",
                    "requires": {
                        "core-util-is": "1.0.2",
                        "inherits": "2.0.3",
                        "isarray": "1.0.0",
                        "process-nextick-args": "2.0.0",
                        "safe-buffer": "5.1.2",
                        "string_decoder": "1.1.1",
                        "util-deprecate": "1.0.2"
                    }
                },
                "string_decoder": {
                    "version": "1.1.1",
                    "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
                    "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
                    "requires": {
                        "safe-buffer": "5.1.2"
                    }
                }
            }
        },
        "get-value": {
            "version": "2.0.6",
            "resolved": "https://registry.npmjs.org/get-value/-/get-value-2.0.6.tgz",
            "integrity": "sha1-3BXKHGcjh8p2vTesCjlbogQqLCg="
        },
        "getpass": {
            "version": "0.1.7",
            "resolved": "https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz",
            "integrity": "sha1-Xv+OPmhNVprkyysSgmBOi6YhSfo=",
            "requires": {
                "assert-plus": "1.0.0"
            }
        },
        "gif-encoder": {
            "version": "0.4.3",
            "resolved": "http://registry.npmjs.org/gif-encoder/-/gif-encoder-0.4.3.tgz",
            "integrity": "sha1-iitP6MqJWkjjoLbLs0CgpqNXGJk=",
            "requires": {
                "readable-stream": "1.1.14"
            }
        },
        "glob": {
            "version": "4.5.3",
            "resolved": "https://registry.npmjs.org/glob/-/glob-4.5.3.tgz",
            "integrity": "sha1-xstz0yJsHv7wTePFbQEvAzd+4V8=",
            "requires": {
                "inflight": "1.0.6",
                "inherits": "2.0.3",
                "minimatch": "2.0.10",
                "once": "1.3.3"
            },
            "dependencies": {
                "minimatch": {
                    "version": "2.0.10",
                    "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-2.0.10.tgz",
                    "integrity": "sha1-jQh8OcazjAAbl/ynzm0OHoCvusc=",
                    "requires": {
                        "brace-expansion": "1.1.11"
                    }
                }
            }
        },
        "glob-base": {
            "version": "0.3.0",
            "resolved": "https://registry.npmjs.org/glob-base/-/glob-base-0.3.0.tgz",
            "integrity": "sha1-27Fk9iIbHAscz4Kuoyi0l98Oo8Q=",
            "requires": {
                "glob-parent": "2.0.0",
                "is-glob": "2.0.1"
            },
            "dependencies": {
                "is-extglob": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-1.0.0.tgz",
                    "integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA="
                },
                "is-glob": {
                    "version": "2.0.1",
                    "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-2.0.1.tgz",
                    "integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
                    "requires": {
                        "is-extglob": "1.0.0"
                    }
                }
            }
        },
        "glob-parent": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-2.0.0.tgz",
            "integrity": "sha1-gTg9ctsFT8zPUzbaqQLxgvbtuyg=",
            "requires": {
                "is-glob": "2.0.1"
            },
            "dependencies": {
                "is-extglob": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-1.0.0.tgz",
                    "integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA="
                },
                "is-glob": {
                    "version": "2.0.1",
                    "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-2.0.1.tgz",
                    "integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
                    "requires": {
                        "is-extglob": "1.0.0"
                    }
                }
            }
        },
        "glob-stream": {
            "version": "3.1.18",
            "resolved": "https://registry.npmjs.org/glob-stream/-/glob-stream-3.1.18.tgz",
            "integrity": "sha1-kXCl8St5Awb9/lmPMT+PeVT9FDs=",
            "requires": {
                "glob": "4.5.3",
                "glob2base": "0.0.12",
                "minimatch": "2.0.10",
                "ordered-read-streams": "0.1.0",
                "through2": "0.6.5",
                "unique-stream": "1.0.0"
            },
            "dependencies": {
                "minimatch": {
                    "version": "2.0.10",
                    "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-2.0.10.tgz",
                    "integrity": "sha1-jQh8OcazjAAbl/ynzm0OHoCvusc=",
                    "requires": {
                        "brace-expansion": "1.1.11"
                    }
                },
                "readable-stream": {
                    "version": "1.0.34",
                    "resolved": "http://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz",
                    "integrity": "sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=",
                    "requires": {
                        "core-util-is": "1.0.2",
                        "inherits": "2.0.3",
                        "isarray": "0.0.1",
                        "string_decoder": "0.10.31"
                    }
                },
                "through2": {
                    "version": "0.6.5",
                    "resolved": "https://registry.npmjs.org/through2/-/through2-0.6.5.tgz",
                    "integrity": "sha1-QaucZ7KdVyCQcUEOHXp6lozTrUg=",
                    "requires": {
                        "readable-stream": "1.0.34",
                        "xtend": "4.0.1"
                    }
                }
            }
        },
        "glob-watcher": {
            "version": "0.0.6",
            "resolved": "https://registry.npmjs.org/glob-watcher/-/glob-watcher-0.0.6.tgz",
            "integrity": "sha1-uVtKjfdLOcgymLDAXJeLTZo7cQs=",
            "requires": {
                "gaze": "0.5.2"
            }
        },
        "glob2base": {
            "version": "0.0.12",
            "resolved": "https://registry.npmjs.org/glob2base/-/glob2base-0.0.12.tgz",
            "integrity": "sha1-nUGbPijxLoOjYhZKJ3BVkiycDVY=",
            "requires": {
                "find-index": "0.1.1"
            }
        },
        "global-modules": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/global-modules/-/global-modules-1.0.0.tgz",
            "integrity": "sha512-sKzpEkf11GpOFuw0Zzjzmt4B4UZwjOcG757PPvrfhxcLFbq0wpsgpOqxpxtxFiCG4DtG93M6XRVbF2oGdev7bg==",
            "requires": {
                "global-prefix": "1.0.2",
                "is-windows": "1.0.2",
                "resolve-dir": "1.0.1"
            }
        },
        "global-prefix": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/global-prefix/-/global-prefix-1.0.2.tgz",
            "integrity": "sha1-2/dDxsFJklk8ZVVoy2btMsASLr4=",
            "requires": {
                "expand-tilde": "2.0.2",
                "homedir-polyfill": "1.0.1",
                "ini": "1.3.5",
                "is-windows": "1.0.2",
                "which": "1.3.1"
            }
        },
        "globals": {
            "version": "9.18.0",
            "resolved": "https://registry.npmjs.org/globals/-/globals-9.18.0.tgz",
            "integrity": "sha512-S0nG3CLEQiY/ILxqtztTWH/3iRRdyBLw6KMDxnKMchrtbj2OFmehVh0WUCfW3DUrIgx/qFrJPICrq4Z4sTR9UQ=="
        },
        "globby": {
            "version": "5.0.0",
            "resolved": "https://registry.npmjs.org/globby/-/globby-5.0.0.tgz",
            "integrity": "sha1-69hGZ8oNuzMLmbz8aOrCvFQ3Dg0=",
            "requires": {
                "array-union": "1.0.2",
                "arrify": "1.0.1",
                "glob": "7.1.3",
                "object-assign": "4.1.1",
                "pify": "2.3.0",
                "pinkie-promise": "2.0.1"
            },
            "dependencies": {
                "glob": {
                    "version": "7.1.3",
                    "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.3.tgz",
                    "integrity": "sha512-vcfuiIxogLV4DlGBHIUOwI0IbrJ8HWPc4MU7HzviGeNho/UJDfi6B5p3sHeWIQ0KGIU0Jpxi5ZHxemQfLkkAwQ==",
                    "requires": {
                        "fs.realpath": "1.0.0",
                        "inflight": "1.0.6",
                        "inherits": "2.0.3",
                        "minimatch": "3.0.4",
                        "once": "1.3.3",
                        "path-is-absolute": "1.0.1"
                    }
                },
                "object-assign": {
                    "version": "4.1.1",
                    "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
                    "integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
                }
            }
        },
        "globule": {
            "version": "0.1.0",
            "resolved": "https://registry.npmjs.org/globule/-/globule-0.1.0.tgz",
            "integrity": "sha1-2cjt3h2nnRJaFRt5UzuXhnY0auU=",
            "requires": {
                "glob": "3.1.21",
                "lodash": "1.0.2",
                "minimatch": "0.2.14"
            },
            "dependencies": {
                "glob": {
                    "version": "3.1.21",
                    "resolved": "https://registry.npmjs.org/glob/-/glob-3.1.21.tgz",
                    "integrity": "sha1-0p4KBV3qUTj00H7UDomC6DwgZs0=",
                    "requires": {
                        "graceful-fs": "1.2.3",
                        "inherits": "1.0.2",
                        "minimatch": "0.2.14"
                    }
                },
                "graceful-fs": {
                    "version": "1.2.3",
                    "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-1.2.3.tgz",
                    "integrity": "sha1-FaSAaldUfLLS2/J/QuiajDRRs2Q="
                },
                "inherits": {
                    "version": "1.0.2",
                    "resolved": "https://registry.npmjs.org/inherits/-/inherits-1.0.2.tgz",
                    "integrity": "sha1-ykMJ2t7mtUzAuNJH6NfHoJdb3Js="
                },
                "lodash": {
                    "version": "1.0.2",
                    "resolved": "http://registry.npmjs.org/lodash/-/lodash-1.0.2.tgz",
                    "integrity": "sha1-j1dWDIO1n8JwvT1WG2kAQ0MOJVE="
                },
                "minimatch": {
                    "version": "0.2.14",
                    "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-0.2.14.tgz",
                    "integrity": "sha1-x054BXT2PG+aCQ6Q775u9TpqdWo=",
                    "requires": {
                        "lru-cache": "2.7.3",
                        "sigmund": "1.0.1"
                    }
                }
            }
        },
        "glogg": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/glogg/-/glogg-1.0.1.tgz",
            "integrity": "sha512-ynYqXLoluBKf9XGR1gA59yEJisIL7YHEH4xr3ZziHB5/yl4qWfaK8Js9jGe6gBGCSCKVqiyO30WnRZADvemUNw==",
            "requires": {
                "sparkles": "1.0.1"
            }
        },
        "graceful-fs": {
            "version": "3.0.11",
            "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-3.0.11.tgz",
            "integrity": "sha1-dhPHeKGv6mLyXGMKCG1/Osu92Bg=",
            "requires": {
                "natives": "1.1.5"
            }
        },
        "gulp": {
            "version": "3.9.1",
            "resolved": "https://registry.npmjs.org/gulp/-/gulp-3.9.1.tgz",
            "integrity": "sha1-VxzkWSjdQK9lFPxAEYZgFsE4RbQ=",
            "requires": {
                "archy": "1.0.0",
                "chalk": "1.1.3",
                "deprecated": "0.0.1",
                "gulp-util": "3.0.8",
                "interpret": "1.1.0",
                "liftoff": "2.5.0",
                "minimist": "1.2.0",
                "orchestrator": "0.3.8",
                "pretty-hrtime": "1.0.3",
                "semver": "4.3.6",
                "tildify": "1.2.0",
                "v8flags": "2.1.1",
                "vinyl-fs": "0.3.14"
            },
            "dependencies": {
                "minimist": {
                    "version": "1.2.0",
                    "resolved": "http://registry.npmjs.org/minimist/-/minimist-1.2.0.tgz",
                    "integrity": "sha1-o1AIsg9BOD7sH7kU9M1d95omQoQ="
                }
            }
        },
        "gulp-autoprefixer": {
            "version": "3.1.1",
            "resolved": "https://registry.npmjs.org/gulp-autoprefixer/-/gulp-autoprefixer-3.1.1.tgz",
            "integrity": "sha1-dSMAUc0NFxND14O36bXREg7u+bA=",
            "requires": {
                "autoprefixer": "6.7.7",
                "gulp-util": "3.0.8",
                "postcss": "5.2.18",
                "through2": "2.0.3",
                "vinyl-sourcemaps-apply": "0.2.1"
            }
        },
        "gulp-cli": {
            "version": "1.4.0",
            "resolved": "https://registry.npmjs.org/gulp-cli/-/gulp-cli-1.4.0.tgz",
            "integrity": "sha1-b1u+LNC9tISdEs+eEkalhh+LT4g=",
            "requires": {
                "archy": "1.0.0",
                "chalk": "1.1.3",
                "copy-props": "1.6.0",
                "fancy-log": "1.3.2",
                "gulplog": "1.0.0",
                "interpret": "1.1.0",
                "liftoff": "2.5.0",
                "lodash.isfunction": "3.0.9",
                "lodash.isplainobject": "4.0.6",
                "lodash.sortby": "4.7.0",
                "matchdep": "1.0.1",
                "mute-stdout": "1.0.1",
                "pretty-hrtime": "1.0.3",
                "semver-greatest-satisfied-range": "1.1.0",
                "tildify": "1.2.0",
                "v8flags": "2.1.1",
                "wreck": "6.3.0",
                "yargs": "3.32.0"
            }
        },
        "gulp-concat": {
            "version": "2.6.1",
            "resolved": "https://registry.npmjs.org/gulp-concat/-/gulp-concat-2.6.1.tgz",
            "integrity": "sha1-Yz0WyV2IUEYorQJmVmPO5aR5M1M=",
            "requires": {
                "concat-with-sourcemaps": "1.1.0",
                "through2": "2.0.3",
                "vinyl": "2.2.0"
            },
            "dependencies": {
                "clone": {
                    "version": "2.1.2",
                    "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",
                    "integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18="
                },
                "clone-stats": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/clone-stats/-/clone-stats-1.0.0.tgz",
                    "integrity": "sha1-s3gt/4u1R04Yuba/D9/ngvh3doA="
                },
                "replace-ext": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/replace-ext/-/replace-ext-1.0.0.tgz",
                    "integrity": "sha1-3mMSg3P8v3w8z6TeWkgMRaZ5WOs="
                },
                "vinyl": {
                    "version": "2.2.0",
                    "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-2.2.0.tgz",
                    "integrity": "sha512-MBH+yP0kC/GQ5GwBqrTPTzEfiiLjta7hTtvQtbxBgTeSXsmKQRQecjibMbxIXzVT3Y9KJK+drOz1/k+vsu8Nkg==",
                    "requires": {
                        "clone": "2.1.2",
                        "clone-buffer": "1.0.0",
                        "clone-stats": "1.0.0",
                        "cloneable-readable": "1.1.2",
                        "remove-trailing-separator": "1.1.0",
                        "replace-ext": "1.0.0"
                    }
                }
            }
        },
        "gulp-debug": {
            "version": "3.2.0",
            "resolved": "https://registry.npmjs.org/gulp-debug/-/gulp-debug-3.2.0.tgz",
            "integrity": "sha512-2LZzP+ydczqz1rhqq/NYxvVvYTmOa0IgBl2B1sQTdkQgku9ayOUM/KHuGPjF4QA5aO1VcG+Sskw7iCcRUqHKkA==",
            "dev": true,
            "requires": {
                "chalk": "2.4.1",
                "fancy-log": "1.3.2",
                "plur": "2.1.2",
                "stringify-object": "3.2.2",
                "through2": "2.0.3",
                "tildify": "1.2.0"
            },
            "dependencies": {
                "ansi-styles": {
                    "version": "3.2.1",
                    "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
                    "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
                    "dev": true,
                    "requires": {
                        "color-convert": "1.9.3"
                    }
                },
                "chalk": {
                    "version": "2.4.1",
                    "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.1.tgz",
                    "integrity": "sha512-ObN6h1v2fTJSmUXoS3nMQ92LbDK9be4TV+6G+omQlGJFdcUX5heKi1LZ1YnRMIgwTLEj3E24bT6tYni50rlCfQ==",
                    "dev": true,
                    "requires": {
                        "ansi-styles": "3.2.1",
                        "escape-string-regexp": "1.0.5",
                        "supports-color": "5.5.0"
                    }
                },
                "has-flag": {
                    "version": "3.0.0",
                    "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
                    "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0=",
                    "dev": true
                },
                "supports-color": {
                    "version": "5.5.0",
                    "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
                    "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
                    "dev": true,
                    "requires": {
                        "has-flag": "3.0.0"
                    }
                }
            }
        },
        "gulp-eslint": {
            "version": "3.0.1",
            "resolved": "https://registry.npmjs.org/gulp-eslint/-/gulp-eslint-3.0.1.tgz",
            "integrity": "sha1-BOV+PhjGl0JnwSz2hV3HF9SjE70=",
            "requires": {
                "bufferstreams": "1.1.3",
                "eslint": "3.19.0",
                "gulp-util": "3.0.8"
            }
        },
        "gulp-filter": {
            "version": "5.1.0",
            "resolved": "https://registry.npmjs.org/gulp-filter/-/gulp-filter-5.1.0.tgz",
            "integrity": "sha1-oF4Rr/sHz33PQafeHLe2OsN4PnM=",
            "requires": {
                "multimatch": "2.1.0",
                "plugin-error": "0.1.2",
                "streamfilter": "1.0.7"
            }
        },
        "gulp-if": {
            "version": "2.0.2",
            "resolved": "https://registry.npmjs.org/gulp-if/-/gulp-if-2.0.2.tgz",
            "integrity": "sha1-pJe351cwBQQcqivIt92jyARE1ik=",
            "requires": {
                "gulp-match": "1.0.3",
                "ternary-stream": "2.0.1",
                "through2": "2.0.3"
            }
        },
        "gulp-match": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/gulp-match/-/gulp-match-1.0.3.tgz",
            "integrity": "sha1-kcfA1/Kb7NZgbVfYCn+Hdqh6uo4=",
            "requires": {
                "minimatch": "3.0.4"
            }
        },
        "gulp-prompt": {
            "version": "0.2.0",
            "resolved": "https://registry.npmjs.org/gulp-prompt/-/gulp-prompt-0.2.0.tgz",
            "integrity": "sha1-l2DJC72H6AAigzDrrHTWWcwt23g=",
            "requires": {
                "event-stream": "3.0.20",
                "inquirer": "0.10.1"
            },
            "dependencies": {
                "cli-width": {
                    "version": "1.1.1",
                    "resolved": "https://registry.npmjs.org/cli-width/-/cli-width-1.1.1.tgz",
                    "integrity": "sha1-pNKT72frt7iNSk1CwMzwDE0eNm0="
                },
                "inquirer": {
                    "version": "0.10.1",
                    "resolved": "http://registry.npmjs.org/inquirer/-/inquirer-0.10.1.tgz",
                    "integrity": "sha1-6iXkzmnKFF4FyZ5G3P7AXkASWUo=",
                    "requires": {
                        "ansi-escapes": "1.4.0",
                        "ansi-regex": "2.1.1",
                        "chalk": "1.1.3",
                        "cli-cursor": "1.0.2",
                        "cli-width": "1.1.1",
                        "figures": "1.7.0",
                        "lodash": "3.10.1",
                        "readline2": "1.0.1",
                        "run-async": "0.1.0",
                        "rx-lite": "3.1.2",
                        "strip-ansi": "3.0.1",
                        "through": "2.3.8"
                    }
                },
                "lodash": {
                    "version": "3.10.1",
                    "resolved": "http://registry.npmjs.org/lodash/-/lodash-3.10.1.tgz",
                    "integrity": "sha1-W/Rejkm6QYnhfUgnid/RW9FAt7Y="
                }
            }
        },
        "gulp-rename": {
            "version": "1.4.0",
            "resolved": "https://registry.npmjs.org/gulp-rename/-/gulp-rename-1.4.0.tgz",
            "integrity": "sha512-swzbIGb/arEoFK89tPY58vg3Ok1bw+d35PfUNwWqdo7KM4jkmuGA78JiDNqR+JeZFaeeHnRg9N7aihX3YPmsyg=="
        },
        "gulp-sass": {
            "version": "3.2.1",
            "resolved": "https://registry.npmjs.org/gulp-sass/-/gulp-sass-3.2.1.tgz",
            "integrity": "sha512-UATbRpSDsyXCnpYSPBUEvdvtSEzksJs7/oQ0CujIpzKqKrO6vlnYwhX2UTsGrf4rNLwqlSSaM271It0uHYvJ3Q==",
            "requires": {
                "gulp-util": "3.0.8",
                "lodash.clonedeep": "4.5.0",
                "node-sass": "4.9.3",
                "through2": "2.0.3",
                "vinyl-sourcemaps-apply": "0.2.1"
            }
        },
        "gulp-sass-bulk-import": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/gulp-sass-bulk-import/-/gulp-sass-bulk-import-1.0.1.tgz",
            "integrity": "sha1-AvHW0xDgGOae/iUlgRpOc4E5ZCM=",
            "requires": {
                "glob": "4.5.3",
                "through2": "0.6.5",
                "vinyl-fs": "0.3.14"
            },
            "dependencies": {
                "readable-stream": {
                    "version": "1.0.34",
                    "resolved": "http://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz",
                    "integrity": "sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=",
                    "requires": {
                        "core-util-is": "1.0.2",
                        "inherits": "2.0.3",
                        "isarray": "0.0.1",
                        "string_decoder": "0.10.31"
                    }
                },
                "through2": {
                    "version": "0.6.5",
                    "resolved": "https://registry.npmjs.org/through2/-/through2-0.6.5.tgz",
                    "integrity": "sha1-QaucZ7KdVyCQcUEOHXp6lozTrUg=",
                    "requires": {
                        "readable-stream": "1.0.34",
                        "xtend": "4.0.1"
                    }
                }
            }
        },
        "gulp-sass-grapher": {
            "version": "0.1.4",
            "resolved": "https://registry.npmjs.org/gulp-sass-grapher/-/gulp-sass-grapher-0.1.4.tgz",
            "integrity": "sha1-eA8r6A6wvfFBhE7RDgLTnwY4tnc=",
            "requires": {
                "gulp-util": "3.0.8",
                "sass-graph": "2.2.4",
                "through2": "2.0.3",
                "vinyl": "1.2.0"
            },
            "dependencies": {
                "vinyl": {
                    "version": "1.2.0",
                    "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-1.2.0.tgz",
                    "integrity": "sha1-XIgDbPVl5d8FVYv8kR+GVt8hiIQ=",
                    "requires": {
                        "clone": "1.0.4",
                        "clone-stats": "0.0.1",
                        "replace-ext": "0.0.1"
                    }
                }
            }
        },
        "gulp-sourcemaps": {
            "version": "2.6.4",
            "resolved": "https://registry.npmjs.org/gulp-sourcemaps/-/gulp-sourcemaps-2.6.4.tgz",
            "integrity": "sha1-y7IAhFCxvM5s0jv5gze+dRv24wo=",
            "requires": {
                "@gulp-sourcemaps/identity-map": "1.0.2",
                "@gulp-sourcemaps/map-sources": "1.0.0",
                "acorn": "5.7.3",
                "convert-source-map": "1.6.0",
                "css": "2.2.4",
                "debug-fabulous": "1.1.0",
                "detect-newline": "2.1.0",
                "graceful-fs": "4.1.11",
                "source-map": "0.6.1",
                "strip-bom-string": "1.0.0",
                "through2": "2.0.3"
            },
            "dependencies": {
                "graceful-fs": {
                    "version": "4.1.11",
                    "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.11.tgz",
                    "integrity": "sha1-Dovf5NHduIVNZOBOp8AOKgJuVlg="
                },
                "source-map": {
                    "version": "0.6.1",
                    "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
                    "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="
                }
            }
        },
        "gulp-upload": {
            "version": "0.0.3",
            "resolved": "https://registry.npmjs.org/gulp-upload/-/gulp-upload-0.0.3.tgz",
            "integrity": "sha1-zKNO45NDKyPeP3z4QzPPfqZjy+s=",
            "requires": {
                "formstream": "1.1.0",
                "gulp": "3.9.1",
                "gulp-util": "3.0.8",
                "through2": "0.6.5",
                "urllib": "2.29.1"
            },
            "dependencies": {
                "readable-stream": {
                    "version": "1.0.34",
                    "resolved": "http://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz",
                    "integrity": "sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=",
                    "requires": {
                        "core-util-is": "1.0.2",
                        "inherits": "2.0.3",
                        "isarray": "0.0.1",
                        "string_decoder": "0.10.31"
                    }
                },
                "through2": {
                    "version": "0.6.5",
                    "resolved": "https://registry.npmjs.org/through2/-/through2-0.6.5.tgz",
                    "integrity": "sha1-QaucZ7KdVyCQcUEOHXp6lozTrUg=",
                    "requires": {
                        "readable-stream": "1.0.34",
                        "xtend": "4.0.1"
                    }
                }
            }
        },
        "gulp-util": {
            "version": "3.0.8",
            "resolved": "https://registry.npmjs.org/gulp-util/-/gulp-util-3.0.8.tgz",
            "integrity": "sha1-AFTh50RQLifATBh8PsxQXdVLu08=",
            "requires": {
                "array-differ": "1.0.0",
                "array-uniq": "1.0.3",
                "beeper": "1.1.1",
                "chalk": "1.1.3",
                "dateformat": "2.2.0",
                "fancy-log": "1.3.2",
                "gulplog": "1.0.0",
                "has-gulplog": "0.1.0",
                "lodash._reescape": "3.0.0",
                "lodash._reevaluate": "3.0.0",
                "lodash._reinterpolate": "3.0.0",
                "lodash.template": "3.6.2",
                "minimist": "1.2.0",
                "multipipe": "0.1.2",
                "object-assign": "3.0.0",
                "replace-ext": "0.0.1",
                "through2": "2.0.3",
                "vinyl": "0.5.3"
            },
            "dependencies": {
                "minimist": {
                    "version": "1.2.0",
                    "resolved": "http://registry.npmjs.org/minimist/-/minimist-1.2.0.tgz",
                    "integrity": "sha1-o1AIsg9BOD7sH7kU9M1d95omQoQ="
                }
            }
        },
        "gulp-watch": {
            "version": "4.3.11",
            "resolved": "https://registry.npmjs.org/gulp-watch/-/gulp-watch-4.3.11.tgz",
            "integrity": "sha1-Fi/FY96fx3DpH5p845VVE6mhGMA=",
            "requires": {
                "anymatch": "1.3.2",
                "chokidar": "1.7.0",
                "glob-parent": "3.1.0",
                "gulp-util": "3.0.8",
                "object-assign": "4.1.1",
                "path-is-absolute": "1.0.1",
                "readable-stream": "2.3.6",
                "slash": "1.0.0",
                "vinyl": "1.2.0",
                "vinyl-file": "2.0.0"
            },
            "dependencies": {
                "glob-parent": {
                    "version": "3.1.0",
                    "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-3.1.0.tgz",
                    "integrity": "sha1-nmr2KZ2NO9K9QEMIMr0RPfkGxa4=",
                    "requires": {
                        "is-glob": "3.1.0",
                        "path-dirname": "1.0.2"
                    }
                },
                "isarray": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
                    "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
                },
                "object-assign": {
                    "version": "4.1.1",
                    "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
                    "integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
                },
                "readable-stream": {
                    "version": "2.3.6",
                    "resolved": "http://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz",
                    "integrity": "sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==",
                    "requires": {
                        "core-util-is": "1.0.2",
                        "inherits": "2.0.3",
                        "isarray": "1.0.0",
                        "process-nextick-args": "2.0.0",
                        "safe-buffer": "5.1.2",
                        "string_decoder": "1.1.1",
                        "util-deprecate": "1.0.2"
                    }
                },
                "string_decoder": {
                    "version": "1.1.1",
                    "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
                    "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
                    "requires": {
                        "safe-buffer": "5.1.2"
                    }
                },
                "vinyl": {
                    "version": "1.2.0",
                    "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-1.2.0.tgz",
                    "integrity": "sha1-XIgDbPVl5d8FVYv8kR+GVt8hiIQ=",
                    "requires": {
                        "clone": "1.0.4",
                        "clone-stats": "0.0.1",
                        "replace-ext": "0.0.1"
                    }
                }
            }
        },
        "gulp.spritesmith": {
            "version": "6.9.0",
            "resolved": "https://registry.npmjs.org/gulp.spritesmith/-/gulp.spritesmith-6.9.0.tgz",
            "integrity": "sha1-KPge46Qlx/iMbd5WupINmV+dBBk=",
            "requires": {
                "async": "2.1.5",
                "minimatch": "3.0.4",
                "spritesheet-templates": "10.2.2",
                "spritesmith": "3.3.1",
                "through2": "2.0.3",
                "underscore": "1.8.3",
                "url2": "1.0.4",
                "vinyl": "2.1.0"
            },
            "dependencies": {
                "clone": {
                    "version": "2.1.2",
                    "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",
                    "integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18="
                },
                "clone-stats": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/clone-stats/-/clone-stats-1.0.0.tgz",
                    "integrity": "sha1-s3gt/4u1R04Yuba/D9/ngvh3doA="
                },
                "replace-ext": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/replace-ext/-/replace-ext-1.0.0.tgz",
                    "integrity": "sha1-3mMSg3P8v3w8z6TeWkgMRaZ5WOs="
                },
                "vinyl": {
                    "version": "2.1.0",
                    "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-2.1.0.tgz",
                    "integrity": "sha1-Ah+cLPlR1rk5lDyJ617lrdT9kkw=",
                    "requires": {
                        "clone": "2.1.2",
                        "clone-buffer": "1.0.0",
                        "clone-stats": "1.0.0",
                        "cloneable-readable": "1.1.2",
                        "remove-trailing-separator": "1.1.0",
                        "replace-ext": "1.0.0"
                    }
                }
            }
        },
        "gulplog": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/gulplog/-/gulplog-1.0.0.tgz",
            "integrity": "sha1-4oxNRdBey77YGDY86PnFkmIp/+U=",
            "requires": {
                "glogg": "1.0.1"
            }
        },
        "handlebars": {
            "version": "4.0.12",
            "resolved": "https://registry.npmjs.org/handlebars/-/handlebars-4.0.12.tgz",
            "integrity": "sha512-RhmTekP+FZL+XNhwS1Wf+bTTZpdLougwt5pcgA1tuz6Jcx0fpH/7z0qd71RKnZHBCxIRBHfBOnio4gViPemNzA==",
            "requires": {
                "async": "2.6.1",
                "optimist": "0.6.1",
                "source-map": "0.6.1",
                "uglify-js": "3.4.9"
            },
            "dependencies": {
                "async": {
                    "version": "2.6.1",
                    "resolved": "https://registry.npmjs.org/async/-/async-2.6.1.tgz",
                    "integrity": "sha512-fNEiL2+AZt6AlAw/29Cr0UDe4sRAHCpEHh54WMz+Bb7QfNcFw4h3loofyJpLeQs4Yx7yuqu/2dLgM5hKOs6HlQ==",
                    "requires": {
                        "lodash": "4.17.11"
                    }
                },
                "source-map": {
                    "version": "0.6.1",
                    "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
                    "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="
                }
            }
        },
        "handlebars-layouts": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/handlebars-layouts/-/handlebars-layouts-1.1.0.tgz",
            "integrity": "sha1-JhK+Wu2PICaXN8cxHaFcnC11+7w="
        },
        "har-schema": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",
            "integrity": "sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI="
        },
        "har-validator": {
            "version": "5.1.0",
            "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.0.tgz",
            "integrity": "sha512-+qnmNjI4OfH2ipQ9VQOw23bBd/ibtfbVdK2fYbY4acTDqKTW/YDp9McimZdDbG8iV9fZizUqQMD5xvriB146TA==",
            "requires": {
                "ajv": "5.5.2",
                "har-schema": "2.0.0"
            },
            "dependencies": {
                "ajv": {
                    "version": "5.5.2",
                    "resolved": "https://registry.npmjs.org/ajv/-/ajv-5.5.2.tgz",
                    "integrity": "sha1-c7Xuyj+rZT49P5Qis0GtQiBdyWU=",
                    "requires": {
                        "co": "4.6.0",
                        "fast-deep-equal": "1.1.0",
                        "fast-json-stable-stringify": "2.0.0",
                        "json-schema-traverse": "0.3.1"
                    }
                }
            }
        },
        "has": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",
            "integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",
            "requires": {
                "function-bind": "1.1.1"
            }
        },
        "has-ansi": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/has-ansi/-/has-ansi-2.0.0.tgz",
            "integrity": "sha1-NPUEnOHs3ysGSa8+8k5F7TVBbZE=",
            "requires": {
                "ansi-regex": "2.1.1"
            }
        },
        "has-flag": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-1.0.0.tgz",
            "integrity": "sha1-nZ55MWXOAXoA8AQYxD+UKnsdEfo="
        },
        "has-gulplog": {
            "version": "0.1.0",
            "resolved": "https://registry.npmjs.org/has-gulplog/-/has-gulplog-0.1.0.tgz",
            "integrity": "sha1-ZBTIKRNpfaUVkDl9r7EvIpZ4Ec4=",
            "requires": {
                "sparkles": "1.0.1"
            }
        },
        "has-unicode": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/has-unicode/-/has-unicode-2.0.1.tgz",
            "integrity": "sha1-4Ob+aijPUROIVeCG0Wkedx3iqLk="
        },
        "has-value": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/has-value/-/has-value-1.0.0.tgz",
            "integrity": "sha1-GLKB2lhbHFxR3vJMkw7SmgvmsXc=",
            "requires": {
                "get-value": "2.0.6",
                "has-values": "1.0.0",
                "isobject": "3.0.1"
            }
        },
        "has-values": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/has-values/-/has-values-1.0.0.tgz",
            "integrity": "sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=",
            "requires": {
                "is-number": "3.0.0",
                "kind-of": "4.0.0"
            },
            "dependencies": {
                "kind-of": {
                    "version": "4.0.0",
                    "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-4.0.0.tgz",
                    "integrity": "sha1-IIE989cSkosgc3hpGkUGb65y3Vc=",
                    "requires": {
                        "is-buffer": "1.1.6"
                    }
                }
            }
        },
        "hoek": {
            "version": "2.16.3",
            "resolved": "https://registry.npmjs.org/hoek/-/hoek-2.16.3.tgz",
            "integrity": "sha1-ILt0A9POo5jpHcRxCo/xuCdKJe0="
        },
        "home-or-tmp": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/home-or-tmp/-/home-or-tmp-2.0.0.tgz",
            "integrity": "sha1-42w/LSyufXRqhX440Y1fMqeILbg=",
            "requires": {
                "os-homedir": "1.0.2",
                "os-tmpdir": "1.0.2"
            }
        },
        "homedir-polyfill": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/homedir-polyfill/-/homedir-polyfill-1.0.1.tgz",
            "integrity": "sha1-TCu8inWJmP7r9e1oWA921GdotLw=",
            "requires": {
                "parse-passwd": "1.0.0"
            }
        },
        "hosted-git-info": {
            "version": "2.7.1",
            "resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.7.1.tgz",
            "integrity": "sha512-7T/BxH19zbcCTa8XkMlbK5lTo1WtgkFi3GvdWEyNuc4Vex7/9Dqbnpsf4JMydcfj9HCg4zUWFTL3Za6lapg5/w=="
        },
        "http-errors": {
            "version": "1.6.3",
            "resolved": "http://registry.npmjs.org/http-errors/-/http-errors-1.6.3.tgz",
            "integrity": "sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=",
            "requires": {
                "depd": "1.1.2",
                "inherits": "2.0.3",
                "setprototypeof": "1.1.0",
                "statuses": "1.5.0"
            }
        },
        "http-proxy-agent": {
            "version": "2.1.0",
            "resolved": "https://registry.npmjs.org/http-proxy-agent/-/http-proxy-agent-2.1.0.tgz",
            "integrity": "sha512-qwHbBLV7WviBl0rQsOzH6o5lwyOIvwp/BdFnvVxXORldu5TmjFfjzBcWUWS5kWAZhmv+JtiDhSuQCp4sBfbIgg==",
            "requires": {
                "agent-base": "4.2.1",
                "debug": "3.1.0"
            },
            "dependencies": {
                "debug": {
                    "version": "3.1.0",
                    "resolved": "https://registry.npmjs.org/debug/-/debug-3.1.0.tgz",
                    "integrity": "sha512-OX8XqP7/1a9cqkxYw2yXss15f26NKWBpDXQd0/uK/KPqdQhxbPa994hnzjcE2VqQpDslf55723cKPUOGSmMY3g==",
                    "requires": {
                        "ms": "2.0.0"
                    }
                }
            }
        },
        "http-signature": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",
            "integrity": "sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=",
            "requires": {
                "assert-plus": "1.0.0",
                "jsprim": "1.4.1",
                "sshpk": "1.14.2"
            }
        },
        "https-proxy-agent": {
            "version": "2.2.1",
            "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-2.2.1.tgz",
            "integrity": "sha512-HPCTS1LW51bcyMYbxUIOO4HEOlQ1/1qRaFWcyxvwaqUS9TY88aoEuHUY33kuAh1YhVVaDQhLZsnPd+XNARWZlQ==",
            "requires": {
                "agent-base": "4.2.1",
                "debug": "3.2.5"
            },
            "dependencies": {
                "debug": {
                    "version": "3.2.5",
                    "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.5.tgz",
                    "integrity": "sha512-D61LaDQPQkxJ5AUM2mbSJRbPkNs/TmdmOeLAi1hgDkpDfIfetSrjmWhccwtuResSwMbACjx/xXQofvM9CE/aeg==",
                    "requires": {
                        "ms": "2.1.1"
                    }
                },
                "ms": {
                    "version": "2.1.1",
                    "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.1.tgz",
                    "integrity": "sha512-tgp+dl5cGk28utYktBsrFqA7HKgrhgPsg6Z/EfhWI4gl1Hwq8B/GmY/0oXZ6nF8hDVesS/FpnYaD/kOWhYQvyg=="
                }
            }
        },
        "humanize-ms": {
            "version": "1.2.1",
            "resolved": "https://registry.npmjs.org/humanize-ms/-/humanize-ms-1.2.1.tgz",
            "integrity": "sha1-xG4xWaKT9riW2ikxbYtv6Lt5u+0=",
            "requires": {
                "ms": "2.0.0"
            }
        },
        "iconv-lite": {
            "version": "0.4.24",
            "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
            "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
            "requires": {
                "safer-buffer": "2.1.2"
            }
        },
        "ignore": {
            "version": "3.3.10",
            "resolved": "https://registry.npmjs.org/ignore/-/ignore-3.3.10.tgz",
            "integrity": "sha512-Pgs951kaMm5GXP7MOvxERINe3gsaVjUWFm+UZPSq9xYriQAksyhg0csnS0KXSNRD5NmNdapXEpjxG49+AKh/ug=="
        },
        "imurmurhash": {
            "version": "0.1.4",
            "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
            "integrity": "sha1-khi5srkoojixPcT7a21XbyMUU+o="
        },
        "in-publish": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/in-publish/-/in-publish-2.0.0.tgz",
            "integrity": "sha1-4g/146KvwmkDILbcVSaCqcf631E="
        },
        "indent-string": {
            "version": "2.1.0",
            "resolved": "https://registry.npmjs.org/indent-string/-/indent-string-2.1.0.tgz",
            "integrity": "sha1-ji1INIdCEhtKghi3oTfppSBJ3IA=",
            "requires": {
                "repeating": "2.0.1"
            }
        },
        "inflight": {
            "version": "1.0.6",
            "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
            "integrity": "sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=",
            "requires": {
                "once": "1.3.3",
                "wrappy": "1.0.2"
            }
        },
        "inherits": {
            "version": "2.0.3",
            "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
            "integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4="
        },
        "ini": {
            "version": "1.3.5",
            "resolved": "https://registry.npmjs.org/ini/-/ini-1.3.5.tgz",
            "integrity": "sha512-RZY5huIKCMRWDUqZlEi72f/lmXKMvuszcMBduliQ3nnWbx9X/ZBQO7DijMEYS9EhHBb2qacRUMtC7svLwe0lcw=="
        },
        "inquirer": {
            "version": "3.3.0",
            "resolved": "https://registry.npmjs.org/inquirer/-/inquirer-3.3.0.tgz",
            "integrity": "sha512-h+xtnyk4EwKvFWHrUYsWErEVR+igKtLdchu+o0Z1RL7VU/jVMFbYir2bp6bAj8efFNxWqHX0dIss6fJQ+/+qeQ==",
            "requires": {
                "ansi-escapes": "3.1.0",
                "chalk": "2.4.1",
                "cli-cursor": "2.1.0",
                "cli-width": "2.2.0",
                "external-editor": "2.2.0",
                "figures": "2.0.0",
                "lodash": "4.17.11",
                "mute-stream": "0.0.7",
                "run-async": "2.3.0",
                "rx-lite": "4.0.8",
                "rx-lite-aggregates": "4.0.8",
                "string-width": "2.1.1",
                "strip-ansi": "4.0.0",
                "through": "2.3.8"
            },
            "dependencies": {
                "ansi-escapes": {
                    "version": "3.1.0",
                    "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-3.1.0.tgz",
                    "integrity": "sha512-UgAb8H9D41AQnu/PbWlCofQVcnV4Gs2bBJi9eZPxfU/hgglFh3SMDMENRIqdr7H6XFnXdoknctFByVsCOotTVw=="
                },
                "ansi-regex": {
                    "version": "3.0.0",
                    "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
                    "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg="
                },
                "ansi-styles": {
                    "version": "3.2.1",
                    "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
                    "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
                    "requires": {
                        "color-convert": "1.9.3"
                    }
                },
                "chalk": {
                    "version": "2.4.1",
                    "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.1.tgz",
                    "integrity": "sha512-ObN6h1v2fTJSmUXoS3nMQ92LbDK9be4TV+6G+omQlGJFdcUX5heKi1LZ1YnRMIgwTLEj3E24bT6tYni50rlCfQ==",
                    "requires": {
                        "ansi-styles": "3.2.1",
                        "escape-string-regexp": "1.0.5",
                        "supports-color": "5.5.0"
                    }
                },
                "cli-cursor": {
                    "version": "2.1.0",
                    "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-2.1.0.tgz",
                    "integrity": "sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=",
                    "requires": {
                        "restore-cursor": "2.0.0"
                    }
                },
                "figures": {
                    "version": "2.0.0",
                    "resolved": "https://registry.npmjs.org/figures/-/figures-2.0.0.tgz",
                    "integrity": "sha1-OrGi0qYsi/tDGgyUy3l6L84nyWI=",
                    "requires": {
                        "escape-string-regexp": "1.0.5"
                    }
                },
                "has-flag": {
                    "version": "3.0.0",
                    "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
                    "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0="
                },
                "is-fullwidth-code-point": {
                    "version": "2.0.0",
                    "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
                    "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8="
                },
                "mute-stream": {
                    "version": "0.0.7",
                    "resolved": "https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.7.tgz",
                    "integrity": "sha1-MHXOk7whuPq0PhvE2n6BFe0ee6s="
                },
                "onetime": {
                    "version": "2.0.1",
                    "resolved": "https://registry.npmjs.org/onetime/-/onetime-2.0.1.tgz",
                    "integrity": "sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=",
                    "requires": {
                        "mimic-fn": "1.2.0"
                    }
                },
                "restore-cursor": {
                    "version": "2.0.0",
                    "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-2.0.0.tgz",
                    "integrity": "sha1-n37ih/gv0ybU/RYpI9YhKe7g368=",
                    "requires": {
                        "onetime": "2.0.1",
                        "signal-exit": "3.0.2"
                    }
                },
                "run-async": {
                    "version": "2.3.0",
                    "resolved": "https://registry.npmjs.org/run-async/-/run-async-2.3.0.tgz",
                    "integrity": "sha1-A3GrSuC91yDUFm19/aZP96RFpsA=",
                    "requires": {
                        "is-promise": "2.1.0"
                    }
                },
                "rx-lite": {
                    "version": "4.0.8",
                    "resolved": "https://registry.npmjs.org/rx-lite/-/rx-lite-4.0.8.tgz",
                    "integrity": "sha1-Cx4Rr4vESDbwSmQH6S2kJGe3lEQ="
                },
                "string-width": {
                    "version": "2.1.1",
                    "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
                    "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
                    "requires": {
                        "is-fullwidth-code-point": "2.0.0",
                        "strip-ansi": "4.0.0"
                    }
                },
                "strip-ansi": {
                    "version": "4.0.0",
                    "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
                    "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
                    "requires": {
                        "ansi-regex": "3.0.0"
                    }
                },
                "supports-color": {
                    "version": "5.5.0",
                    "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
                    "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
                    "requires": {
                        "has-flag": "3.0.0"
                    }
                }
            }
        },
        "interpret": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/interpret/-/interpret-1.1.0.tgz",
            "integrity": "sha1-ftGxQQxqDg94z5XTuEQMY/eLhhQ="
        },
        "invariant": {
            "version": "2.2.4",
            "resolved": "https://registry.npmjs.org/invariant/-/invariant-2.2.4.tgz",
            "integrity": "sha512-phJfQVBuaJM5raOpJjSfkiD6BpbCE4Ns//LaXl6wGYtUBY83nWS6Rf9tXm2e8VaK60JEjYldbPif/A2B1C2gNA==",
            "requires": {
                "loose-envify": "1.4.0"
            }
        },
        "invert-kv": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/invert-kv/-/invert-kv-1.0.0.tgz",
            "integrity": "sha1-EEqOSqym09jNFXqO+L+rLXo//bY="
        },
        "iota-array": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/iota-array/-/iota-array-1.0.0.tgz",
            "integrity": "sha1-ge9X/l0FgUzVjCSDYyqZwwoOgIc="
        },
        "ip": {
            "version": "1.1.5",
            "resolved": "https://registry.npmjs.org/ip/-/ip-1.1.5.tgz",
            "integrity": "sha1-vd7XARQpCCjAoDnnLvJfWq7ENUo="
        },
        "irregular-plurals": {
            "version": "1.4.0",
            "resolved": "https://registry.npmjs.org/irregular-plurals/-/irregular-plurals-1.4.0.tgz",
            "integrity": "sha1-LKmwM2UREYVUEvFr5dd8YqRYp2Y=",
            "dev": true
        },
        "is-absolute": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/is-absolute/-/is-absolute-1.0.0.tgz",
            "integrity": "sha512-dOWoqflvcydARa360Gvv18DZ/gRuHKi2NU/wU5X1ZFzdYfH29nkiNZsF3mp4OJ3H4yo9Mx8A/uAGNzpzPN3yBA==",
            "requires": {
                "is-relative": "1.0.0",
                "is-windows": "1.0.2"
            }
        },
        "is-accessor-descriptor": {
            "version": "0.1.6",
            "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-0.1.6.tgz",
            "integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
            "requires": {
                "kind-of": "3.2.2"
            },
            "dependencies": {
                "kind-of": {
                    "version": "3.2.2",
                    "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
                    "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
                    "requires": {
                        "is-buffer": "1.1.6"
                    }
                }
            }
        },
        "is-arrayish": {
            "version": "0.2.1",
            "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz",
            "integrity": "sha1-d8mYQFJ6qOyxqLppe4BkWnqSap0="
        },
        "is-binary-path": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-1.0.1.tgz",
            "integrity": "sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=",
            "requires": {
                "binary-extensions": "1.12.0"
            }
        },
        "is-buffer": {
            "version": "1.1.6",
            "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
            "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w=="
        },
        "is-builtin-module": {
            "version": "1.0.0",
            "resolved": "http://registry.npmjs.org/is-builtin-module/-/is-builtin-module-1.0.0.tgz",
            "integrity": "sha1-VAVy0096wxGfj3bDDLwbHgN6/74=",
            "requires": {
                "builtin-modules": "1.1.1"
            }
        },
        "is-data-descriptor": {
            "version": "0.1.4",
            "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-0.1.4.tgz",
            "integrity": "sha1-C17mSDiOLIYCgueT8YVv7D8wG1Y=",
            "requires": {
                "kind-of": "3.2.2"
            },
            "dependencies": {
                "kind-of": {
                    "version": "3.2.2",
                    "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
                    "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
                    "requires": {
                        "is-buffer": "1.1.6"
                    }
                }
            }
        },
        "is-descriptor": {
            "version": "0.1.6",
            "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-0.1.6.tgz",
            "integrity": "sha512-avDYr0SB3DwO9zsMov0gKCESFYqCnE4hq/4z3TdUlukEy5t9C0YRq7HLrsN52NAcqXKaepeCD0n+B0arnVG3Hg==",
            "requires": {
                "is-accessor-descriptor": "0.1.6",
                "is-data-descriptor": "0.1.4",
                "kind-of": "5.1.0"
            },
            "dependencies": {
                "kind-of": {
                    "version": "5.1.0",
                    "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-5.1.0.tgz",
                    "integrity": "sha512-NGEErnH6F2vUuXDh+OlbcKW7/wOcfdRHaZ7VWtqCztfHri/++YKmP51OdWeGPuqCOba6kk2OTe5d02VmTB80Pw=="
                }
            }
        },
        "is-dotfile": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/is-dotfile/-/is-dotfile-1.0.3.tgz",
            "integrity": "sha1-pqLzL/0t+wT1yiXs0Pa4PPeYoeE="
        },
        "is-equal-shallow": {
            "version": "0.1.3",
            "resolved": "https://registry.npmjs.org/is-equal-shallow/-/is-equal-shallow-0.1.3.tgz",
            "integrity": "sha1-IjgJj8Ih3gvPpdnqxMRdY4qhxTQ=",
            "requires": {
                "is-primitive": "2.0.0"
            }
        },
        "is-extendable": {
            "version": "0.1.1",
            "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-0.1.1.tgz",
            "integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik="
        },
        "is-extglob": {
            "version": "2.1.1",
            "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
            "integrity": "sha1-qIwCU1eR8C7TfHahueqXc8gz+MI="
        },
        "is-finite": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/is-finite/-/is-finite-1.0.2.tgz",
            "integrity": "sha1-zGZ3aVYCvlUO8R6LSqYwU0K20Ko=",
            "requires": {
                "number-is-nan": "1.0.1"
            }
        },
        "is-fullwidth-code-point": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",
            "integrity": "sha1-754xOG8DGn8NZDr4L95QxFfvAMs=",
            "requires": {
                "number-is-nan": "1.0.1"
            }
        },
        "is-glob": {
            "version": "3.1.0",
            "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-3.1.0.tgz",
            "integrity": "sha1-e6WuJCF4BKxwcHuWkiVnSGzD6Eo=",
            "requires": {
                "is-extglob": "2.1.1"
            }
        },
        "is-my-ip-valid": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/is-my-ip-valid/-/is-my-ip-valid-1.0.0.tgz",
            "integrity": "sha512-gmh/eWXROncUzRnIa1Ubrt5b8ep/MGSnfAUI3aRp+sqTCs1tv1Isl8d8F6JmkN3dXKc3ehZMrtiPN9eL03NuaQ=="
        },
        "is-my-json-valid": {
            "version": "2.19.0",
            "resolved": "https://registry.npmjs.org/is-my-json-valid/-/is-my-json-valid-2.19.0.tgz",
            "integrity": "sha512-mG0f/unGX1HZ5ep4uhRaPOS8EkAY8/j6mDRMJrutq4CqhoJWYp7qAlonIPy3TV7p3ju4TK9fo/PbnoksWmsp5Q==",
            "requires": {
                "generate-function": "2.3.1",
                "generate-object-property": "1.2.0",
                "is-my-ip-valid": "1.0.0",
                "jsonpointer": "4.0.1",
                "xtend": "4.0.1"
            }
        },
        "is-number": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz",
            "integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",
            "requires": {
                "kind-of": "3.2.2"
            },
            "dependencies": {
                "kind-of": {
                    "version": "3.2.2",
                    "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
                    "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
                    "requires": {
                        "is-buffer": "1.1.6"
                    }
                }
            }
        },
        "is-obj": {
            "version": "1.0.1",
            "resolved": "http://registry.npmjs.org/is-obj/-/is-obj-1.0.1.tgz",
            "integrity": "sha1-PkcprB9f3gJc19g6iW2rn09n2w8=",
            "dev": true
        },
        "is-path-cwd": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/is-path-cwd/-/is-path-cwd-1.0.0.tgz",
            "integrity": "sha1-0iXsIxMuie3Tj9p2dHLmLmXxEG0="
        },
        "is-path-in-cwd": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/is-path-in-cwd/-/is-path-in-cwd-1.0.1.tgz",
            "integrity": "sha512-FjV1RTW48E7CWM7eE/J2NJvAEEVektecDBVBE5Hh3nM1Jd0kvhHtX68Pr3xsDf857xt3Y4AkwVULK1Vku62aaQ==",
            "requires": {
                "is-path-inside": "1.0.1"
            }
        },
        "is-path-inside": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-1.0.1.tgz",
            "integrity": "sha1-jvW33lBDej/cprToZe96pVy0gDY=",
            "requires": {
                "path-is-inside": "1.0.2"
            }
        },
        "is-plain-object": {
            "version": "2.0.4",
            "resolved": "https://registry.npmjs.org/is-plain-object/-/is-plain-object-2.0.4.tgz",
            "integrity": "sha512-h5PpgXkWitc38BBMYawTYMWJHFZJVnBquFE57xFpjB8pJFiF6gZ+bU+WyI/yqXiFR5mdLsgYNaPe8uao6Uv9Og==",
            "requires": {
                "isobject": "3.0.1"
            }
        },
        "is-posix-bracket": {
            "version": "0.1.1",
            "resolved": "https://registry.npmjs.org/is-posix-bracket/-/is-posix-bracket-0.1.1.tgz",
            "integrity": "sha1-MzTceXdDaOkvAW5vvAqI9c1ua8Q="
        },
        "is-primitive": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/is-primitive/-/is-primitive-2.0.0.tgz",
            "integrity": "sha1-IHurkWOEmcB7Kt8kCkGochADRXU="
        },
        "is-promise": {
            "version": "2.1.0",
            "resolved": "https://registry.npmjs.org/is-promise/-/is-promise-2.1.0.tgz",
            "integrity": "sha1-eaKp7OfwlugPNtKy87wWwf9L8/o="
        },
        "is-property": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/is-property/-/is-property-1.0.2.tgz",
            "integrity": "sha1-V/4cTkhHTt1lsJkR8msc1Ald2oQ="
        },
        "is-regexp": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/is-regexp/-/is-regexp-1.0.0.tgz",
            "integrity": "sha1-/S2INUXEa6xaYz57mgnof6LLUGk=",
            "dev": true
        },
        "is-relative": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/is-relative/-/is-relative-1.0.0.tgz",
            "integrity": "sha512-Kw/ReK0iqwKeu0MITLFuj0jbPAmEiOsIwyIXvvbfa6QfmN9pkD1M+8pdk7Rl/dTKbH34/XBFMbgD4iMJhLQbGA==",
            "requires": {
                "is-unc-path": "1.0.0"
            }
        },
        "is-resolvable": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/is-resolvable/-/is-resolvable-1.1.0.tgz",
            "integrity": "sha512-qgDYXFSR5WvEfuS5dMj6oTMEbrrSaM0CrFk2Yiq/gXnBvD9pMa2jGXxyhGLfvhZpuMZe18CJpFxAt3CRs42NMg=="
        },
        "is-typedarray": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",
            "integrity": "sha1-5HnICFjfDBsR3dppQPlgEfzaSpo="
        },
        "is-unc-path": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/is-unc-path/-/is-unc-path-1.0.0.tgz",
            "integrity": "sha512-mrGpVd0fs7WWLfVsStvgF6iEJnbjDFZh9/emhRDcGWTduTfNHd9CHeUwH3gYIjdbwo4On6hunkztwOaAw0yllQ==",
            "requires": {
                "unc-path-regex": "0.1.2"
            }
        },
        "is-utf8": {
            "version": "0.2.1",
            "resolved": "https://registry.npmjs.org/is-utf8/-/is-utf8-0.2.1.tgz",
            "integrity": "sha1-Sw2hRCEE0bM2NA6AeX6GXPOffXI="
        },
        "is-windows": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/is-windows/-/is-windows-1.0.2.tgz",
            "integrity": "sha512-eXK1UInq2bPmjyX6e3VHIzMLobc4J94i4AWn+Hpq3OU5KkrRC96OAcR3PRJ/pGu6m8TRnBHP9dkXQVsT/COVIA=="
        },
        "isarray": {
            "version": "0.0.1",
            "resolved": "https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz",
            "integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="
        },
        "isexe": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
            "integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA="
        },
        "isobject": {
            "version": "3.0.1",
            "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",
            "integrity": "sha1-TkMekrEalzFjaqH5yNHMvP2reN8="
        },
        "isstream": {
            "version": "0.1.2",
            "resolved": "https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz",
            "integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo="
        },
        "jpeg-js": {
            "version": "0.3.4",
            "resolved": "https://registry.npmjs.org/jpeg-js/-/jpeg-js-0.3.4.tgz",
            "integrity": "sha512-6IzjQxvnlT8UlklNmDXIJMWxijULjqGrzgqc0OG7YadZdvm7KPQ1j0ehmQQHckgEWOfgpptzcnWgESovxudpTA=="
        },
        "js-base64": {
            "version": "2.4.9",
            "resolved": "https://registry.npmjs.org/js-base64/-/js-base64-2.4.9.tgz",
            "integrity": "sha512-xcinL3AuDJk7VSzsHgb9DvvIXayBbadtMZ4HFPx8rUszbW1MuNMlwYVC4zzCZ6e1sqZpnNS5ZFYOhXqA39T7LQ=="
        },
        "js-tokens": {
            "version": "3.0.2",
            "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-3.0.2.tgz",
            "integrity": "sha1-mGbfOVECEw449/mWvOtlRDIJwls="
        },
        "js-yaml": {
            "version": "3.12.0",
            "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.12.0.tgz",
            "integrity": "sha512-PIt2cnwmPfL4hKNwqeiuz4bKfnzHTBv6HyVgjahA6mPLwPDzjDWrplJBMjHUFxku/N3FlmrbyPclad+I+4mJ3A==",
            "requires": {
                "argparse": "1.0.10",
                "esprima": "4.0.1"
            }
        },
        "jsbn": {
            "version": "0.1.1",
            "resolved": "https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz",
            "integrity": "sha1-peZUwuWi3rXyAdls77yoDA7y9RM=",
            "optional": true
        },
        "jsesc": {
            "version": "1.3.0",
            "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-1.3.0.tgz",
            "integrity": "sha1-RsP+yMGJKxKwgz25vHYiF226s0s="
        },
        "json-content-demux": {
            "version": "0.1.3",
            "resolved": "https://registry.npmjs.org/json-content-demux/-/json-content-demux-0.1.3.tgz",
            "integrity": "sha1-XBJ3v387dRKoa3Mt3UGzLU38scw="
        },
        "json-schema": {
            "version": "0.2.3",
            "resolved": "https://registry.npmjs.org/json-schema/-/json-schema-0.2.3.tgz",
            "integrity": "sha1-tIDIkuWaLwWVTOcnvT8qTogvnhM="
        },
        "json-schema-traverse": {
            "version": "0.3.1",
            "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.3.1.tgz",
            "integrity": "sha1-NJptRMU6Ud6JtAgFxdXlm0F9M0A="
        },
        "json-stable-stringify": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/json-stable-stringify/-/json-stable-stringify-1.0.1.tgz",
            "integrity": "sha1-mnWdOcXy/1A/1TAGRu1EX4jE+a8=",
            "requires": {
                "jsonify": "0.0.0"
            }
        },
        "json-stringify-safe": {
            "version": "5.0.1",
            "resolved": "https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz",
            "integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus="
        },
        "json5": {
            "version": "0.5.1",
            "resolved": "https://registry.npmjs.org/json5/-/json5-0.5.1.tgz",
            "integrity": "sha1-Hq3nrMASA0rYTiOWdn6tn6VJWCE="
        },
        "jsonify": {
            "version": "0.0.0",
            "resolved": "https://registry.npmjs.org/jsonify/-/jsonify-0.0.0.tgz",
            "integrity": "sha1-LHS27kHZPKUbe1qu6PUDYx0lKnM="
        },
        "jsonpointer": {
            "version": "4.0.1",
            "resolved": "https://registry.npmjs.org/jsonpointer/-/jsonpointer-4.0.1.tgz",
            "integrity": "sha1-T9kss04OnbPInIYi7PUfm5eMbLk="
        },
        "jsprim": {
            "version": "1.4.1",
            "resolved": "https://registry.npmjs.org/jsprim/-/jsprim-1.4.1.tgz",
            "integrity": "sha1-MT5mvB5cwG5Di8G3SZwuXFastqI=",
            "requires": {
                "assert-plus": "1.0.0",
                "extsprintf": "1.3.0",
                "json-schema": "0.2.3",
                "verror": "1.10.0"
            }
        },
        "kind-of": {
            "version": "6.0.2",
            "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.2.tgz",
            "integrity": "sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA=="
        },
        "layout": {
            "version": "2.2.0",
            "resolved": "https://registry.npmjs.org/layout/-/layout-2.2.0.tgz",
            "integrity": "sha1-MeRL/BjdEBmz/7II5AKku/4uavQ=",
            "requires": {
                "bin-pack": "1.0.2"
            }
        },
        "lazy-cache": {
            "version": "1.0.4",
            "resolved": "https://registry.npmjs.org/lazy-cache/-/lazy-cache-1.0.4.tgz",
            "integrity": "sha1-odePw6UEdMuAhF07O24dpJpEbo4="
        },
        "lcid": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/lcid/-/lcid-1.0.0.tgz",
            "integrity": "sha1-MIrMr6C8SDo4Z7S28rlQYlHRuDU=",
            "requires": {
                "invert-kv": "1.0.0"
            }
        },
        "levn": {
            "version": "0.3.0",
            "resolved": "https://registry.npmjs.org/levn/-/levn-0.3.0.tgz",
            "integrity": "sha1-OwmSTt+fCDwEkP3UwLxEIeBHZO4=",
            "requires": {
                "prelude-ls": "1.1.2",
                "type-check": "0.3.2"
            }
        },
        "liftoff": {
            "version": "2.5.0",
            "resolved": "https://registry.npmjs.org/liftoff/-/liftoff-2.5.0.tgz",
            "integrity": "sha1-IAkpG7Mc6oYbvxCnwVooyvdcMew=",
            "requires": {
                "extend": "3.0.2",
                "findup-sync": "2.0.0",
                "fined": "1.1.0",
                "flagged-respawn": "1.0.0",
                "is-plain-object": "2.0.4",
                "object.map": "1.0.1",
                "rechoir": "0.6.2",
                "resolve": "1.8.1"
            }
        },
        "load-json-file": {
            "version": "1.1.0",
            "resolved": "http://registry.npmjs.org/load-json-file/-/load-json-file-1.1.0.tgz",
            "integrity": "sha1-lWkFcI1YtLq0wiYbBPWfMcmTdMA=",
            "requires": {
                "graceful-fs": "4.1.11",
                "parse-json": "2.2.0",
                "pify": "2.3.0",
                "pinkie-promise": "2.0.1",
                "strip-bom": "2.0.0"
            },
            "dependencies": {
                "graceful-fs": {
                    "version": "4.1.11",
                    "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.11.tgz",
                    "integrity": "sha1-Dovf5NHduIVNZOBOp8AOKgJuVlg="
                },
                "strip-bom": {
                    "version": "2.0.0",
                    "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz",
                    "integrity": "sha1-YhmoVhZSBJHzV4i9vxRHqZx+aw4=",
                    "requires": {
                        "is-utf8": "0.2.1"
                    }
                }
            }
        },
        "lodash": {
            "version": "4.17.11",
            "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.11.tgz",
            "integrity": "sha512-cQKh8igo5QUhZ7lg38DYWAxMvjSAKG0A8wGSVimP07SIUEK2UO+arSRKbRZWtelMtN5V0Hkwh5ryOto/SshYIg=="
        },
        "lodash._basecopy": {
            "version": "3.0.1",
            "resolved": "https://registry.npmjs.org/lodash._basecopy/-/lodash._basecopy-3.0.1.tgz",
            "integrity": "sha1-jaDmqHbPNEwK2KVIghEd08XHyjY="
        },
        "lodash._basetostring": {
            "version": "3.0.1",
            "resolved": "https://registry.npmjs.org/lodash._basetostring/-/lodash._basetostring-3.0.1.tgz",
            "integrity": "sha1-0YYdh3+CSlL2aYMtyvPuFVZqB9U="
        },
        "lodash._basevalues": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/lodash._basevalues/-/lodash._basevalues-3.0.0.tgz",
            "integrity": "sha1-W3dXYoAr3j0yl1A+JjAIIP32Ybc="
        },
        "lodash._getnative": {
            "version": "3.9.1",
            "resolved": "https://registry.npmjs.org/lodash._getnative/-/lodash._getnative-3.9.1.tgz",
            "integrity": "sha1-VwvH3t5G1hzc3mh9ZdPuy6o6r/U="
        },
        "lodash._isiterateecall": {
            "version": "3.0.9",
            "resolved": "https://registry.npmjs.org/lodash._isiterateecall/-/lodash._isiterateecall-3.0.9.tgz",
            "integrity": "sha1-UgOte6Ql+uhCRg5pbbnPPmqsBXw="
        },
        "lodash._reescape": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/lodash._reescape/-/lodash._reescape-3.0.0.tgz",
            "integrity": "sha1-Kx1vXf4HyKNVdT5fJ/rH8c3hYWo="
        },
        "lodash._reevaluate": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/lodash._reevaluate/-/lodash._reevaluate-3.0.0.tgz",
            "integrity": "sha1-WLx0xAZklTrgsSTYBpltrKQx4u0="
        },
        "lodash._reinterpolate": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/lodash._reinterpolate/-/lodash._reinterpolate-3.0.0.tgz",
            "integrity": "sha1-DM8tiRZq8Ds2Y8eWU4t1rG4RTZ0="
        },
        "lodash._root": {
            "version": "3.0.1",
            "resolved": "https://registry.npmjs.org/lodash._root/-/lodash._root-3.0.1.tgz",
            "integrity": "sha1-+6HEUkwZ7ppfgTa0YJ8BfPTe1pI="
        },
        "lodash.assign": {
            "version": "4.2.0",
            "resolved": "https://registry.npmjs.org/lodash.assign/-/lodash.assign-4.2.0.tgz",
            "integrity": "sha1-DZnzzNem0mHRm9rrkkUAXShYCOc="
        },
        "lodash.clonedeep": {
            "version": "4.5.0",
            "resolved": "https://registry.npmjs.org/lodash.clonedeep/-/lodash.clonedeep-4.5.0.tgz",
            "integrity": "sha1-4j8/nE+Pvd6HJSnBBxhXoIblzO8="
        },
        "lodash.escape": {
            "version": "3.2.0",
            "resolved": "https://registry.npmjs.org/lodash.escape/-/lodash.escape-3.2.0.tgz",
            "integrity": "sha1-mV7g3BjBtIzJLv+ucaEKq1tIdpg=",
            "requires": {
                "lodash._root": "3.0.1"
            }
        },
        "lodash.isarguments": {
            "version": "3.1.0",
            "resolved": "https://registry.npmjs.org/lodash.isarguments/-/lodash.isarguments-3.1.0.tgz",
            "integrity": "sha1-L1c9hcaiQon/AGY7SRwdM4/zRYo="
        },
        "lodash.isarray": {
            "version": "3.0.4",
            "resolved": "https://registry.npmjs.org/lodash.isarray/-/lodash.isarray-3.0.4.tgz",
            "integrity": "sha1-eeTriMNqgSKvhvhEqpvNhRtfu1U="
        },
        "lodash.isfunction": {
            "version": "3.0.9",
            "resolved": "https://registry.npmjs.org/lodash.isfunction/-/lodash.isfunction-3.0.9.tgz",
            "integrity": "sha512-AirXNj15uRIMMPihnkInB4i3NHeb4iBtNg9WRWuK2o31S+ePwwNmDPaTL3o7dTJ+VXNZim7rFs4rxN4YU1oUJw=="
        },
        "lodash.isplainobject": {
            "version": "4.0.6",
            "resolved": "https://registry.npmjs.org/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz",
            "integrity": "sha1-fFJqUtibRcRcxpC4gWO+BJf1UMs="
        },
        "lodash.keys": {
            "version": "3.1.2",
            "resolved": "https://registry.npmjs.org/lodash.keys/-/lodash.keys-3.1.2.tgz",
            "integrity": "sha1-TbwEcrFWvlCgsoaFXRvQsMZWCYo=",
            "requires": {
                "lodash._getnative": "3.9.1",
                "lodash.isarguments": "3.1.0",
                "lodash.isarray": "3.0.4"
            }
        },
        "lodash.mergewith": {
            "version": "4.6.1",
            "resolved": "https://registry.npmjs.org/lodash.mergewith/-/lodash.mergewith-4.6.1.tgz",
            "integrity": "sha512-eWw5r+PYICtEBgrBE5hhlT6aAa75f411bgDz/ZL2KZqYV03USvucsxcHUIlGTDTECs1eunpI7HOV7U+WLDvNdQ=="
        },
        "lodash.restparam": {
            "version": "3.6.1",
            "resolved": "https://registry.npmjs.org/lodash.restparam/-/lodash.restparam-3.6.1.tgz",
            "integrity": "sha1-k2pOMJ7zMKdkXtQUWYbIWuWyCAU="
        },
        "lodash.sortby": {
            "version": "4.7.0",
            "resolved": "https://registry.npmjs.org/lodash.sortby/-/lodash.sortby-4.7.0.tgz",
            "integrity": "sha1-7dFMgk4sycHgsKG0K7UhBRakJDg="
        },
        "lodash.template": {
            "version": "3.6.2",
            "resolved": "https://registry.npmjs.org/lodash.template/-/lodash.template-3.6.2.tgz",
            "integrity": "sha1-+M3sxhaaJVvpCYrosMU9N4kx0U8=",
            "requires": {
                "lodash._basecopy": "3.0.1",
                "lodash._basetostring": "3.0.1",
                "lodash._basevalues": "3.0.0",
                "lodash._isiterateecall": "3.0.9",
                "lodash._reinterpolate": "3.0.0",
                "lodash.escape": "3.2.0",
                "lodash.keys": "3.1.2",
                "lodash.restparam": "3.6.1",
                "lodash.templatesettings": "3.1.1"
            }
        },
        "lodash.templatesettings": {
            "version": "3.1.1",
            "resolved": "https://registry.npmjs.org/lodash.templatesettings/-/lodash.templatesettings-3.1.1.tgz",
            "integrity": "sha1-+zB4RHU7Zrnxr6VOJix0UwfbqOU=",
            "requires": {
                "lodash._reinterpolate": "3.0.0",
                "lodash.escape": "3.2.0"
            }
        },
        "longest": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/longest/-/longest-1.0.1.tgz",
            "integrity": "sha1-MKCy2jj3N3DoKUoNIuZiXtd9AJc="
        },
        "loose-envify": {
            "version": "1.4.0",
            "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
            "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
            "requires": {
                "js-tokens": "3.0.2"
            }
        },
        "loud-rejection": {
            "version": "1.6.0",
            "resolved": "https://registry.npmjs.org/loud-rejection/-/loud-rejection-1.6.0.tgz",
            "integrity": "sha1-W0b4AUft7leIcPCG0Eghz5mOVR8=",
            "requires": {
                "currently-unhandled": "0.4.1",
                "signal-exit": "3.0.2"
            }
        },
        "lru-cache": {
            "version": "2.7.3",
            "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-2.7.3.tgz",
            "integrity": "sha1-bUUk6LlV+V1PW1iFHOId1y+06VI="
        },
        "lru-queue": {
            "version": "0.1.0",
            "resolved": "https://registry.npmjs.org/lru-queue/-/lru-queue-0.1.0.tgz",
            "integrity": "sha1-Jzi9nw089PhEkMVzbEhpmsYyzaM=",
            "requires": {
                "es5-ext": "0.10.46"
            }
        },
        "make-iterator": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/make-iterator/-/make-iterator-1.0.1.tgz",
            "integrity": "sha512-pxiuXh0iVEq7VM7KMIhs5gxsfxCux2URptUQaXo4iZZJxBAzTPOLE2BumO5dbfVYq/hBJFBR/a1mFDmOx5AGmw==",
            "requires": {
                "kind-of": "6.0.2"
            }
        },
        "map-cache": {
            "version": "0.2.2",
            "resolved": "https://registry.npmjs.org/map-cache/-/map-cache-0.2.2.tgz",
            "integrity": "sha1-wyq9C9ZSXZsFFkW7TyasXcmKDb8="
        },
        "map-obj": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/map-obj/-/map-obj-1.0.1.tgz",
            "integrity": "sha1-2TPOuSBdgr3PSIb2dCvcK03qFG0="
        },
        "map-stream": {
            "version": "0.0.7",
            "resolved": "https://registry.npmjs.org/map-stream/-/map-stream-0.0.7.tgz",
            "integrity": "sha1-ih8HiW2CsQkmvTdEokIACfiJdKg="
        },
        "map-visit": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/map-visit/-/map-visit-1.0.0.tgz",
            "integrity": "sha1-7Nyo8TFE5mDxtb1B8S80edmN+48=",
            "requires": {
                "object-visit": "1.0.1"
            }
        },
        "matchdep": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/matchdep/-/matchdep-1.0.1.tgz",
            "integrity": "sha1-pXozgESR+64girqPaDgEN6vC3KU=",
            "requires": {
                "findup-sync": "0.3.0",
                "micromatch": "2.3.11",
                "resolve": "1.1.7",
                "stack-trace": "0.0.9"
            },
            "dependencies": {
                "arr-diff": {
                    "version": "2.0.0",
                    "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-2.0.0.tgz",
                    "integrity": "sha1-jzuCf5Vai9ZpaX5KQlasPOrjVs8=",
                    "requires": {
                        "arr-flatten": "1.1.0"
                    }
                },
                "array-unique": {
                    "version": "0.2.1",
                    "resolved": "https://registry.npmjs.org/array-unique/-/array-unique-0.2.1.tgz",
                    "integrity": "sha1-odl8yvy8JiXMcPrc6zalDFiwGlM="
                },
                "braces": {
                    "version": "1.8.5",
                    "resolved": "https://registry.npmjs.org/braces/-/braces-1.8.5.tgz",
                    "integrity": "sha1-uneWLhLf+WnWt2cR6RS3N4V79qc=",
                    "requires": {
                        "expand-range": "1.8.2",
                        "preserve": "0.2.0",
                        "repeat-element": "1.1.3"
                    }
                },
                "expand-brackets": {
                    "version": "0.1.5",
                    "resolved": "https://registry.npmjs.org/expand-brackets/-/expand-brackets-0.1.5.tgz",
                    "integrity": "sha1-3wcoTjQqgHzXM6xa9yQR5YHRF3s=",
                    "requires": {
                        "is-posix-bracket": "0.1.1"
                    }
                },
                "extglob": {
                    "version": "0.3.2",
                    "resolved": "https://registry.npmjs.org/extglob/-/extglob-0.3.2.tgz",
                    "integrity": "sha1-Lhj/PS9JqydlzskCPwEdqo2DSaE=",
                    "requires": {
                        "is-extglob": "1.0.0"
                    }
                },
                "findup-sync": {
                    "version": "0.3.0",
                    "resolved": "https://registry.npmjs.org/findup-sync/-/findup-sync-0.3.0.tgz",
                    "integrity": "sha1-N5MKpdgWt3fANEXhlmzGeQpMCxY=",
                    "requires": {
                        "glob": "5.0.15"
                    }
                },
                "glob": {
                    "version": "5.0.15",
                    "resolved": "https://registry.npmjs.org/glob/-/glob-5.0.15.tgz",
                    "integrity": "sha1-G8k2ueAvSmA/zCIuz3Yz0wuLk7E=",
                    "requires": {
                        "inflight": "1.0.6",
                        "inherits": "2.0.3",
                        "minimatch": "3.0.4",
                        "once": "1.3.3",
                        "path-is-absolute": "1.0.1"
                    }
                },
                "is-extglob": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-1.0.0.tgz",
                    "integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA="
                },
                "is-glob": {
                    "version": "2.0.1",
                    "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-2.0.1.tgz",
                    "integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
                    "requires": {
                        "is-extglob": "1.0.0"
                    }
                },
                "kind-of": {
                    "version": "3.2.2",
                    "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
                    "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
                    "requires": {
                        "is-buffer": "1.1.6"
                    }
                },
                "micromatch": {
                    "version": "2.3.11",
                    "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-2.3.11.tgz",
                    "integrity": "sha1-hmd8l9FyCzY0MdBNDRUpO9OMFWU=",
                    "requires": {
                        "arr-diff": "2.0.0",
                        "array-unique": "0.2.1",
                        "braces": "1.8.5",
                        "expand-brackets": "0.1.5",
                        "extglob": "0.3.2",
                        "filename-regex": "2.0.1",
                        "is-extglob": "1.0.0",
                        "is-glob": "2.0.1",
                        "kind-of": "3.2.2",
                        "normalize-path": "2.1.1",
                        "object.omit": "2.0.1",
                        "parse-glob": "3.0.4",
                        "regex-cache": "0.4.4"
                    }
                },
                "resolve": {
                    "version": "1.1.7",
                    "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.1.7.tgz",
                    "integrity": "sha1-IDEU2CrSxe2ejgQRs5ModeiJ6Xs="
                }
            }
        },
        "math-random": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/math-random/-/math-random-1.0.1.tgz",
            "integrity": "sha1-izqsWIuKZuSXXjzepn97sylgH6w="
        },
        "memoizee": {
            "version": "0.4.14",
            "resolved": "https://registry.npmjs.org/memoizee/-/memoizee-0.4.14.tgz",
            "integrity": "sha512-/SWFvWegAIYAO4NQMpcX+gcra0yEZu4OntmUdrBaWrJncxOqAziGFlHxc7yjKVK2uu3lpPW27P27wkR82wA8mg==",
            "requires": {
                "d": "1.0.0",
                "es5-ext": "0.10.46",
                "es6-weak-map": "2.0.2",
                "event-emitter": "0.3.5",
                "is-promise": "2.1.0",
                "lru-queue": "0.1.0",
                "next-tick": "1.0.0",
                "timers-ext": "0.1.5"
            }
        },
        "meow": {
            "version": "3.7.0",
            "resolved": "https://registry.npmjs.org/meow/-/meow-3.7.0.tgz",
            "integrity": "sha1-cstmi0JSKCkKu/qFaJJYcwioAfs=",
            "requires": {
                "camelcase-keys": "2.1.0",
                "decamelize": "1.2.0",
                "loud-rejection": "1.6.0",
                "map-obj": "1.0.1",
                "minimist": "1.2.0",
                "normalize-package-data": "2.4.0",
                "object-assign": "4.1.1",
                "read-pkg-up": "1.0.1",
                "redent": "1.0.0",
                "trim-newlines": "1.0.0"
            },
            "dependencies": {
                "minimist": {
                    "version": "1.2.0",
                    "resolved": "http://registry.npmjs.org/minimist/-/minimist-1.2.0.tgz",
                    "integrity": "sha1-o1AIsg9BOD7sH7kU9M1d95omQoQ="
                },
                "object-assign": {
                    "version": "4.1.1",
                    "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
                    "integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
                }
            }
        },
        "merge-stream": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/merge-stream/-/merge-stream-1.0.1.tgz",
            "integrity": "sha1-QEEgLVCKNCugAXQAjfDCUbjBNeE=",
            "requires": {
                "readable-stream": "2.3.6"
            },
            "dependencies": {
                "isarray": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
                    "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
                },
                "readable-stream": {
                    "version": "2.3.6",
                    "resolved": "http://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz",
                    "integrity": "sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==",
                    "requires": {
                        "core-util-is": "1.0.2",
                        "inherits": "2.0.3",
                        "isarray": "1.0.0",
                        "process-nextick-args": "2.0.0",
                        "safe-buffer": "5.1.2",
                        "string_decoder": "1.1.1",
                        "util-deprecate": "1.0.2"
                    }
                },
                "string_decoder": {
                    "version": "1.1.1",
                    "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
                    "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
                    "requires": {
                        "safe-buffer": "5.1.2"
                    }
                }
            }
        },
        "micromatch": {
            "version": "3.1.10",
            "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-3.1.10.tgz",
            "integrity": "sha512-MWikgl9n9M3w+bpsY3He8L+w9eF9338xRl8IAO5viDizwSzziFEyUzo2xrrloB64ADbTf8uA8vRqqttDTOmccg==",
            "requires": {
                "arr-diff": "4.0.0",
                "array-unique": "0.3.2",
                "braces": "2.3.2",
                "define-property": "2.0.2",
                "extend-shallow": "3.0.2",
                "extglob": "2.0.4",
                "fragment-cache": "0.2.1",
                "kind-of": "6.0.2",
                "nanomatch": "1.2.13",
                "object.pick": "1.3.0",
                "regex-not": "1.0.2",
                "snapdragon": "0.8.2",
                "to-regex": "3.0.2"
            }
        },
        "mime": {
            "version": "1.6.0",
            "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
            "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg=="
        },
        "mime-db": {
            "version": "1.36.0",
            "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.36.0.tgz",
            "integrity": "sha512-L+xvyD9MkoYMXb1jAmzI/lWYAxAMCPvIBSWur0PZ5nOf5euahRLVqH//FKW9mWp2lkqUgYiXPgkzfMUFi4zVDw=="
        },
        "mime-types": {
            "version": "2.1.20",
            "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.20.tgz",
            "integrity": "sha512-HrkrPaP9vGuWbLK1B1FfgAkbqNjIuy4eHlIYnFi7kamZyLLrGlo2mpcx0bBmNpKqBtYtAfGbodDddIgddSJC2A==",
            "requires": {
                "mime-db": "1.36.0"
            }
        },
        "mimic-fn": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-1.2.0.tgz",
            "integrity": "sha512-jf84uxzwiuiIVKiOLpfYk7N46TSy8ubTonmneY9vrpHNAnp0QBt2BxWV9dO3/j+BoVAb+a5G6YDPW3M5HOdMWQ=="
        },
        "minimatch": {
            "version": "3.0.4",
            "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz",
            "integrity": "sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==",
            "requires": {
                "brace-expansion": "1.1.11"
            }
        },
        "minimist": {
            "version": "0.0.8",
            "resolved": "http://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz",
            "integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0="
        },
        "mixin-deep": {
            "version": "1.3.1",
            "resolved": "https://registry.npmjs.org/mixin-deep/-/mixin-deep-1.3.1.tgz",
            "integrity": "sha512-8ZItLHeEgaqEvd5lYBXfm4EZSFCX29Jb9K+lAHhDKzReKBQKj3R+7NOF6tjqYi9t4oI8VUfaWITJQm86wnXGNQ==",
            "requires": {
                "for-in": "1.0.2",
                "is-extendable": "1.0.1"
            },
            "dependencies": {
                "is-extendable": {
                    "version": "1.0.1",
                    "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-1.0.1.tgz",
                    "integrity": "sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==",
                    "requires": {
                        "is-plain-object": "2.0.4"
                    }
                }
            }
        },
        "mkdirp": {
            "version": "0.5.1",
            "resolved": "http://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz",
            "integrity": "sha1-MAV0OOrGz3+MR2fzhkjWaX11yQM=",
            "requires": {
                "minimist": "0.0.8"
            }
        },
        "ms": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
            "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
        },
        "multimatch": {
            "version": "2.1.0",
            "resolved": "https://registry.npmjs.org/multimatch/-/multimatch-2.1.0.tgz",
            "integrity": "sha1-nHkGoi+0wCkZ4vX3UWG0zb1LKis=",
            "requires": {
                "array-differ": "1.0.0",
                "array-union": "1.0.2",
                "arrify": "1.0.1",
                "minimatch": "3.0.4"
            }
        },
        "multipipe": {
            "version": "0.1.2",
            "resolved": "https://registry.npmjs.org/multipipe/-/multipipe-0.1.2.tgz",
            "integrity": "sha1-Ko8t33Du1WTf8tV/HhoTfZ8FB4s=",
            "requires": {
                "duplexer2": "0.0.2"
            }
        },
        "mute-stdout": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/mute-stdout/-/mute-stdout-1.0.1.tgz",
            "integrity": "sha512-kDcwXR4PS7caBpuRYYBUz9iVixUk3anO3f5OYFiIPwK/20vCzKCHyKoulbiDY1S53zD2bxUpxN/IJ+TnXjfvxg=="
        },
        "mute-stream": {
            "version": "0.0.5",
            "resolved": "https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.5.tgz",
            "integrity": "sha1-j7+rsKmKJT0xhDMfno3rc3L6xsA="
        },
        "mz": {
            "version": "2.7.0",
            "resolved": "https://registry.npmjs.org/mz/-/mz-2.7.0.tgz",
            "integrity": "sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==",
            "requires": {
                "any-promise": "1.3.0",
                "object-assign": "4.1.1",
                "thenify-all": "1.6.0"
            },
            "dependencies": {
                "object-assign": {
                    "version": "4.1.1",
                    "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
                    "integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
                }
            }
        },
        "nan": {
            "version": "2.11.0",
            "resolved": "https://registry.npmjs.org/nan/-/nan-2.11.0.tgz",
            "integrity": "sha512-F4miItu2rGnV2ySkXOQoA8FKz/SR2Q2sWP0sbTxNxz/tuokeC8WxOhPMcwi0qIyGtVn/rrSeLbvVkznqCdwYnw=="
        },
        "nanomatch": {
            "version": "1.2.13",
            "resolved": "https://registry.npmjs.org/nanomatch/-/nanomatch-1.2.13.tgz",
            "integrity": "sha512-fpoe2T0RbHwBTBUOftAfBPaDEi06ufaUai0mE6Yn1kacc3SnTErfb/h+X94VXzI64rKFHYImXSvdwGGCmwOqCA==",
            "requires": {
                "arr-diff": "4.0.0",
                "array-unique": "0.3.2",
                "define-property": "2.0.2",
                "extend-shallow": "3.0.2",
                "fragment-cache": "0.2.1",
                "is-windows": "1.0.2",
                "kind-of": "6.0.2",
                "object.pick": "1.3.0",
                "regex-not": "1.0.2",
                "snapdragon": "0.8.2",
                "to-regex": "3.0.2"
            }
        },
        "natives": {
            "version": "1.1.5",
            "resolved": "https://registry.npmjs.org/natives/-/natives-1.1.5.tgz",
            "integrity": "sha512-1pJ+02gl2KJgCPFtpZGtuD4lGSJnIZvvFHCQTOeDRMSXjfu2GmYWuhI8NFMA4W2I5NNFRbfy/YCiVt4CgNpP8A=="
        },
        "natural-compare": {
            "version": "1.4.0",
            "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
            "integrity": "sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc="
        },
        "ndarray": {
            "version": "1.0.18",
            "resolved": "https://registry.npmjs.org/ndarray/-/ndarray-1.0.18.tgz",
            "integrity": "sha1-tg06cyJOxVXQ+qeXEeUCRI/T95M=",
            "requires": {
                "iota-array": "1.0.0",
                "is-buffer": "1.1.6"
            }
        },
        "ndarray-fill": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/ndarray-fill/-/ndarray-fill-1.0.2.tgz",
            "integrity": "sha1-owpg9xiODJWC/N1YiWrNy1IqHtY=",
            "requires": {
                "cwise": "1.0.10"
            }
        },
        "ndarray-ops": {
            "version": "1.2.2",
            "resolved": "https://registry.npmjs.org/ndarray-ops/-/ndarray-ops-1.2.2.tgz",
            "integrity": "sha1-WeiNLDKn7ryxvGkPrhQVeVV6YU4=",
            "requires": {
                "cwise-compiler": "1.1.3"
            }
        },
        "ndarray-pack": {
            "version": "1.2.1",
            "resolved": "https://registry.npmjs.org/ndarray-pack/-/ndarray-pack-1.2.1.tgz",
            "integrity": "sha1-jK6+qqJNXs9w/4YCBjeXfajuWFo=",
            "requires": {
                "cwise-compiler": "1.1.3",
                "ndarray": "1.0.18"
            }
        },
        "netmask": {
            "version": "1.0.6",
            "resolved": "https://registry.npmjs.org/netmask/-/netmask-1.0.6.tgz",
            "integrity": "sha1-ICl+idhvb2QA8lDZ9Pa0wZRfzTU="
        },
        "next-tick": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/next-tick/-/next-tick-1.0.0.tgz",
            "integrity": "sha1-yobR/ogoFpsBICCOPchCS524NCw="
        },
        "node-bitmap": {
            "version": "0.0.1",
            "resolved": "https://registry.npmjs.org/node-bitmap/-/node-bitmap-0.0.1.tgz",
            "integrity": "sha1-GA6scAPgxwdhjvMTaPYvhLKmkJE="
        },
        "node-gyp": {
            "version": "3.8.0",
            "resolved": "https://registry.npmjs.org/node-gyp/-/node-gyp-3.8.0.tgz",
            "integrity": "sha512-3g8lYefrRRzvGeSowdJKAKyks8oUpLEd/DyPV4eMhVlhJ0aNaZqIrNUIPuEWWTAoPqyFkfGrM67MC69baqn6vA==",
            "requires": {
                "fstream": "1.0.11",
                "glob": "7.1.3",
                "graceful-fs": "4.1.11",
                "mkdirp": "0.5.1",
                "nopt": "3.0.6",
                "npmlog": "4.1.2",
                "osenv": "0.1.5",
                "request": "2.88.0",
                "rimraf": "2.6.2",
                "semver": "5.3.0",
                "tar": "2.2.1",
                "which": "1.3.1"
            },
            "dependencies": {
                "glob": {
                    "version": "7.1.3",
                    "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.3.tgz",
                    "integrity": "sha512-vcfuiIxogLV4DlGBHIUOwI0IbrJ8HWPc4MU7HzviGeNho/UJDfi6B5p3sHeWIQ0KGIU0Jpxi5ZHxemQfLkkAwQ==",
                    "requires": {
                        "fs.realpath": "1.0.0",
                        "inflight": "1.0.6",
                        "inherits": "2.0.3",
                        "minimatch": "3.0.4",
                        "once": "1.3.3",
                        "path-is-absolute": "1.0.1"
                    }
                },
                "graceful-fs": {
                    "version": "4.1.11",
                    "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.11.tgz",
                    "integrity": "sha1-Dovf5NHduIVNZOBOp8AOKgJuVlg="
                },
                "semver": {
                    "version": "5.3.0",
                    "resolved": "https://registry.npmjs.org/semver/-/semver-5.3.0.tgz",
                    "integrity": "sha1-myzl094C0XxgEq0yaqa00M9U+U8="
                }
            }
        },
        "node-sass": {
            "version": "4.9.3",
            "resolved": "https://registry.npmjs.org/node-sass/-/node-sass-4.9.3.tgz",
            "integrity": "sha512-XzXyGjO+84wxyH7fV6IwBOTrEBe2f0a6SBze9QWWYR/cL74AcQUks2AsqcCZenl/Fp/JVbuEaLpgrLtocwBUww==",
            "requires": {
                "async-foreach": "0.1.3",
                "chalk": "1.1.3",
                "cross-spawn": "3.0.1",
                "gaze": "1.1.3",
                "get-stdin": "4.0.1",
                "glob": "7.1.3",
                "in-publish": "2.0.0",
                "lodash.assign": "4.2.0",
                "lodash.clonedeep": "4.5.0",
                "lodash.mergewith": "4.6.1",
                "meow": "3.7.0",
                "mkdirp": "0.5.1",
                "nan": "2.11.0",
                "node-gyp": "3.8.0",
                "npmlog": "4.1.2",
                "request": "2.87.0",
                "sass-graph": "2.2.4",
                "stdout-stream": "1.4.1",
                "true-case-path": "1.0.3"
            },
            "dependencies": {
                "ajv": {
                    "version": "5.5.2",
                    "resolved": "https://registry.npmjs.org/ajv/-/ajv-5.5.2.tgz",
                    "integrity": "sha1-c7Xuyj+rZT49P5Qis0GtQiBdyWU=",
                    "requires": {
                        "co": "4.6.0",
                        "fast-deep-equal": "1.1.0",
                        "fast-json-stable-stringify": "2.0.0",
                        "json-schema-traverse": "0.3.1"
                    }
                },
                "gaze": {
                    "version": "1.1.3",
                    "resolved": "https://registry.npmjs.org/gaze/-/gaze-1.1.3.tgz",
                    "integrity": "sha512-BRdNm8hbWzFzWHERTrejLqwHDfS4GibPoq5wjTPIoJHoBtKGPg3xAFfxmM+9ztbXelxcf2hwQcaz1PtmFeue8g==",
                    "requires": {
                        "globule": "1.2.1"
                    }
                },
                "glob": {
                    "version": "7.1.3",
                    "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.3.tgz",
                    "integrity": "sha512-vcfuiIxogLV4DlGBHIUOwI0IbrJ8HWPc4MU7HzviGeNho/UJDfi6B5p3sHeWIQ0KGIU0Jpxi5ZHxemQfLkkAwQ==",
                    "requires": {
                        "fs.realpath": "1.0.0",
                        "inflight": "1.0.6",
                        "inherits": "2.0.3",
                        "minimatch": "3.0.4",
                        "once": "1.3.3",
                        "path-is-absolute": "1.0.1"
                    }
                },
                "globule": {
                    "version": "1.2.1",
                    "resolved": "https://registry.npmjs.org/globule/-/globule-1.2.1.tgz",
                    "integrity": "sha512-g7QtgWF4uYSL5/dn71WxubOrS7JVGCnFPEnoeChJmBnyR9Mw8nGoEwOgJL/RC2Te0WhbsEUCejfH8SZNJ+adYQ==",
                    "requires": {
                        "glob": "7.1.3",
                        "lodash": "4.17.11",
                        "minimatch": "3.0.4"
                    }
                },
                "har-validator": {
                    "version": "5.0.3",
                    "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.0.3.tgz",
                    "integrity": "sha1-ukAsJmGU8VlW7xXg/PJCmT9qff0=",
                    "requires": {
                        "ajv": "5.5.2",
                        "har-schema": "2.0.0"
                    }
                },
                "oauth-sign": {
                    "version": "0.8.2",
                    "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.8.2.tgz",
                    "integrity": "sha1-Rqarfwrq2N6unsBWV4C31O/rnUM="
                },
                "request": {
                    "version": "2.87.0",
                    "resolved": "https://registry.npmjs.org/request/-/request-2.87.0.tgz",
                    "integrity": "sha512-fcogkm7Az5bsS6Sl0sibkbhcKsnyon/jV1kF3ajGmF0c8HrttdKTPRT9hieOaQHA5HEq6r8OyWOo/o781C1tNw==",
                    "requires": {
                        "aws-sign2": "0.7.0",
                        "aws4": "1.8.0",
                        "caseless": "0.12.0",
                        "combined-stream": "1.0.6",
                        "extend": "3.0.2",
                        "forever-agent": "0.6.1",
                        "form-data": "2.3.2",
                        "har-validator": "5.0.3",
                        "http-signature": "1.2.0",
                        "is-typedarray": "1.0.0",
                        "isstream": "0.1.2",
                        "json-stringify-safe": "5.0.1",
                        "mime-types": "2.1.20",
                        "oauth-sign": "0.8.2",
                        "performance-now": "2.1.0",
                        "qs": "6.5.2",
                        "safe-buffer": "5.1.2",
                        "tough-cookie": "2.3.4",
                        "tunnel-agent": "0.6.0",
                        "uuid": "3.3.2"
                    }
                },
                "tough-cookie": {
                    "version": "2.3.4",
                    "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.3.4.tgz",
                    "integrity": "sha512-TZ6TTfI5NtZnuyy/Kecv+CnoROnyXn2DN97LontgQpCwsX2XyLYCC0ENhYkehSOwAp8rTQKc/NUIF7BkQ5rKLA==",
                    "requires": {
                        "punycode": "1.4.1"
                    }
                }
            }
        },
        "nopt": {
            "version": "3.0.6",
            "resolved": "https://registry.npmjs.org/nopt/-/nopt-3.0.6.tgz",
            "integrity": "sha1-xkZdvwirzU2zWTF/eaxopkayj/k=",
            "requires": {
                "abbrev": "1.1.1"
            }
        },
        "normalize-package-data": {
            "version": "2.4.0",
            "resolved": "https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.4.0.tgz",
            "integrity": "sha512-9jjUFbTPfEy3R/ad/2oNbKtW9Hgovl5O1FvFWKkKblNXoN/Oou6+9+KKohPK13Yc3/TyunyWhJp6gvRNR/PPAw==",
            "requires": {
                "hosted-git-info": "2.7.1",
                "is-builtin-module": "1.0.0",
                "semver": "4.3.6",
                "validate-npm-package-license": "3.0.4"
            }
        },
        "normalize-path": {
            "version": "2.1.1",
            "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-2.1.1.tgz",
            "integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
            "requires": {
                "remove-trailing-separator": "1.1.0"
            }
        },
        "normalize-range": {
            "version": "0.1.2",
            "resolved": "https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz",
            "integrity": "sha1-LRDAa9/TEuqXd2laTShDlFa3WUI="
        },
        "npmlog": {
            "version": "4.1.2",
            "resolved": "https://registry.npmjs.org/npmlog/-/npmlog-4.1.2.tgz",
            "integrity": "sha512-2uUqazuKlTaSI/dC8AzicUck7+IrEaOnN/e0jd3Xtt1KcGpwx30v50mL7oPyr/h9bL3E4aZccVwpwP+5W9Vjkg==",
            "requires": {
                "are-we-there-yet": "1.1.5",
                "console-control-strings": "1.1.0",
                "gauge": "2.7.4",
                "set-blocking": "2.0.0"
            }
        },
        "num2fraction": {
            "version": "1.2.2",
            "resolved": "https://registry.npmjs.org/num2fraction/-/num2fraction-1.2.2.tgz",
            "integrity": "sha1-b2gragJ6Tp3fpFZM0lidHU5mnt4="
        },
        "number-is-nan": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/number-is-nan/-/number-is-nan-1.0.1.tgz",
            "integrity": "sha1-CXtgK1NCKlIsGvuHkDGDNpQaAR0="
        },
        "oauth-sign": {
            "version": "0.9.0",
            "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",
            "integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ=="
        },
        "obj-extend": {
            "version": "0.1.0",
            "resolved": "https://registry.npmjs.org/obj-extend/-/obj-extend-0.1.0.tgz",
            "integrity": "sha1-u0SKR3X7les0p4H5CLusLfI9u1s="
        },
        "object-assign": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-3.0.0.tgz",
            "integrity": "sha1-m+3VygiXlJvKR+f/QIBi1Un1h/I="
        },
        "object-copy": {
            "version": "0.1.0",
            "resolved": "https://registry.npmjs.org/object-copy/-/object-copy-0.1.0.tgz",
            "integrity": "sha1-fn2Fi3gb18mRpBupde04EnVOmYw=",
            "requires": {
                "copy-descriptor": "0.1.1",
                "define-property": "0.2.5",
                "kind-of": "3.2.2"
            },
            "dependencies": {
                "define-property": {
                    "version": "0.2.5",
                    "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
                    "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
                    "requires": {
                        "is-descriptor": "0.1.6"
                    }
                },
                "kind-of": {
                    "version": "3.2.2",
                    "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
                    "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
                    "requires": {
                        "is-buffer": "1.1.6"
                    }
                }
            }
        },
        "object-inspect": {
            "version": "0.4.0",
            "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-0.4.0.tgz",
            "integrity": "sha1-9RV8EWwUVbJDsG7pdwM5LFrYn+w="
        },
        "object-keys": {
            "version": "1.0.12",
            "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.0.12.tgz",
            "integrity": "sha512-FTMyFUm2wBcGHnH2eXmz7tC6IwlqQZ6mVZ+6dm6vZ4IQIHjs6FdNsQBuKGPuUUUY6NfJw2PshC08Tn6LzLDOag=="
        },
        "object-visit": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/object-visit/-/object-visit-1.0.1.tgz",
            "integrity": "sha1-95xEk68MU3e1n+OdOV5BBC3QRbs=",
            "requires": {
                "isobject": "3.0.1"
            }
        },
        "object.defaults": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/object.defaults/-/object.defaults-1.1.0.tgz",
            "integrity": "sha1-On+GgzS0B96gbaFtiNXNKeQ1/s8=",
            "requires": {
                "array-each": "1.0.1",
                "array-slice": "1.1.0",
                "for-own": "1.0.0",
                "isobject": "3.0.1"
            }
        },
        "object.map": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/object.map/-/object.map-1.0.1.tgz",
            "integrity": "sha1-z4Plncj8wK1fQlDh94s7gb2AHTc=",
            "requires": {
                "for-own": "1.0.0",
                "make-iterator": "1.0.1"
            }
        },
        "object.omit": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/object.omit/-/object.omit-2.0.1.tgz",
            "integrity": "sha1-Gpx0SCnznbuFjHbKNXmuKlTr0fo=",
            "requires": {
                "for-own": "0.1.5",
                "is-extendable": "0.1.1"
            },
            "dependencies": {
                "for-own": {
                    "version": "0.1.5",
                    "resolved": "https://registry.npmjs.org/for-own/-/for-own-0.1.5.tgz",
                    "integrity": "sha1-UmXGgaTylNq78XyVCbZ2OqhFEM4=",
                    "requires": {
                        "for-in": "1.0.2"
                    }
                }
            }
        },
        "object.pick": {
            "version": "1.3.0",
            "resolved": "https://registry.npmjs.org/object.pick/-/object.pick-1.3.0.tgz",
            "integrity": "sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=",
            "requires": {
                "isobject": "3.0.1"
            }
        },
        "omggif": {
            "version": "1.0.9",
            "resolved": "https://registry.npmjs.org/omggif/-/omggif-1.0.9.tgz",
            "integrity": "sha1-3LcCTazVDFK00wPwSALJHAV8dl8="
        },
        "once": {
            "version": "1.3.3",
            "resolved": "https://registry.npmjs.org/once/-/once-1.3.3.tgz",
            "integrity": "sha1-suJhVXzkwxTsgwTz+oJmPkKXyiA=",
            "requires": {
                "wrappy": "1.0.2"
            }
        },
        "onetime": {
            "version": "1.1.0",
            "resolved": "http://registry.npmjs.org/onetime/-/onetime-1.1.0.tgz",
            "integrity": "sha1-ofeDj4MUxRbwXs78vEzP4EtO14k="
        },
        "optimist": {
            "version": "0.6.1",
            "resolved": "https://registry.npmjs.org/optimist/-/optimist-0.6.1.tgz",
            "integrity": "sha1-2j6nRob6IaGaERwybpDrFaAZZoY=",
            "requires": {
                "minimist": "0.0.8",
                "wordwrap": "0.0.3"
            },
            "dependencies": {
                "wordwrap": {
                    "version": "0.0.3",
                    "resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.3.tgz",
                    "integrity": "sha1-o9XabNXAvAAI03I0u68b7WMFkQc="
                }
            }
        },
        "optionator": {
            "version": "0.8.2",
            "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.8.2.tgz",
            "integrity": "sha1-NkxeQJ0/TWMB1sC0wFu6UBgK62Q=",
            "requires": {
                "deep-is": "0.1.3",
                "fast-levenshtein": "2.0.6",
                "levn": "0.3.0",
                "prelude-ls": "1.1.2",
                "type-check": "0.3.2",
                "wordwrap": "1.0.0"
            }
        },
        "orchestrator": {
            "version": "0.3.8",
            "resolved": "https://registry.npmjs.org/orchestrator/-/orchestrator-0.3.8.tgz",
            "integrity": "sha1-FOfp4nZPcxX7rBhOUGx6pt+UrX4=",
            "requires": {
                "end-of-stream": "0.1.5",
                "sequencify": "0.0.7",
                "stream-consume": "0.1.1"
            }
        },
        "ordered-read-streams": {
            "version": "0.1.0",
            "resolved": "https://registry.npmjs.org/ordered-read-streams/-/ordered-read-streams-0.1.0.tgz",
            "integrity": "sha1-/VZamvjrRHO6abbtijQ1LLVS8SY="
        },
        "os-homedir": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz",
            "integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M="
        },
        "os-locale": {
            "version": "1.4.0",
            "resolved": "http://registry.npmjs.org/os-locale/-/os-locale-1.4.0.tgz",
            "integrity": "sha1-IPnxeuKe00XoveWDsT0gCYA8FNk=",
            "requires": {
                "lcid": "1.0.0"
            }
        },
        "os-name": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/os-name/-/os-name-1.0.3.tgz",
            "integrity": "sha1-GzefZINa98Wn9JizV8uVIVwVnt8=",
            "requires": {
                "osx-release": "1.1.0",
                "win-release": "1.1.1"
            }
        },
        "os-tmpdir": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz",
            "integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ="
        },
        "osenv": {
            "version": "0.1.5",
            "resolved": "https://registry.npmjs.org/osenv/-/osenv-0.1.5.tgz",
            "integrity": "sha512-0CWcCECdMVc2Rw3U5w9ZjqX6ga6ubk1xDVKxtBQPK7wis/0F2r9T6k4ydGYhecl7YUBxBVxhL5oisPsNxAPe2g==",
            "requires": {
                "os-homedir": "1.0.2",
                "os-tmpdir": "1.0.2"
            }
        },
        "osx-release": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/osx-release/-/osx-release-1.1.0.tgz",
            "integrity": "sha1-8heRGigTaUmvG/kwiyQeJzfTzWw=",
            "requires": {
                "minimist": "1.2.0"
            },
            "dependencies": {
                "minimist": {
                    "version": "1.2.0",
                    "resolved": "http://registry.npmjs.org/minimist/-/minimist-1.2.0.tgz",
                    "integrity": "sha1-o1AIsg9BOD7sH7kU9M1d95omQoQ="
                }
            }
        },
        "pac-proxy-agent": {
            "version": "2.0.2",
            "resolved": "https://registry.npmjs.org/pac-proxy-agent/-/pac-proxy-agent-2.0.2.tgz",
            "integrity": "sha512-cDNAN1Ehjbf5EHkNY5qnRhGPUCp6SnpyVof5fRzN800QV1Y2OkzbH9rmjZkbBRa8igof903yOnjIl6z0SlAhxA==",
            "requires": {
                "agent-base": "4.2.1",
                "debug": "3.2.5",
                "get-uri": "2.0.2",
                "http-proxy-agent": "2.1.0",
                "https-proxy-agent": "2.2.1",
                "pac-resolver": "3.0.0",
                "raw-body": "2.3.3",
                "socks-proxy-agent": "3.0.1"
            },
            "dependencies": {
                "debug": {
                    "version": "3.2.5",
                    "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.5.tgz",
                    "integrity": "sha512-D61LaDQPQkxJ5AUM2mbSJRbPkNs/TmdmOeLAi1hgDkpDfIfetSrjmWhccwtuResSwMbACjx/xXQofvM9CE/aeg==",
                    "requires": {
                        "ms": "2.1.1"
                    }
                },
                "ms": {
                    "version": "2.1.1",
                    "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.1.tgz",
                    "integrity": "sha512-tgp+dl5cGk28utYktBsrFqA7HKgrhgPsg6Z/EfhWI4gl1Hwq8B/GmY/0oXZ6nF8hDVesS/FpnYaD/kOWhYQvyg=="
                }
            }
        },
        "pac-resolver": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/pac-resolver/-/pac-resolver-3.0.0.tgz",
            "integrity": "sha512-tcc38bsjuE3XZ5+4vP96OfhOugrX+JcnpUbhfuc4LuXBLQhoTthOstZeoQJBDnQUDYzYmdImKsbz0xSl1/9qeA==",
            "requires": {
                "co": "4.6.0",
                "degenerator": "1.0.4",
                "ip": "1.1.5",
                "netmask": "1.0.6",
                "thunkify": "2.1.2"
            }
        },
        "parse-data-uri": {
            "version": "0.2.0",
            "resolved": "https://registry.npmjs.org/parse-data-uri/-/parse-data-uri-0.2.0.tgz",
            "integrity": "sha1-vwTYUd1ch7CrI45dAazklLYEtMk=",
            "requires": {
                "data-uri-to-buffer": "0.0.3"
            },
            "dependencies": {
                "data-uri-to-buffer": {
                    "version": "0.0.3",
                    "resolved": "https://registry.npmjs.org/data-uri-to-buffer/-/data-uri-to-buffer-0.0.3.tgz",
                    "integrity": "sha1-GK6XmmoMqZSwYlhTkW0mYruuCxo="
                }
            }
        },
        "parse-filepath": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/parse-filepath/-/parse-filepath-1.0.2.tgz",
            "integrity": "sha1-pjISf1Oq89FYdvWHLz/6x2PWyJE=",
            "requires": {
                "is-absolute": "1.0.0",
                "map-cache": "0.2.2",
                "path-root": "0.1.1"
            }
        },
        "parse-glob": {
            "version": "3.0.4",
            "resolved": "https://registry.npmjs.org/parse-glob/-/parse-glob-3.0.4.tgz",
            "integrity": "sha1-ssN2z7EfNVE7rdFz7wu246OIORw=",
            "requires": {
                "glob-base": "0.3.0",
                "is-dotfile": "1.0.3",
                "is-extglob": "1.0.0",
                "is-glob": "2.0.1"
            },
            "dependencies": {
                "is-extglob": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-1.0.0.tgz",
                    "integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA="
                },
                "is-glob": {
                    "version": "2.0.1",
                    "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-2.0.1.tgz",
                    "integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
                    "requires": {
                        "is-extglob": "1.0.0"
                    }
                }
            }
        },
        "parse-json": {
            "version": "2.2.0",
            "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-2.2.0.tgz",
            "integrity": "sha1-9ID0BDTvgHQfhGkJn43qGPVaTck=",
            "requires": {
                "error-ex": "1.3.2"
            }
        },
        "parse-passwd": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/parse-passwd/-/parse-passwd-1.0.0.tgz",
            "integrity": "sha1-bVuTSkVpk7I9N/QKOC1vFmao5cY="
        },
        "pascalcase": {
            "version": "0.1.1",
            "resolved": "https://registry.npmjs.org/pascalcase/-/pascalcase-0.1.1.tgz",
            "integrity": "sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ="
        },
        "path": {
            "version": "0.12.7",
            "resolved": "https://registry.npmjs.org/path/-/path-0.12.7.tgz",
            "integrity": "sha1-1NwqUGxM4hl+tIHr/NWzbAFAsQ8=",
            "requires": {
                "process": "0.11.10",
                "util": "0.10.4"
            }
        },
        "path-dirname": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/path-dirname/-/path-dirname-1.0.2.tgz",
            "integrity": "sha1-zDPSTVJeCZpTiMAzbG4yuRYGCeA="
        },
        "path-exists": {
            "version": "2.1.0",
            "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-2.1.0.tgz",
            "integrity": "sha1-D+tsZPD8UY2adU3V77YscCJ2H0s=",
            "requires": {
                "pinkie-promise": "2.0.1"
            }
        },
        "path-is-absolute": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
            "integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18="
        },
        "path-is-inside": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/path-is-inside/-/path-is-inside-1.0.2.tgz",
            "integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM="
        },
        "path-parse": {
            "version": "1.0.6",
            "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.6.tgz",
            "integrity": "sha512-GSmOT2EbHrINBf9SR7CDELwlJ8AENk3Qn7OikK4nFYAu3Ote2+JYNVvkpAEQm3/TLNEJFD/xZJjzyxg3KBWOzw=="
        },
        "path-root": {
            "version": "0.1.1",
            "resolved": "https://registry.npmjs.org/path-root/-/path-root-0.1.1.tgz",
            "integrity": "sha1-mkpoFMrBwM1zNgqV8yCDyOpHRbc=",
            "requires": {
                "path-root-regex": "0.1.2"
            }
        },
        "path-root-regex": {
            "version": "0.1.2",
            "resolved": "https://registry.npmjs.org/path-root-regex/-/path-root-regex-0.1.2.tgz",
            "integrity": "sha1-v8zcjfWxLcUsi0PsONGNcsBLqW0="
        },
        "path-type": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/path-type/-/path-type-1.1.0.tgz",
            "integrity": "sha1-WcRPfuSR2nBNpBXaWkBwuk+P5EE=",
            "requires": {
                "graceful-fs": "4.1.11",
                "pify": "2.3.0",
                "pinkie-promise": "2.0.1"
            },
            "dependencies": {
                "graceful-fs": {
                    "version": "4.1.11",
                    "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.11.tgz",
                    "integrity": "sha1-Dovf5NHduIVNZOBOp8AOKgJuVlg="
                }
            }
        },
        "pause-stream": {
            "version": "0.0.11",
            "resolved": "http://registry.npmjs.org/pause-stream/-/pause-stream-0.0.11.tgz",
            "integrity": "sha1-/lo0sMvOErWqaitAPuLnO2AvFEU=",
            "requires": {
                "through": "2.3.8"
            }
        },
        "performance-now": {
            "version": "2.1.0",
            "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
            "integrity": "sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns="
        },
        "pify": {
            "version": "2.3.0",
            "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
            "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw="
        },
        "pinkie": {
            "version": "2.0.4",
            "resolved": "https://registry.npmjs.org/pinkie/-/pinkie-2.0.4.tgz",
            "integrity": "sha1-clVrgM+g1IqXToDnckjoDtT3+HA="
        },
        "pinkie-promise": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/pinkie-promise/-/pinkie-promise-2.0.1.tgz",
            "integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
            "requires": {
                "pinkie": "2.0.4"
            }
        },
        "pixelsmith": {
            "version": "2.2.1",
            "resolved": "https://registry.npmjs.org/pixelsmith/-/pixelsmith-2.2.1.tgz",
            "integrity": "sha1-MT95MAKcZdCyj+HOKcBrjiy7OAc=",
            "requires": {
                "async": "0.9.2",
                "concat-stream": "1.5.2",
                "get-pixels": "3.3.2",
                "mime-types": "2.1.20",
                "ndarray": "1.0.18",
                "ndarray-fill": "1.0.2",
                "obj-extend": "0.1.0",
                "save-pixels": "2.3.4",
                "vinyl-file": "1.3.0"
            },
            "dependencies": {
                "async": {
                    "version": "0.9.2",
                    "resolved": "https://registry.npmjs.org/async/-/async-0.9.2.tgz",
                    "integrity": "sha1-rqdNXmHB+JlhO/ZL2mbUx48v0X0="
                },
                "concat-stream": {
                    "version": "1.5.2",
                    "resolved": "https://registry.npmjs.org/concat-stream/-/concat-stream-1.5.2.tgz",
                    "integrity": "sha1-cIl4Yk2FavQaWnQd790mHadSwmY=",
                    "requires": {
                        "inherits": "2.0.3",
                        "readable-stream": "2.0.6",
                        "typedarray": "0.0.6"
                    }
                },
                "graceful-fs": {
                    "version": "4.1.11",
                    "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.11.tgz",
                    "integrity": "sha1-Dovf5NHduIVNZOBOp8AOKgJuVlg="
                },
                "isarray": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
                    "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
                },
                "process-nextick-args": {
                    "version": "1.0.7",
                    "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-1.0.7.tgz",
                    "integrity": "sha1-FQ4gt1ZZCtP5EJPyWk8q2L/zC6M="
                },
                "readable-stream": {
                    "version": "2.0.6",
                    "resolved": "http://registry.npmjs.org/readable-stream/-/readable-stream-2.0.6.tgz",
                    "integrity": "sha1-j5A0HmilPMySh4jaz80Rs265t44=",
                    "requires": {
                        "core-util-is": "1.0.2",
                        "inherits": "2.0.3",
                        "isarray": "1.0.0",
                        "process-nextick-args": "1.0.7",
                        "string_decoder": "0.10.31",
                        "util-deprecate": "1.0.2"
                    }
                },
                "strip-bom": {
                    "version": "2.0.0",
                    "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz",
                    "integrity": "sha1-YhmoVhZSBJHzV4i9vxRHqZx+aw4=",
                    "requires": {
                        "is-utf8": "0.2.1"
                    }
                },
                "strip-bom-stream": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/strip-bom-stream/-/strip-bom-stream-1.0.0.tgz",
                    "integrity": "sha1-5xRDmFd9Uaa+0PoZlPoF9D/ZiO4=",
                    "requires": {
                        "first-chunk-stream": "1.0.0",
                        "strip-bom": "2.0.0"
                    }
                },
                "vinyl": {
                    "version": "1.2.0",
                    "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-1.2.0.tgz",
                    "integrity": "sha1-XIgDbPVl5d8FVYv8kR+GVt8hiIQ=",
                    "requires": {
                        "clone": "1.0.4",
                        "clone-stats": "0.0.1",
                        "replace-ext": "0.0.1"
                    }
                },
                "vinyl-file": {
                    "version": "1.3.0",
                    "resolved": "https://registry.npmjs.org/vinyl-file/-/vinyl-file-1.3.0.tgz",
                    "integrity": "sha1-qgVjTTqGe6kUR77bs0r8sm9E9uc=",
                    "requires": {
                        "graceful-fs": "4.1.11",
                        "strip-bom": "2.0.0",
                        "strip-bom-stream": "1.0.0",
                        "vinyl": "1.2.0"
                    }
                }
            }
        },
        "plugin-error": {
            "version": "0.1.2",
            "resolved": "https://registry.npmjs.org/plugin-error/-/plugin-error-0.1.2.tgz",
            "integrity": "sha1-O5uzM1zPAPQl4HQ34ZJ2ln2kes4=",
            "requires": {
                "ansi-cyan": "0.1.1",
                "ansi-red": "0.1.1",
                "arr-diff": "1.1.0",
                "arr-union": "2.1.0",
                "extend-shallow": "1.1.4"
            },
            "dependencies": {
                "arr-diff": {
                    "version": "1.1.0",
                    "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-1.1.0.tgz",
                    "integrity": "sha1-aHwydYFjWI/vfeezb6vklesaOZo=",
                    "requires": {
                        "arr-flatten": "1.1.0",
                        "array-slice": "0.2.3"
                    }
                },
                "arr-union": {
                    "version": "2.1.0",
                    "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-2.1.0.tgz",
                    "integrity": "sha1-IPnqtexw9cfSFbEHexw5Fh0pLH0="
                },
                "array-slice": {
                    "version": "0.2.3",
                    "resolved": "https://registry.npmjs.org/array-slice/-/array-slice-0.2.3.tgz",
                    "integrity": "sha1-3Tz7gO15c6dRF82sabC5nshhhvU="
                },
                "extend-shallow": {
                    "version": "1.1.4",
                    "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-1.1.4.tgz",
                    "integrity": "sha1-Gda/lN/AnXa6cR85uHLSH/TdkHE=",
                    "requires": {
                        "kind-of": "1.1.0"
                    }
                },
                "kind-of": {
                    "version": "1.1.0",
                    "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-1.1.0.tgz",
                    "integrity": "sha1-FAo9LUGjbS78+pN3tiwk+ElaXEQ="
                }
            }
        },
        "plur": {
            "version": "2.1.2",
            "resolved": "https://registry.npmjs.org/plur/-/plur-2.1.2.tgz",
            "integrity": "sha1-dIJFLBoPUI4+NE6uwxLJHCncZVo=",
            "dev": true,
            "requires": {
                "irregular-plurals": "1.4.0"
            }
        },
        "pluralize": {
            "version": "1.2.1",
            "resolved": "https://registry.npmjs.org/pluralize/-/pluralize-1.2.1.tgz",
            "integrity": "sha1-0aIUg/0iu0HlihL6NCGCMUCJfEU="
        },
        "pngjs": {
            "version": "3.3.3",
            "resolved": "https://registry.npmjs.org/pngjs/-/pngjs-3.3.3.tgz",
            "integrity": "sha512-1n3Z4p3IOxArEs1VRXnZ/RXdfEniAUS9jb68g58FIXMNkPJeZd+Qh4Uq7/e0LVxAQGos1eIUrqrt4FpjdnEd+Q=="
        },
        "pngjs-nozlib": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/pngjs-nozlib/-/pngjs-nozlib-1.0.0.tgz",
            "integrity": "sha1-nmTWAs/pzOTZ1Zl9BodCmnPwt9c="
        },
        "posix-character-classes": {
            "version": "0.1.1",
            "resolved": "https://registry.npmjs.org/posix-character-classes/-/posix-character-classes-0.1.1.tgz",
            "integrity": "sha1-AerA/jta9xoqbAL+q7jB/vfgDqs="
        },
        "postcss": {
            "version": "5.2.18",
            "resolved": "https://registry.npmjs.org/postcss/-/postcss-5.2.18.tgz",
            "integrity": "sha512-zrUjRRe1bpXKsX1qAJNJjqZViErVuyEkMTRrwu4ud4sbTtIBRmtaYDrHmcGgmrbsW3MHfmtIf+vJumgQn+PrXg==",
            "requires": {
                "chalk": "1.1.3",
                "js-base64": "2.4.9",
                "source-map": "0.5.7",
                "supports-color": "3.2.3"
            },
            "dependencies": {
                "supports-color": {
                    "version": "3.2.3",
                    "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-3.2.3.tgz",
                    "integrity": "sha1-ZawFBLOVQXHYpklGsq48u4pfVPY=",
                    "requires": {
                        "has-flag": "1.0.0"
                    }
                }
            }
        },
        "postcss-value-parser": {
            "version": "3.3.0",
            "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.0.tgz",
            "integrity": "sha1-h/OPnxj3dKSrTIojL1xc6IcqnRU="
        },
        "prelude-ls": {
            "version": "1.1.2",
            "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.1.2.tgz",
            "integrity": "sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ="
        },
        "preserve": {
            "version": "0.2.0",
            "resolved": "https://registry.npmjs.org/preserve/-/preserve-0.2.0.tgz",
            "integrity": "sha1-gV7R9uvGWSb4ZbMQwHE7yzMVzks="
        },
        "pretty-hrtime": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/pretty-hrtime/-/pretty-hrtime-1.0.3.tgz",
            "integrity": "sha1-t+PqQkNaTJsnWdmeDyAesZWALuE="
        },
        "private": {
            "version": "0.1.8",
            "resolved": "https://registry.npmjs.org/private/-/private-0.1.8.tgz",
            "integrity": "sha512-VvivMrbvd2nKkiG38qjULzlc+4Vx4wm/whI9pQD35YrARNnhxeiRktSOhSukRLFNlzg6Br/cJPet5J/u19r/mg=="
        },
        "process": {
            "version": "0.11.10",
            "resolved": "https://registry.npmjs.org/process/-/process-0.11.10.tgz",
            "integrity": "sha1-czIwDoQBYb2j5podHZGn1LwW8YI="
        },
        "process-nextick-args": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.0.tgz",
            "integrity": "sha512-MtEC1TqN0EU5nephaJ4rAtThHtC86dNN9qCuEhtshvpVBkAW5ZO7BASN9REnF9eoXGcRub+pFuKEpOHE+HbEMw=="
        },
        "progress": {
            "version": "1.1.8",
            "resolved": "https://registry.npmjs.org/progress/-/progress-1.1.8.tgz",
            "integrity": "sha1-4mDHj2Fhzdmw5WzD4Khd4Xx6V74="
        },
        "proxy-agent": {
            "version": "2.3.1",
            "resolved": "http://registry.npmjs.org/proxy-agent/-/proxy-agent-2.3.1.tgz",
            "integrity": "sha512-CNKuhC1jVtm8KJYFTS2ZRO71VCBx3QSA92So/e6NrY6GoJonkx3Irnk4047EsCcswczwqAekRj3s8qLRGahSKg==",
            "requires": {
                "agent-base": "4.2.1",
                "debug": "3.2.5",
                "http-proxy-agent": "2.1.0",
                "https-proxy-agent": "2.2.1",
                "lru-cache": "4.1.3",
                "pac-proxy-agent": "2.0.2",
                "proxy-from-env": "1.0.0",
                "socks-proxy-agent": "3.0.1"
            },
            "dependencies": {
                "debug": {
                    "version": "3.2.5",
                    "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.5.tgz",
                    "integrity": "sha512-D61LaDQPQkxJ5AUM2mbSJRbPkNs/TmdmOeLAi1hgDkpDfIfetSrjmWhccwtuResSwMbACjx/xXQofvM9CE/aeg==",
                    "requires": {
                        "ms": "2.1.1"
                    }
                },
                "lru-cache": {
                    "version": "4.1.3",
                    "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.3.tgz",
                    "integrity": "sha512-fFEhvcgzuIoJVUF8fYr5KR0YqxD238zgObTps31YdADwPPAp82a4M8TrckkWyx7ekNlf9aBcVn81cFwwXngrJA==",
                    "requires": {
                        "pseudomap": "1.0.2",
                        "yallist": "2.1.2"
                    }
                },
                "ms": {
                    "version": "2.1.1",
                    "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.1.tgz",
                    "integrity": "sha512-tgp+dl5cGk28utYktBsrFqA7HKgrhgPsg6Z/EfhWI4gl1Hwq8B/GmY/0oXZ6nF8hDVesS/FpnYaD/kOWhYQvyg=="
                }
            }
        },
        "proxy-from-env": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.0.0.tgz",
            "integrity": "sha1-M8UDmPcOp+uW0h97gXYwpVeRx+4="
        },
        "pseudomap": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/pseudomap/-/pseudomap-1.0.2.tgz",
            "integrity": "sha1-8FKijacOYYkX7wqKw0wa5aaChrM="
        },
        "psl": {
            "version": "1.1.29",
            "resolved": "https://registry.npmjs.org/psl/-/psl-1.1.29.tgz",
            "integrity": "sha512-AeUmQ0oLN02flVHXWh9sSJF7mcdFq0ppid/JkErufc3hGIV/AMa8Fo9VgDo/cT2jFdOWoFvHp90qqBH54W+gjQ=="
        },
        "pump": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",
            "integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",
            "requires": {
                "end-of-stream": "1.4.1",
                "once": "1.3.3"
            },
            "dependencies": {
                "end-of-stream": {
                    "version": "1.4.1",
                    "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.1.tgz",
                    "integrity": "sha512-1MkrZNvWTKCaigbn+W15elq2BB/L22nqrSY5DKlo3X6+vclJm8Bb5djXJBmEX6fS3+zCh/F4VBK5Z2KxJt4s2Q==",
                    "requires": {
                        "once": "1.4.0"
                    },
                    "dependencies": {
                        "once": {
                            "version": "1.4.0",
                            "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
                            "integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",
                            "requires": {
                                "wrappy": "1.0.2"
                            }
                        }
                    }
                }
            }
        },
        "punycode": {
            "version": "1.4.1",
            "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.4.1.tgz",
            "integrity": "sha1-wNWmOycYgArY4esPpSachN1BhF4="
        },
        "qs": {
            "version": "6.5.2",
            "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.2.tgz",
            "integrity": "sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA=="
        },
        "quote-stream": {
            "version": "0.0.0",
            "resolved": "https://registry.npmjs.org/quote-stream/-/quote-stream-0.0.0.tgz",
            "integrity": "sha1-zeKelMQJsW4Z3HCYuJtmWPlyHTs=",
            "requires": {
                "minimist": "0.0.8",
                "through2": "0.4.2"
            },
            "dependencies": {
                "object-keys": {
                    "version": "0.4.0",
                    "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-0.4.0.tgz",
                    "integrity": "sha1-KKaq50KN0sOpLz2V8hM13SBOAzY="
                },
                "readable-stream": {
                    "version": "1.0.34",
                    "resolved": "http://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz",
                    "integrity": "sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=",
                    "requires": {
                        "core-util-is": "1.0.2",
                        "inherits": "2.0.3",
                        "isarray": "0.0.1",
                        "string_decoder": "0.10.31"
                    }
                },
                "through2": {
                    "version": "0.4.2",
                    "resolved": "https://registry.npmjs.org/through2/-/through2-0.4.2.tgz",
                    "integrity": "sha1-2/WGYDEVHsg1K7bE22SiKSqEC5s=",
                    "requires": {
                        "readable-stream": "1.0.34",
                        "xtend": "2.1.2"
                    }
                },
                "xtend": {
                    "version": "2.1.2",
                    "resolved": "https://registry.npmjs.org/xtend/-/xtend-2.1.2.tgz",
                    "integrity": "sha1-bv7MKk2tjmlixJAbM3znuoe10os=",
                    "requires": {
                        "object-keys": "0.4.0"
                    }
                }
            }
        },
        "randomatic": {
            "version": "3.1.0",
            "resolved": "https://registry.npmjs.org/randomatic/-/randomatic-3.1.0.tgz",
            "integrity": "sha512-KnGPVE0lo2WoXxIZ7cPR8YBpiol4gsSuOwDSg410oHh80ZMp5EiypNqL2K4Z77vJn6lB5rap7IkAmcUlalcnBQ==",
            "requires": {
                "is-number": "4.0.0",
                "kind-of": "6.0.2",
                "math-random": "1.0.1"
            },
            "dependencies": {
                "is-number": {
                    "version": "4.0.0",
                    "resolved": "https://registry.npmjs.org/is-number/-/is-number-4.0.0.tgz",
                    "integrity": "sha512-rSklcAIlf1OmFdyAqbnWTLVelsQ58uvZ66S/ZyawjWqIviTWCjg2PzVGw8WUA+nNuPTqb4wgA+NszrJ+08LlgQ=="
                }
            }
        },
        "raw-body": {
            "version": "2.3.3",
            "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.3.3.tgz",
            "integrity": "sha512-9esiElv1BrZoI3rCDuOuKCBRbuApGGaDPQfjSflGxdy4oyzqghxu6klEkkVIvBje+FF0BX9coEv8KqW6X/7njw==",
            "requires": {
                "bytes": "3.0.0",
                "http-errors": "1.6.3",
                "iconv-lite": "0.4.23",
                "unpipe": "1.0.0"
            },
            "dependencies": {
                "iconv-lite": {
                    "version": "0.4.23",
                    "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.23.tgz",
                    "integrity": "sha512-neyTUVFtahjf0mB3dZT77u+8O0QB89jFdnBkd5P1JgYPbPaia3gXXOVL2fq8VyU2gMMD7SaN7QukTB/pmXYvDA==",
                    "requires": {
                        "safer-buffer": "2.1.2"
                    }
                }
            }
        },
        "read-pkg": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-1.1.0.tgz",
            "integrity": "sha1-9f+qXs0pyzHAR0vKfXVra7KePyg=",
            "requires": {
                "load-json-file": "1.1.0",
                "normalize-package-data": "2.4.0",
                "path-type": "1.1.0"
            }
        },
        "read-pkg-up": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-1.0.1.tgz",
            "integrity": "sha1-nWPBMnbAZZGNV/ACpX9AobZD+wI=",
            "requires": {
                "find-up": "1.1.2",
                "read-pkg": "1.1.0"
            }
        },
        "readable-stream": {
            "version": "1.1.14",
            "resolved": "http://registry.npmjs.org/readable-stream/-/readable-stream-1.1.14.tgz",
            "integrity": "sha1-fPTFTvZI44EwhMY23SB54WbAgdk=",
            "requires": {
                "core-util-is": "1.0.2",
                "inherits": "2.0.3",
                "isarray": "0.0.1",
                "string_decoder": "0.10.31"
            }
        },
        "readdirp": {
            "version": "2.2.1",
            "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-2.2.1.tgz",
            "integrity": "sha512-1JU/8q+VgFZyxwrJ+SVIOsh+KywWGpds3NTqikiKpDMZWScmAYyKIgqkO+ARvNWJfXeXR1zxz7aHF4u4CyH6vQ==",
            "requires": {
                "graceful-fs": "4.1.11",
                "micromatch": "3.1.10",
                "readable-stream": "2.3.6"
            },
            "dependencies": {
                "graceful-fs": {
                    "version": "4.1.11",
                    "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.11.tgz",
                    "integrity": "sha1-Dovf5NHduIVNZOBOp8AOKgJuVlg="
                },
                "isarray": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
                    "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
                },
                "readable-stream": {
                    "version": "2.3.6",
                    "resolved": "http://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz",
                    "integrity": "sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==",
                    "requires": {
                        "core-util-is": "1.0.2",
                        "inherits": "2.0.3",
                        "isarray": "1.0.0",
                        "process-nextick-args": "2.0.0",
                        "safe-buffer": "5.1.2",
                        "string_decoder": "1.1.1",
                        "util-deprecate": "1.0.2"
                    }
                },
                "string_decoder": {
                    "version": "1.1.1",
                    "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
                    "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
                    "requires": {
                        "safe-buffer": "5.1.2"
                    }
                }
            }
        },
        "readline2": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/readline2/-/readline2-1.0.1.tgz",
            "integrity": "sha1-QQWWCP/BVHV7cV2ZidGZ/783LjU=",
            "requires": {
                "code-point-at": "1.1.0",
                "is-fullwidth-code-point": "1.0.0",
                "mute-stream": "0.0.5"
            }
        },
        "rechoir": {
            "version": "0.6.2",
            "resolved": "https://registry.npmjs.org/rechoir/-/rechoir-0.6.2.tgz",
            "integrity": "sha1-hSBLVNuoLVdC4oyWdW70OvUOM4Q=",
            "requires": {
                "resolve": "1.8.1"
            }
        },
        "redent": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/redent/-/redent-1.0.0.tgz",
            "integrity": "sha1-z5Fqsf1fHxbfsggi3W7H9zDCr94=",
            "requires": {
                "indent-string": "2.1.0",
                "strip-indent": "1.0.1"
            }
        },
        "regenerate": {
            "version": "1.4.0",
            "resolved": "https://registry.npmjs.org/regenerate/-/regenerate-1.4.0.tgz",
            "integrity": "sha512-1G6jJVDWrt0rK99kBjvEtziZNCICAuvIPkSiUFIQxVP06RCVpq3dmDo2oi6ABpYaDYaTRr67BEhL8r1wgEZZKg=="
        },
        "regenerator-runtime": {
            "version": "0.11.1",
            "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.11.1.tgz",
            "integrity": "sha512-MguG95oij0fC3QV3URf4V2SDYGJhJnJGqvIIgdECeODCT98wSWDAJ94SSuVpYQUoTcGUIL6L4yNB7j1DFFHSBg=="
        },
        "regenerator-transform": {
            "version": "0.10.1",
            "resolved": "https://registry.npmjs.org/regenerator-transform/-/regenerator-transform-0.10.1.tgz",
            "integrity": "sha512-PJepbvDbuK1xgIgnau7Y90cwaAmO/LCLMI2mPvaXq2heGMR3aWW5/BQvYrhJ8jgmQjXewXvBjzfqKcVOmhjZ6Q==",
            "requires": {
                "babel-runtime": "6.26.0",
                "babel-types": "6.26.0",
                "private": "0.1.8"
            }
        },
        "regex-cache": {
            "version": "0.4.4",
            "resolved": "https://registry.npmjs.org/regex-cache/-/regex-cache-0.4.4.tgz",
            "integrity": "sha512-nVIZwtCjkC9YgvWkpM55B5rBhBYRZhAaJbgcFYXXsHnbZ9UZI9nnVWYZpBlCqv9ho2eZryPnWrZGsOdPwVWXWQ==",
            "requires": {
                "is-equal-shallow": "0.1.3"
            }
        },
        "regex-not": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/regex-not/-/regex-not-1.0.2.tgz",
            "integrity": "sha512-J6SDjUgDxQj5NusnOtdFxDwN/+HWykR8GELwctJ7mdqhcyy1xEc4SRFHUXvxTp661YaVKAjfRLZ9cCqS6tn32A==",
            "requires": {
                "extend-shallow": "3.0.2",
                "safe-regex": "1.1.0"
            }
        },
        "regexpu-core": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/regexpu-core/-/regexpu-core-2.0.0.tgz",
            "integrity": "sha1-SdA4g3uNz4v6W5pCE5k45uoq4kA=",
            "requires": {
                "regenerate": "1.4.0",
                "regjsgen": "0.2.0",
                "regjsparser": "0.1.5"
            }
        },
        "regjsgen": {
            "version": "0.2.0",
            "resolved": "https://registry.npmjs.org/regjsgen/-/regjsgen-0.2.0.tgz",
            "integrity": "sha1-bAFq3qxVT3WCP+N6wFuS1aTtsfc="
        },
        "regjsparser": {
            "version": "0.1.5",
            "resolved": "https://registry.npmjs.org/regjsparser/-/regjsparser-0.1.5.tgz",
            "integrity": "sha1-fuj4Tcb6eS0/0K4ijSS9lJ6tIFw=",
            "requires": {
                "jsesc": "0.5.0"
            },
            "dependencies": {
                "jsesc": {
                    "version": "0.5.0",
                    "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-0.5.0.tgz",
                    "integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0="
                }
            }
        },
        "remove-trailing-separator": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/remove-trailing-separator/-/remove-trailing-separator-1.1.0.tgz",
            "integrity": "sha1-wkvOKig62tW8P1jg1IJJuSN52O8="
        },
        "repeat-element": {
            "version": "1.1.3",
            "resolved": "https://registry.npmjs.org/repeat-element/-/repeat-element-1.1.3.tgz",
            "integrity": "sha512-ahGq0ZnV5m5XtZLMb+vP76kcAM5nkLqk0lpqAuojSKGgQtn4eRi4ZZGm2olo2zKFH+sMsWaqOCW1dqAnOru72g=="
        },
        "repeat-string": {
            "version": "1.6.1",
            "resolved": "https://registry.npmjs.org/repeat-string/-/repeat-string-1.6.1.tgz",
            "integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc="
        },
        "repeating": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/repeating/-/repeating-2.0.1.tgz",
            "integrity": "sha1-UhTFOpJtNVJwdSf7q0FdvAjQbdo=",
            "requires": {
                "is-finite": "1.0.2"
            }
        },
        "replace-ext": {
            "version": "0.0.1",
            "resolved": "https://registry.npmjs.org/replace-ext/-/replace-ext-0.0.1.tgz",
            "integrity": "sha1-KbvZIHinOfC8zitO5B6DeVNSKSQ="
        },
        "request": {
            "version": "2.88.0",
            "resolved": "https://registry.npmjs.org/request/-/request-2.88.0.tgz",
            "integrity": "sha512-NAqBSrijGLZdM0WZNsInLJpkJokL72XYjUpnB0iwsRgxh7dB6COrHnTBNwN0E+lHDAJzu7kLAkDeY08z2/A0hg==",
            "requires": {
                "aws-sign2": "0.7.0",
                "aws4": "1.8.0",
                "caseless": "0.12.0",
                "combined-stream": "1.0.6",
                "extend": "3.0.2",
                "forever-agent": "0.6.1",
                "form-data": "2.3.2",
                "har-validator": "5.1.0",
                "http-signature": "1.2.0",
                "is-typedarray": "1.0.0",
                "isstream": "0.1.2",
                "json-stringify-safe": "5.0.1",
                "mime-types": "2.1.20",
                "oauth-sign": "0.9.0",
                "performance-now": "2.1.0",
                "qs": "6.5.2",
                "safe-buffer": "5.1.2",
                "tough-cookie": "2.4.3",
                "tunnel-agent": "0.6.0",
                "uuid": "3.3.2"
            }
        },
        "require-directory": {
            "version": "2.1.1",
            "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
            "integrity": "sha1-jGStX9MNqxyXbiNE/+f3kqam30I="
        },
        "require-main-filename": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-1.0.1.tgz",
            "integrity": "sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE="
        },
        "require-uncached": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/require-uncached/-/require-uncached-1.0.3.tgz",
            "integrity": "sha1-Tg1W1slmL9MeQwEcS5WqSZVUIdM=",
            "requires": {
                "caller-path": "0.1.0",
                "resolve-from": "1.0.1"
            }
        },
        "resolve": {
            "version": "1.8.1",
            "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.8.1.tgz",
            "integrity": "sha512-AicPrAC7Qu1JxPCZ9ZgCZlY35QgFnNqc+0LtbRNxnVw4TXvjQ72wnuL9JQcEBgXkI9JM8MsT9kaQoHcpCRJOYA==",
            "requires": {
                "path-parse": "1.0.6"
            }
        },
        "resolve-dir": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/resolve-dir/-/resolve-dir-1.0.1.tgz",
            "integrity": "sha1-eaQGRMNivoLybv/nOcm7U4IEb0M=",
            "requires": {
                "expand-tilde": "2.0.2",
                "global-modules": "1.0.0"
            }
        },
        "resolve-from": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-1.0.1.tgz",
            "integrity": "sha1-Jsv+k10a7uq7Kbw/5a6wHpPUQiY="
        },
        "resolve-url": {
            "version": "0.2.1",
            "resolved": "https://registry.npmjs.org/resolve-url/-/resolve-url-0.2.1.tgz",
            "integrity": "sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo="
        },
        "restore-cursor": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-1.0.1.tgz",
            "integrity": "sha1-NGYfRohjJ/7SmRR5FSJS35LapUE=",
            "requires": {
                "exit-hook": "1.1.1",
                "onetime": "1.1.0"
            }
        },
        "ret": {
            "version": "0.1.15",
            "resolved": "https://registry.npmjs.org/ret/-/ret-0.1.15.tgz",
            "integrity": "sha512-TTlYpa+OL+vMMNG24xSlQGEJ3B/RzEfUlLct7b5G/ytav+wPrplCpVMFuwzXbkecJrb6IYo1iFb0S9v37754mg=="
        },
        "right-align": {
            "version": "0.1.3",
            "resolved": "https://registry.npmjs.org/right-align/-/right-align-0.1.3.tgz",
            "integrity": "sha1-YTObci/mo1FWiSENJOFMlhSGE+8=",
            "requires": {
                "align-text": "0.1.4"
            }
        },
        "rimraf": {
            "version": "2.6.2",
            "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.6.2.tgz",
            "integrity": "sha512-lreewLK/BlghmxtfH36YYVg1i8IAce4TI7oao75I1g245+6BctqTVQiBP3YUJ9C6DQOXJmkYR9X9fCLtCOJc5w==",
            "requires": {
                "glob": "7.1.3"
            },
            "dependencies": {
                "glob": {
                    "version": "7.1.3",
                    "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.3.tgz",
                    "integrity": "sha512-vcfuiIxogLV4DlGBHIUOwI0IbrJ8HWPc4MU7HzviGeNho/UJDfi6B5p3sHeWIQ0KGIU0Jpxi5ZHxemQfLkkAwQ==",
                    "requires": {
                        "fs.realpath": "1.0.0",
                        "inflight": "1.0.6",
                        "inherits": "2.0.3",
                        "minimatch": "3.0.4",
                        "once": "1.3.3",
                        "path-is-absolute": "1.0.1"
                    }
                }
            }
        },
        "run-async": {
            "version": "0.1.0",
            "resolved": "https://registry.npmjs.org/run-async/-/run-async-0.1.0.tgz",
            "integrity": "sha1-yK1KXhEGYeQCp9IbUw4AnyX444k=",
            "requires": {
                "once": "1.3.3"
            }
        },
        "rx-lite": {
            "version": "3.1.2",
            "resolved": "https://registry.npmjs.org/rx-lite/-/rx-lite-3.1.2.tgz",
            "integrity": "sha1-Gc5QLKVyZl87ZHsQk5+X/RYV8QI="
        },
        "rx-lite-aggregates": {
            "version": "4.0.8",
            "resolved": "https://registry.npmjs.org/rx-lite-aggregates/-/rx-lite-aggregates-4.0.8.tgz",
            "integrity": "sha1-dTuHqJoRyVRnxKwWJsTvxOBcZ74=",
            "requires": {
                "rx-lite": "3.1.2"
            }
        },
        "safe-buffer": {
            "version": "5.1.2",
            "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
            "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
        },
        "safe-regex": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/safe-regex/-/safe-regex-1.1.0.tgz",
            "integrity": "sha1-QKNmnzsHfR6UPURinhV91IAjvy4=",
            "requires": {
                "ret": "0.1.15"
            }
        },
        "safer-buffer": {
            "version": "2.1.2",
            "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
            "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg=="
        },
        "sass-graph": {
            "version": "2.2.4",
            "resolved": "https://registry.npmjs.org/sass-graph/-/sass-graph-2.2.4.tgz",
            "integrity": "sha1-E/vWPNHK8JCLn9k0dq1DpR0eC0k=",
            "requires": {
                "glob": "7.1.3",
                "lodash": "4.17.11",
                "scss-tokenizer": "0.2.3",
                "yargs": "7.1.0"
            },
            "dependencies": {
                "camelcase": {
                    "version": "3.0.0",
                    "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-3.0.0.tgz",
                    "integrity": "sha1-MvxLn82vhF/N9+c7uXysImHwqwo="
                },
                "glob": {
                    "version": "7.1.3",
                    "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.3.tgz",
                    "integrity": "sha512-vcfuiIxogLV4DlGBHIUOwI0IbrJ8HWPc4MU7HzviGeNho/UJDfi6B5p3sHeWIQ0KGIU0Jpxi5ZHxemQfLkkAwQ==",
                    "requires": {
                        "fs.realpath": "1.0.0",
                        "inflight": "1.0.6",
                        "inherits": "2.0.3",
                        "minimatch": "3.0.4",
                        "once": "1.3.3",
                        "path-is-absolute": "1.0.1"
                    }
                },
                "yargs": {
                    "version": "7.1.0",
                    "resolved": "https://registry.npmjs.org/yargs/-/yargs-7.1.0.tgz",
                    "integrity": "sha1-a6MY6xaWFyf10oT46gA+jWFU0Mg=",
                    "requires": {
                        "camelcase": "3.0.0",
                        "cliui": "3.2.0",
                        "decamelize": "1.2.0",
                        "get-caller-file": "1.0.3",
                        "os-locale": "1.4.0",
                        "read-pkg-up": "1.0.1",
                        "require-directory": "2.1.1",
                        "require-main-filename": "1.0.1",
                        "set-blocking": "2.0.0",
                        "string-width": "1.0.2",
                        "which-module": "1.0.0",
                        "y18n": "3.2.1",
                        "yargs-parser": "5.0.0"
                    }
                }
            }
        },
        "save-pixels": {
            "version": "2.3.4",
            "resolved": "https://registry.npmjs.org/save-pixels/-/save-pixels-2.3.4.tgz",
            "integrity": "sha1-SdNJwGuNfAEn2/DaJLRKylr7Wf4=",
            "requires": {
                "contentstream": "1.0.0",
                "gif-encoder": "0.4.3",
                "jpeg-js": "0.0.4",
                "ndarray": "1.0.18",
                "ndarray-ops": "1.2.2",
                "pngjs-nozlib": "1.0.0",
                "through": "2.3.8"
            },
            "dependencies": {
                "jpeg-js": {
                    "version": "0.0.4",
                    "resolved": "https://registry.npmjs.org/jpeg-js/-/jpeg-js-0.0.4.tgz",
                    "integrity": "sha1-Bqr0fv7HrwsZJKWc1pWm0rXthw4="
                }
            }
        },
        "scss-tokenizer": {
            "version": "0.2.3",
            "resolved": "https://registry.npmjs.org/scss-tokenizer/-/scss-tokenizer-0.2.3.tgz",
            "integrity": "sha1-jrBtualyMzOCTT9VMGQRSYR85dE=",
            "requires": {
                "js-base64": "2.4.9",
                "source-map": "0.4.4"
            },
            "dependencies": {
                "source-map": {
                    "version": "0.4.4",
                    "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.4.4.tgz",
                    "integrity": "sha1-66T12pwNyZneaAMti092FzZSA2s=",
                    "requires": {
                        "amdefine": "1.0.1"
                    }
                }
            }
        },
        "semver": {
            "version": "4.3.6",
            "resolved": "https://registry.npmjs.org/semver/-/semver-4.3.6.tgz",
            "integrity": "sha1-MAvG4OhjdPe6YQaLWx7NV/xlMto="
        },
        "semver-greatest-satisfied-range": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/semver-greatest-satisfied-range/-/semver-greatest-satisfied-range-1.1.0.tgz",
            "integrity": "sha1-E+jCZYq5aRywzXEJMkAoDTb3els=",
            "requires": {
                "sver-compat": "1.5.0"
            }
        },
        "sequencify": {
            "version": "0.0.7",
            "resolved": "https://registry.npmjs.org/sequencify/-/sequencify-0.0.7.tgz",
            "integrity": "sha1-kM/xnQLgcCf9dn9erT57ldHnOAw="
        },
        "set-blocking": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz",
            "integrity": "sha1-BF+XgtARrppoA93TgrJDkrPYkPc="
        },
        "set-value": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/set-value/-/set-value-2.0.0.tgz",
            "integrity": "sha512-hw0yxk9GT/Hr5yJEYnHNKYXkIA8mVJgd9ditYZCe16ZczcaELYYcfvaXesNACk2O8O0nTiPQcQhGUQj8JLzeeg==",
            "requires": {
                "extend-shallow": "2.0.1",
                "is-extendable": "0.1.1",
                "is-plain-object": "2.0.4",
                "split-string": "3.1.0"
            },
            "dependencies": {
                "extend-shallow": {
                    "version": "2.0.1",
                    "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
                    "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
                    "requires": {
                        "is-extendable": "0.1.1"
                    }
                }
            }
        },
        "setprototypeof": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.0.tgz",
            "integrity": "sha512-BvE/TwpZX4FXExxOxZyRGQQv651MSwmWKZGqvmPcRIjDqWub67kTKuIMx43cZZrS/cBBzwBcNDWoFxt2XEFIpQ=="
        },
        "shallow-copy": {
            "version": "0.0.1",
            "resolved": "https://registry.npmjs.org/shallow-copy/-/shallow-copy-0.0.1.tgz",
            "integrity": "sha1-QV9CcC1z2BAzApLMXuhurhoRoXA="
        },
        "shelljs": {
            "version": "0.7.8",
            "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.7.8.tgz",
            "integrity": "sha1-3svPh0sNHl+3LhSxZKloMEjprLM=",
            "requires": {
                "glob": "7.1.3",
                "interpret": "1.1.0",
                "rechoir": "0.6.2"
            },
            "dependencies": {
                "glob": {
                    "version": "7.1.3",
                    "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.3.tgz",
                    "integrity": "sha512-vcfuiIxogLV4DlGBHIUOwI0IbrJ8HWPc4MU7HzviGeNho/UJDfi6B5p3sHeWIQ0KGIU0Jpxi5ZHxemQfLkkAwQ==",
                    "requires": {
                        "fs.realpath": "1.0.0",
                        "inflight": "1.0.6",
                        "inherits": "2.0.3",
                        "minimatch": "3.0.4",
                        "once": "1.3.3",
                        "path-is-absolute": "1.0.1"
                    }
                }
            }
        },
        "sigmund": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/sigmund/-/sigmund-1.0.1.tgz",
            "integrity": "sha1-P/IfGYytIXX587eBhT/ZTQ0ZtZA="
        },
        "signal-exit": {
            "version": "3.0.2",
            "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.2.tgz",
            "integrity": "sha1-tf3AjxKH6hF4Yo5BXiUTK3NkbG0="
        },
        "slash": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/slash/-/slash-1.0.0.tgz",
            "integrity": "sha1-xB8vbDn8FtHNF61LXYlhFK5HDVU="
        },
        "slice-ansi": {
            "version": "0.0.4",
            "resolved": "https://registry.npmjs.org/slice-ansi/-/slice-ansi-0.0.4.tgz",
            "integrity": "sha1-7b+JA/ZvfOL46v1s7tZeJkyDGzU="
        },
        "smart-buffer": {
            "version": "1.1.15",
            "resolved": "https://registry.npmjs.org/smart-buffer/-/smart-buffer-1.1.15.tgz",
            "integrity": "sha1-fxFLW2X6s+KjWqd1uxLw0cZJvxY="
        },
        "snapdragon": {
            "version": "0.8.2",
            "resolved": "https://registry.npmjs.org/snapdragon/-/snapdragon-0.8.2.tgz",
            "integrity": "sha512-FtyOnWN/wCHTVXOMwvSv26d+ko5vWlIDD6zoUJ7LW8vh+ZBC8QdljveRP+crNrtBwioEUWy/4dMtbBjA4ioNlg==",
            "requires": {
                "base": "0.11.2",
                "debug": "2.6.9",
                "define-property": "0.2.5",
                "extend-shallow": "2.0.1",
                "map-cache": "0.2.2",
                "source-map": "0.5.7",
                "source-map-resolve": "0.5.2",
                "use": "3.1.1"
            },
            "dependencies": {
                "define-property": {
                    "version": "0.2.5",
                    "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
                    "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
                    "requires": {
                        "is-descriptor": "0.1.6"
                    }
                },
                "extend-shallow": {
                    "version": "2.0.1",
                    "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
                    "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
                    "requires": {
                        "is-extendable": "0.1.1"
                    }
                }
            }
        },
        "snapdragon-node": {
            "version": "2.1.1",
            "resolved": "https://registry.npmjs.org/snapdragon-node/-/snapdragon-node-2.1.1.tgz",
            "integrity": "sha512-O27l4xaMYt/RSQ5TR3vpWCAB5Kb/czIcqUFOM/C4fYcLnbZUc1PkjTAMjof2pBWaSTwOUd6qUHcFGVGj7aIwnw==",
            "requires": {
                "define-property": "1.0.0",
                "isobject": "3.0.1",
                "snapdragon-util": "3.0.1"
            },
            "dependencies": {
                "define-property": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",
                    "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
                    "requires": {
                        "is-descriptor": "1.0.2"
                    }
                },
                "is-accessor-descriptor": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
                    "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
                    "requires": {
                        "kind-of": "6.0.2"
                    }
                },
                "is-data-descriptor": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
                    "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
                    "requires": {
                        "kind-of": "6.0.2"
                    }
                },
                "is-descriptor": {
                    "version": "1.0.2",
                    "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
                    "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
                    "requires": {
                        "is-accessor-descriptor": "1.0.0",
                        "is-data-descriptor": "1.0.0",
                        "kind-of": "6.0.2"
                    }
                }
            }
        },
        "snapdragon-util": {
            "version": "3.0.1",
            "resolved": "https://registry.npmjs.org/snapdragon-util/-/snapdragon-util-3.0.1.tgz",
            "integrity": "sha512-mbKkMdQKsjX4BAL4bRYTj21edOf8cN7XHdYUJEe+Zn99hVEYcMvKPct1IqNe7+AZPirn8BCDOQBHQZknqmKlZQ==",
            "requires": {
                "kind-of": "3.2.2"
            },
            "dependencies": {
                "kind-of": {
                    "version": "3.2.2",
                    "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
                    "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
                    "requires": {
                        "is-buffer": "1.1.6"
                    }
                }
            }
        },
        "socks": {
            "version": "1.1.10",
            "resolved": "https://registry.npmjs.org/socks/-/socks-1.1.10.tgz",
            "integrity": "sha1-W4t/x8jzQcU+0FbpKbe/Tei6e1o=",
            "requires": {
                "ip": "1.1.5",
                "smart-buffer": "1.1.15"
            }
        },
        "socks-proxy-agent": {
            "version": "3.0.1",
            "resolved": "https://registry.npmjs.org/socks-proxy-agent/-/socks-proxy-agent-3.0.1.tgz",
            "integrity": "sha512-ZwEDymm204mTzvdqyUqOdovVr2YRd2NYskrYrF2LXyZ9qDiMAoFESGK8CRphiO7rtbo2Y757k2Nia3x2hGtalA==",
            "requires": {
                "agent-base": "4.2.1",
                "socks": "1.1.10"
            }
        },
        "source-map": {
            "version": "0.5.7",
            "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz",
            "integrity": "sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w="
        },
        "source-map-resolve": {
            "version": "0.5.2",
            "resolved": "https://registry.npmjs.org/source-map-resolve/-/source-map-resolve-0.5.2.tgz",
            "integrity": "sha512-MjqsvNwyz1s0k81Goz/9vRBe9SZdB09Bdw+/zYyO+3CuPk6fouTaxscHkgtE8jKvf01kVfl8riHzERQ/kefaSA==",
            "requires": {
                "atob": "2.1.2",
                "decode-uri-component": "0.2.0",
                "resolve-url": "0.2.1",
                "source-map-url": "0.4.0",
                "urix": "0.1.0"
            }
        },
        "source-map-support": {
            "version": "0.4.18",
            "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.4.18.tgz",
            "integrity": "sha512-try0/JqxPLF9nOjvSta7tVondkP5dwgyLDjVoyMDlmjugT2lRZ1OfsrYTkCd2hkDnJTKRbO/Rl3orm8vlsUzbA==",
            "requires": {
                "source-map": "0.5.7"
            }
        },
        "source-map-url": {
            "version": "0.4.0",
            "resolved": "https://registry.npmjs.org/source-map-url/-/source-map-url-0.4.0.tgz",
            "integrity": "sha1-PpNdfd1zYxuXZZlW1VEo6HtQhKM="
        },
        "sparkles": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/sparkles/-/sparkles-1.0.1.tgz",
            "integrity": "sha512-dSO0DDYUahUt/0/pD/Is3VIm5TGJjludZ0HVymmhYF6eNA53PVLhnUk0znSYbH8IYBuJdCE+1luR22jNLMaQdw=="
        },
        "spdx-correct": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/spdx-correct/-/spdx-correct-3.0.0.tgz",
            "integrity": "sha512-N19o9z5cEyc8yQQPukRCZ9EUmb4HUpnrmaL/fxS2pBo2jbfcFRVuFZ/oFC+vZz0MNNk0h80iMn5/S6qGZOL5+g==",
            "requires": {
                "spdx-expression-parse": "3.0.0",
                "spdx-license-ids": "3.0.1"
            }
        },
        "spdx-exceptions": {
            "version": "2.1.0",
            "resolved": "https://registry.npmjs.org/spdx-exceptions/-/spdx-exceptions-2.1.0.tgz",
            "integrity": "sha512-4K1NsmrlCU1JJgUrtgEeTVyfx8VaYea9J9LvARxhbHtVtohPs/gFGG5yy49beySjlIMhhXZ4QqujIZEfS4l6Cg=="
        },
        "spdx-expression-parse": {
            "version": "3.0.0",
            "resolved": "https://registry.npmjs.org/spdx-expression-parse/-/spdx-expression-parse-3.0.0.tgz",
            "integrity": "sha512-Yg6D3XpRD4kkOmTpdgbUiEJFKghJH03fiC1OPll5h/0sO6neh2jqRDVHOQ4o/LMea0tgCkbMgea5ip/e+MkWyg==",
            "requires": {
                "spdx-exceptions": "2.1.0",
                "spdx-license-ids": "3.0.1"
            }
        },
        "spdx-license-ids": {
            "version": "3.0.1",
            "resolved": "https://registry.npmjs.org/spdx-license-ids/-/spdx-license-ids-3.0.1.tgz",
            "integrity": "sha512-TfOfPcYGBB5sDuPn3deByxPhmfegAhpDYKSOXZQN81Oyrrif8ZCodOLzK3AesELnCx03kikhyDwh0pfvvQvF8w=="
        },
        "split": {
            "version": "0.2.10",
            "resolved": "http://registry.npmjs.org/split/-/split-0.2.10.tgz",
            "integrity": "sha1-Zwl8YB1pfOE2j0GPBs0gHPBSGlc=",
            "requires": {
                "through": "2.3.8"
            }
        },
        "split-string": {
            "version": "3.1.0",
            "resolved": "https://registry.npmjs.org/split-string/-/split-string-3.1.0.tgz",
            "integrity": "sha512-NzNVhJDYpwceVVii8/Hu6DKfD2G+NrQHlS/V/qgv763EYudVwEcMQNxd2lh+0VrUByXN/oJkl5grOhYWvQUYiw==",
            "requires": {
                "extend-shallow": "3.0.2"
            }
        },
        "sprintf-js": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",
            "integrity": "sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw="
        },
        "spritesheet-templates": {
            "version": "10.2.2",
            "resolved": "https://registry.npmjs.org/spritesheet-templates/-/spritesheet-templates-10.2.2.tgz",
            "integrity": "sha1-6J2ihbvM20HFm1eYFnTikGeJrWY=",
            "requires": {
                "handlebars": "4.0.12",
                "handlebars-layouts": "1.1.0",
                "json-content-demux": "0.1.3",
                "underscore": "1.4.4",
                "underscore.string": "3.0.3"
            },
            "dependencies": {
                "underscore": {
                    "version": "1.4.4",
                    "resolved": "https://registry.npmjs.org/underscore/-/underscore-1.4.4.tgz",
                    "integrity": "sha1-YaajIBBiKvoHljvzJSA88SI51gQ="
                }
            }
        },
        "spritesmith": {
            "version": "3.3.1",
            "resolved": "https://registry.npmjs.org/spritesmith/-/spritesmith-3.3.1.tgz",
            "integrity": "sha512-7mq+oBkeHU66DvJZGeGZO6NGkCbRbQA/WXToLAPyl4YQ2dsYfT9kF2wECJ5ImskmQWllve4T1hGt7tmyaa7OqA==",
            "requires": {
                "concat-stream": "1.5.2",
                "layout": "2.2.0",
                "pixelsmith": "2.2.1",
                "semver": "5.0.3",
                "through2": "2.0.3"
            },
            "dependencies": {
                "concat-stream": {
                    "version": "1.5.2",
                    "resolved": "https://registry.npmjs.org/concat-stream/-/concat-stream-1.5.2.tgz",
                    "integrity": "sha1-cIl4Yk2FavQaWnQd790mHadSwmY=",
                    "requires": {
                        "inherits": "2.0.3",
                        "readable-stream": "2.0.6",
                        "typedarray": "0.0.6"
                    }
                },
                "isarray": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
                    "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
                },
                "process-nextick-args": {
                    "version": "1.0.7",
                    "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-1.0.7.tgz",
                    "integrity": "sha1-FQ4gt1ZZCtP5EJPyWk8q2L/zC6M="
                },
                "readable-stream": {
                    "version": "2.0.6",
                    "resolved": "http://registry.npmjs.org/readable-stream/-/readable-stream-2.0.6.tgz",
                    "integrity": "sha1-j5A0HmilPMySh4jaz80Rs265t44=",
                    "requires": {
                        "core-util-is": "1.0.2",
                        "inherits": "2.0.3",
                        "isarray": "1.0.0",
                        "process-nextick-args": "1.0.7",
                        "string_decoder": "0.10.31",
                        "util-deprecate": "1.0.2"
                    }
                },
                "semver": {
                    "version": "5.0.3",
                    "resolved": "https://registry.npmjs.org/semver/-/semver-5.0.3.tgz",
                    "integrity": "sha1-d0Zt5YnNXTyV8TiqeLxWmjy10no="
                }
            }
        },
        "sshpk": {
            "version": "1.14.2",
            "resolved": "https://registry.npmjs.org/sshpk/-/sshpk-1.14.2.tgz",
            "integrity": "sha1-xvxhZIo9nE52T9P8306hBeSSupg=",
            "requires": {
                "asn1": "0.2.4",
                "assert-plus": "1.0.0",
                "bcrypt-pbkdf": "1.0.2",
                "dashdash": "1.14.1",
                "ecc-jsbn": "0.1.2",
                "getpass": "0.1.7",
                "jsbn": "0.1.1",
                "safer-buffer": "2.1.2",
                "tweetnacl": "0.14.5"
            }
        },
        "stack-trace": {
            "version": "0.0.9",
            "resolved": "https://registry.npmjs.org/stack-trace/-/stack-trace-0.0.9.tgz",
            "integrity": "sha1-qPbq7KkGdMMz58Q5U/J1tFFRBpU="
        },
        "static-eval": {
            "version": "0.2.4",
            "resolved": "https://registry.npmjs.org/static-eval/-/static-eval-0.2.4.tgz",
            "integrity": "sha1-t9NNg4k3uWn5ZBygfUj47eJj6ns=",
            "requires": {
                "escodegen": "0.0.28"
            },
            "dependencies": {
                "escodegen": {
                    "version": "0.0.28",
                    "resolved": "https://registry.npmjs.org/escodegen/-/escodegen-0.0.28.tgz",
                    "integrity": "sha1-Dk/xcV8yh3XWyrUaxEpAbNer/9M=",
                    "requires": {
                        "esprima": "1.0.4",
                        "estraverse": "1.3.2",
                        "source-map": "0.5.7"
                    }
                },
                "esprima": {
                    "version": "1.0.4",
                    "resolved": "https://registry.npmjs.org/esprima/-/esprima-1.0.4.tgz",
                    "integrity": "sha1-n1V+CPw7TSbs6d00+Pv0drYlha0="
                },
                "estraverse": {
                    "version": "1.3.2",
                    "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-1.3.2.tgz",
                    "integrity": "sha1-N8K4k+8T1yPydth41g2FNRUqbEI="
                }
            }
        },
        "static-extend": {
            "version": "0.1.2",
            "resolved": "https://registry.npmjs.org/static-extend/-/static-extend-0.1.2.tgz",
            "integrity": "sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=",
            "requires": {
                "define-property": "0.2.5",
                "object-copy": "0.1.0"
            },
            "dependencies": {
                "define-property": {
                    "version": "0.2.5",
                    "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
                    "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
                    "requires": {
                        "is-descriptor": "0.1.6"
                    }
                }
            }
        },
        "static-module": {
            "version": "1.5.0",
            "resolved": "https://registry.npmjs.org/static-module/-/static-module-1.5.0.tgz",
            "integrity": "sha1-J9qYg8QajNCSNvhC8MHrxu32PYY=",
            "requires": {
                "concat-stream": "1.6.2",
                "duplexer2": "0.0.2",
                "escodegen": "1.3.3",
                "falafel": "2.1.0",
                "has": "1.0.3",
                "object-inspect": "0.4.0",
                "quote-stream": "0.0.0",
                "readable-stream": "1.0.34",
                "shallow-copy": "0.0.1",
                "static-eval": "0.2.4",
                "through2": "0.4.2"
            },
            "dependencies": {
                "escodegen": {
                    "version": "1.3.3",
                    "resolved": "https://registry.npmjs.org/escodegen/-/escodegen-1.3.3.tgz",
                    "integrity": "sha1-8CQBb1qI4Eb9EgBQVek5gC5sXyM=",
                    "requires": {
                        "esprima": "1.1.1",
                        "estraverse": "1.5.1",
                        "esutils": "1.0.0",
                        "source-map": "0.1.43"
                    }
                },
                "esprima": {
                    "version": "1.1.1",
                    "resolved": "https://registry.npmjs.org/esprima/-/esprima-1.1.1.tgz",
                    "integrity": "sha1-W28VR/TRAuZw4UDFCb5ncdautUk="
                },
                "estraverse": {
                    "version": "1.5.1",
                    "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-1.5.1.tgz",
                    "integrity": "sha1-hno+jlip+EYYr7bC3bzZFrfLr3E="
                },
                "esutils": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/esutils/-/esutils-1.0.0.tgz",
                    "integrity": "sha1-gVHTWOIMisx/t0XnRywAJf5JZXA="
                },
                "object-keys": {
                    "version": "0.4.0",
                    "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-0.4.0.tgz",
                    "integrity": "sha1-KKaq50KN0sOpLz2V8hM13SBOAzY="
                },
                "readable-stream": {
                    "version": "1.0.34",
                    "resolved": "http://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz",
                    "integrity": "sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=",
                    "requires": {
                        "core-util-is": "1.0.2",
                        "inherits": "2.0.3",
                        "isarray": "0.0.1",
                        "string_decoder": "0.10.31"
                    }
                },
                "source-map": {
                    "version": "0.1.43",
                    "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.1.43.tgz",
                    "integrity": "sha1-wkvBRspRfBRx9drL4lcbK3+eM0Y=",
                    "optional": true,
                    "requires": {
                        "amdefine": "1.0.1"
                    }
                },
                "through2": {
                    "version": "0.4.2",
                    "resolved": "https://registry.npmjs.org/through2/-/through2-0.4.2.tgz",
                    "integrity": "sha1-2/WGYDEVHsg1K7bE22SiKSqEC5s=",
                    "requires": {
                        "readable-stream": "1.0.34",
                        "xtend": "2.1.2"
                    }
                },
                "xtend": {
                    "version": "2.1.2",
                    "resolved": "https://registry.npmjs.org/xtend/-/xtend-2.1.2.tgz",
                    "integrity": "sha1-bv7MKk2tjmlixJAbM3znuoe10os=",
                    "requires": {
                        "object-keys": "0.4.0"
                    }
                }
            }
        },
        "statuses": {
            "version": "1.5.0",
            "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz",
            "integrity": "sha1-Fhx9rBd2Wf2YEfQ3cfqZOBR4Yow="
        },
        "stdout-stream": {
            "version": "1.4.1",
            "resolved": "https://registry.npmjs.org/stdout-stream/-/stdout-stream-1.4.1.tgz",
            "integrity": "sha512-j4emi03KXqJWcIeF8eIXkjMFN1Cmb8gUlDYGeBALLPo5qdyTfA9bOtl8m33lRoC+vFMkP3gl0WsDr6+gzxbbTA==",
            "requires": {
                "readable-stream": "2.3.6"
            },
            "dependencies": {
                "isarray": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
                    "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
                },
                "readable-stream": {
                    "version": "2.3.6",
                    "resolved": "http://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz",
                    "integrity": "sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==",
                    "requires": {
                        "core-util-is": "1.0.2",
                        "inherits": "2.0.3",
                        "isarray": "1.0.0",
                        "process-nextick-args": "2.0.0",
                        "safe-buffer": "5.1.2",
                        "string_decoder": "1.1.1",
                        "util-deprecate": "1.0.2"
                    }
                },
                "string_decoder": {
                    "version": "1.1.1",
                    "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
                    "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
                    "requires": {
                        "safe-buffer": "5.1.2"
                    }
                }
            }
        },
        "stream-combiner": {
            "version": "0.0.4",
            "resolved": "http://registry.npmjs.org/stream-combiner/-/stream-combiner-0.0.4.tgz",
            "integrity": "sha1-TV5DPBhSYd3mI8o/RMWGvPXErRQ=",
            "requires": {
                "duplexer": "0.1.1"
            }
        },
        "stream-consume": {
            "version": "0.1.1",
            "resolved": "https://registry.npmjs.org/stream-consume/-/stream-consume-0.1.1.tgz",
            "integrity": "sha512-tNa3hzgkjEP7XbCkbRXe1jpg+ievoa0O4SCFlMOYEscGSS4JJsckGL8swUyAa/ApGU3Ae4t6Honor4HhL+tRyg=="
        },
        "stream-shift": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/stream-shift/-/stream-shift-1.0.0.tgz",
            "integrity": "sha1-1cdSgl5TZ+eG944Y5EXqIjoVWVI="
        },
        "streamfilter": {
            "version": "1.0.7",
            "resolved": "https://registry.npmjs.org/streamfilter/-/streamfilter-1.0.7.tgz",
            "integrity": "sha512-Gk6KZM+yNA1JpW0KzlZIhjo3EaBJDkYfXtYSbOwNIQ7Zd6006E6+sCFlW1NDvFG/vnXhKmw6TJJgiEQg/8lXfQ==",
            "requires": {
                "readable-stream": "2.3.6"
            },
            "dependencies": {
                "isarray": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
                    "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
                },
                "readable-stream": {
                    "version": "2.3.6",
                    "resolved": "http://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz",
                    "integrity": "sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==",
                    "requires": {
                        "core-util-is": "1.0.2",
                        "inherits": "2.0.3",
                        "isarray": "1.0.0",
                        "process-nextick-args": "2.0.0",
                        "safe-buffer": "5.1.2",
                        "string_decoder": "1.1.1",
                        "util-deprecate": "1.0.2"
                    }
                },
                "string_decoder": {
                    "version": "1.1.1",
                    "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
                    "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
                    "requires": {
                        "safe-buffer": "5.1.2"
                    }
                }
            }
        },
        "string-width": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz",
            "integrity": "sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=",
            "requires": {
                "code-point-at": "1.1.0",
                "is-fullwidth-code-point": "1.0.0",
                "strip-ansi": "3.0.1"
            }
        },
        "string_decoder": {
            "version": "0.10.31",
            "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz",
            "integrity": "sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ="
        },
        "stringify-object": {
            "version": "3.2.2",
            "resolved": "https://registry.npmjs.org/stringify-object/-/stringify-object-3.2.2.tgz",
            "integrity": "sha512-O696NF21oLiDy8PhpWu8AEqoZHw++QW6mUv0UvKZe8gWSdSvMXkiLufK7OmnP27Dro4GU5kb9U7JIO0mBuCRQg==",
            "dev": true,
            "requires": {
                "get-own-enumerable-property-symbols": "2.0.1",
                "is-obj": "1.0.1",
                "is-regexp": "1.0.0"
            }
        },
        "strip-ansi": {
            "version": "3.0.1",
            "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
            "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",
            "requires": {
                "ansi-regex": "2.1.1"
            }
        },
        "strip-bom": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-1.0.0.tgz",
            "integrity": "sha1-hbiGLzhEtabV7IRnqTWYFzo295Q=",
            "requires": {
                "first-chunk-stream": "1.0.0",
                "is-utf8": "0.2.1"
            }
        },
        "strip-bom-stream": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/strip-bom-stream/-/strip-bom-stream-2.0.0.tgz",
            "integrity": "sha1-+H217yYT9paKpUWr/h7HKLaoKco=",
            "requires": {
                "first-chunk-stream": "2.0.0",
                "strip-bom": "2.0.0"
            },
            "dependencies": {
                "first-chunk-stream": {
                    "version": "2.0.0",
                    "resolved": "https://registry.npmjs.org/first-chunk-stream/-/first-chunk-stream-2.0.0.tgz",
                    "integrity": "sha1-G97NuOCDwGZLkZRVgVd6Q6nzHXA=",
                    "requires": {
                        "readable-stream": "2.3.6"
                    }
                },
                "isarray": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
                    "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
                },
                "readable-stream": {
                    "version": "2.3.6",
                    "resolved": "http://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz",
                    "integrity": "sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==",
                    "requires": {
                        "core-util-is": "1.0.2",
                        "inherits": "2.0.3",
                        "isarray": "1.0.0",
                        "process-nextick-args": "2.0.0",
                        "safe-buffer": "5.1.2",
                        "string_decoder": "1.1.1",
                        "util-deprecate": "1.0.2"
                    }
                },
                "string_decoder": {
                    "version": "1.1.1",
                    "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
                    "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
                    "requires": {
                        "safe-buffer": "5.1.2"
                    }
                },
                "strip-bom": {
                    "version": "2.0.0",
                    "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz",
                    "integrity": "sha1-YhmoVhZSBJHzV4i9vxRHqZx+aw4=",
                    "requires": {
                        "is-utf8": "0.2.1"
                    }
                }
            }
        },
        "strip-bom-string": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/strip-bom-string/-/strip-bom-string-1.0.0.tgz",
            "integrity": "sha1-5SEekiQ2n7uB1jOi8ABE3IztrZI="
        },
        "strip-indent": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/strip-indent/-/strip-indent-1.0.1.tgz",
            "integrity": "sha1-DHlipq3vp7vUrDZkYKY4VSrhoKI=",
            "requires": {
                "get-stdin": "4.0.1"
            }
        },
        "strip-json-comments": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-2.0.1.tgz",
            "integrity": "sha1-PFMZQukIwml8DsNEhYwobHygpgo="
        },
        "supports-color": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",
            "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc="
        },
        "sver-compat": {
            "version": "1.5.0",
            "resolved": "https://registry.npmjs.org/sver-compat/-/sver-compat-1.5.0.tgz",
            "integrity": "sha1-PPh9/rTQe0o/FIJ7wYaz/QxkXNg=",
            "requires": {
                "es6-iterator": "2.0.3",
                "es6-symbol": "3.1.1"
            }
        },
        "table": {
            "version": "3.8.3",
            "resolved": "http://registry.npmjs.org/table/-/table-3.8.3.tgz",
            "integrity": "sha1-K7xULw/amGGnVdOUf+/Ys/UThV8=",
            "requires": {
                "ajv": "4.11.8",
                "ajv-keywords": "1.5.1",
                "chalk": "1.1.3",
                "lodash": "4.17.11",
                "slice-ansi": "0.0.4",
                "string-width": "2.1.1"
            },
            "dependencies": {
                "ansi-regex": {
                    "version": "3.0.0",
                    "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
                    "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg="
                },
                "is-fullwidth-code-point": {
                    "version": "2.0.0",
                    "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
                    "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8="
                },
                "string-width": {
                    "version": "2.1.1",
                    "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
                    "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
                    "requires": {
                        "is-fullwidth-code-point": "2.0.0",
                        "strip-ansi": "4.0.0"
                    }
                },
                "strip-ansi": {
                    "version": "4.0.0",
                    "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
                    "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
                    "requires": {
                        "ansi-regex": "3.0.0"
                    }
                }
            }
        },
        "tar": {
            "version": "2.2.1",
            "resolved": "https://registry.npmjs.org/tar/-/tar-2.2.1.tgz",
            "integrity": "sha1-jk0qJWwOIYXGsYrWlK7JaLg8sdE=",
            "requires": {
                "block-stream": "0.0.9",
                "fstream": "1.0.11",
                "inherits": "2.0.3"
            }
        },
        "ternary-stream": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/ternary-stream/-/ternary-stream-2.0.1.tgz",
            "integrity": "sha1-Bk5Im0tb9gumpre8fy9cJ07Pgmk=",
            "requires": {
                "duplexify": "3.6.0",
                "fork-stream": "0.0.4",
                "merge-stream": "1.0.1",
                "through2": "2.0.3"
            }
        },
        "text-table": {
            "version": "0.2.0",
            "resolved": "https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz",
            "integrity": "sha1-f17oI66AUgfACvLfSoTsP8+lcLQ="
        },
        "thenify": {
            "version": "3.3.0",
            "resolved": "https://registry.npmjs.org/thenify/-/thenify-3.3.0.tgz",
            "integrity": "sha1-5p44obq+lpsBCCB5eLn2K4hgSDk=",
            "requires": {
                "any-promise": "1.3.0"
            }
        },
        "thenify-all": {
            "version": "1.6.0",
            "resolved": "https://registry.npmjs.org/thenify-all/-/thenify-all-1.6.0.tgz",
            "integrity": "sha1-GhkY1ALY/D+Y+/I02wvMjMEOlyY=",
            "requires": {
                "thenify": "3.3.0"
            }
        },
        "through": {
            "version": "2.3.8",
            "resolved": "http://registry.npmjs.org/through/-/through-2.3.8.tgz",
            "integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU="
        },
        "through2": {
            "version": "2.0.3",
            "resolved": "https://registry.npmjs.org/through2/-/through2-2.0.3.tgz",
            "integrity": "sha1-AARWmzfHx0ujnEPzzteNGtlBQL4=",
            "requires": {
                "readable-stream": "2.3.6",
                "xtend": "4.0.1"
            },
            "dependencies": {
                "isarray": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
                    "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
                },
                "readable-stream": {
                    "version": "2.3.6",
                    "resolved": "http://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz",
                    "integrity": "sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==",
                    "requires": {
                        "core-util-is": "1.0.2",
                        "inherits": "2.0.3",
                        "isarray": "1.0.0",
                        "process-nextick-args": "2.0.0",
                        "safe-buffer": "5.1.2",
                        "string_decoder": "1.1.1",
                        "util-deprecate": "1.0.2"
                    }
                },
                "string_decoder": {
                    "version": "1.1.1",
                    "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
                    "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
                    "requires": {
                        "safe-buffer": "5.1.2"
                    }
                }
            }
        },
        "thunkify": {
            "version": "2.1.2",
            "resolved": "https://registry.npmjs.org/thunkify/-/thunkify-2.1.2.tgz",
            "integrity": "sha1-+qDp0jDFGsyVyhOjYawFyn4EVT0="
        },
        "tildify": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/tildify/-/tildify-1.2.0.tgz",
            "integrity": "sha1-3OwD9V3Km3qj5bBPIYF+tW5jWIo=",
            "requires": {
                "os-homedir": "1.0.2"
            }
        },
        "time-stamp": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/time-stamp/-/time-stamp-1.1.0.tgz",
            "integrity": "sha1-dkpaEa9QVhkhsTPztE5hhofg9cM="
        },
        "timers-ext": {
            "version": "0.1.5",
            "resolved": "https://registry.npmjs.org/timers-ext/-/timers-ext-0.1.5.tgz",
            "integrity": "sha512-tsEStd7kmACHENhsUPaxb8Jf8/+GZZxyNFQbZD07HQOyooOa6At1rQqjffgvg7n+dxscQa9cjjMdWhJtsP2sxg==",
            "requires": {
                "es5-ext": "0.10.46",
                "next-tick": "1.0.0"
            }
        },
        "tmp": {
            "version": "0.0.33",
            "resolved": "https://registry.npmjs.org/tmp/-/tmp-0.0.33.tgz",
            "integrity": "sha512-jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==",
            "requires": {
                "os-tmpdir": "1.0.2"
            }
        },
        "to-fast-properties": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-1.0.3.tgz",
            "integrity": "sha1-uDVx+k2MJbguIxsG46MFXeTKGkc="
        },
        "to-object-path": {
            "version": "0.3.0",
            "resolved": "https://registry.npmjs.org/to-object-path/-/to-object-path-0.3.0.tgz",
            "integrity": "sha1-KXWIt7Dn4KwI4E5nL4XB9JmeF68=",
            "requires": {
                "kind-of": "3.2.2"
            },
            "dependencies": {
                "kind-of": {
                    "version": "3.2.2",
                    "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
                    "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
                    "requires": {
                        "is-buffer": "1.1.6"
                    }
                }
            }
        },
        "to-regex": {
            "version": "3.0.2",
            "resolved": "https://registry.npmjs.org/to-regex/-/to-regex-3.0.2.tgz",
            "integrity": "sha512-FWtleNAtZ/Ki2qtqej2CXTOayOH9bHDQF+Q48VpWyDXjbYxA4Yz8iDB31zXOBUlOHHKidDbqGVrTUvQMPmBGBw==",
            "requires": {
                "define-property": "2.0.2",
                "extend-shallow": "3.0.2",
                "regex-not": "1.0.2",
                "safe-regex": "1.1.0"
            }
        },
        "to-regex-range": {
            "version": "2.1.1",
            "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-2.1.1.tgz",
            "integrity": "sha1-fIDBe53+vlmeJzZ+DU3VWQFB2zg=",
            "requires": {
                "is-number": "3.0.0",
                "repeat-string": "1.6.1"
            }
        },
        "tough-cookie": {
            "version": "2.4.3",
            "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.4.3.tgz",
            "integrity": "sha512-Q5srk/4vDM54WJsJio3XNn6K2sCG+CQ8G5Wz6bZhRZoAe/+TxjWB/GlFAnYEbkYVlON9FMk/fE3h2RLpPXo4lQ==",
            "requires": {
                "psl": "1.1.29",
                "punycode": "1.4.1"
            }
        },
        "trim-newlines": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/trim-newlines/-/trim-newlines-1.0.0.tgz",
            "integrity": "sha1-WIeWa7WCpFA6QetST301ARgVphM="
        },
        "trim-right": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/trim-right/-/trim-right-1.0.1.tgz",
            "integrity": "sha1-yy4SAwZ+DI3h9hQJS5/kVwTqYAM="
        },
        "true-case-path": {
            "version": "1.0.3",
            "resolved": "https://registry.npmjs.org/true-case-path/-/true-case-path-1.0.3.tgz",
            "integrity": "sha512-m6s2OdQe5wgpFMC+pAJ+q9djG82O2jcHPOI6RNg1yy9rCYR+WD6Nbpl32fDpfC56nirdRy+opFa/Vk7HYhqaew==",
            "requires": {
                "glob": "7.1.3"
            },
            "dependencies": {
                "glob": {
                    "version": "7.1.3",
                    "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.3.tgz",
                    "integrity": "sha512-vcfuiIxogLV4DlGBHIUOwI0IbrJ8HWPc4MU7HzviGeNho/UJDfi6B5p3sHeWIQ0KGIU0Jpxi5ZHxemQfLkkAwQ==",
                    "requires": {
                        "fs.realpath": "1.0.0",
                        "inflight": "1.0.6",
                        "inherits": "2.0.3",
                        "minimatch": "3.0.4",
                        "once": "1.3.3",
                        "path-is-absolute": "1.0.1"
                    }
                }
            }
        },
        "tunnel-agent": {
            "version": "0.6.0",
            "resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",
            "integrity": "sha1-J6XeoGs2sEoKmWZ3SykIaPD8QP0=",
            "requires": {
                "safe-buffer": "5.1.2"
            }
        },
        "tweetnacl": {
            "version": "0.14.5",
            "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz",
            "integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q=",
            "optional": true
        },
        "type-check": {
            "version": "0.3.2",
            "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.3.2.tgz",
            "integrity": "sha1-WITKtRLPHTVeP7eE8wgEsrUg23I=",
            "requires": {
                "prelude-ls": "1.1.2"
            }
        },
        "typedarray": {
            "version": "0.0.6",
            "resolved": "https://registry.npmjs.org/typedarray/-/typedarray-0.0.6.tgz",
            "integrity": "sha1-hnrHTjhkGHsdPUfZlqeOxciDB3c="
        },
        "uglify-js": {
            "version": "3.4.9",
            "resolved": "https://registry.npmjs.org/uglify-js/-/uglify-js-3.4.9.tgz",
            "integrity": "sha512-8CJsbKOtEbnJsTyv6LE6m6ZKniqMiFWmm9sRbopbkGs3gMPPfd3Fh8iIA4Ykv5MgaTbqHr4BaoGLJLZNhsrW1Q==",
            "optional": true,
            "requires": {
                "commander": "2.17.1",
                "source-map": "0.6.1"
            },
            "dependencies": {
                "source-map": {
                    "version": "0.6.1",
                    "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
                    "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
                    "optional": true
                }
            }
        },
        "uglify-to-browserify": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/uglify-to-browserify/-/uglify-to-browserify-1.0.2.tgz",
            "integrity": "sha1-bgkk1r2mta/jSeOabWMoUKD4grc=",
            "optional": true
        },
        "unc-path-regex": {
            "version": "0.1.2",
            "resolved": "https://registry.npmjs.org/unc-path-regex/-/unc-path-regex-0.1.2.tgz",
            "integrity": "sha1-5z3T17DXxe2G+6xrCufYxqadUPo="
        },
        "underscore": {
            "version": "1.8.3",
            "resolved": "https://registry.npmjs.org/underscore/-/underscore-1.8.3.tgz",
            "integrity": "sha1-Tz+1OxBuYJf8+ctBCfKl6b36UCI="
        },
        "underscore.string": {
            "version": "3.0.3",
            "resolved": "https://registry.npmjs.org/underscore.string/-/underscore.string-3.0.3.tgz",
            "integrity": "sha1-Rhe4waJQz25QZPu7Nj0PqWzxRVI="
        },
        "unescape": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/unescape/-/unescape-1.0.1.tgz",
            "integrity": "sha512-O0+af1Gs50lyH1nUu3ZyYS1cRh01Q/kUKatTOkSs7jukXE6/NebucDVxyiDsA9AQ4JC1V1jUH9EO8JX2nMDgGQ==",
            "requires": {
                "extend-shallow": "2.0.1"
            },
            "dependencies": {
                "extend-shallow": {
                    "version": "2.0.1",
                    "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
                    "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
                    "requires": {
                        "is-extendable": "0.1.1"
                    }
                }
            }
        },
        "union-value": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/union-value/-/union-value-1.0.0.tgz",
            "integrity": "sha1-XHHDTLW61dzr4+oM0IIHulqhrqQ=",
            "requires": {
                "arr-union": "3.1.0",
                "get-value": "2.0.6",
                "is-extendable": "0.1.1",
                "set-value": "0.4.3"
            },
            "dependencies": {
                "extend-shallow": {
                    "version": "2.0.1",
                    "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
                    "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
                    "requires": {
                        "is-extendable": "0.1.1"
                    }
                },
                "set-value": {
                    "version": "0.4.3",
                    "resolved": "https://registry.npmjs.org/set-value/-/set-value-0.4.3.tgz",
                    "integrity": "sha1-fbCPnT0i3H945Trzw79GZuzfzPE=",
                    "requires": {
                        "extend-shallow": "2.0.1",
                        "is-extendable": "0.1.1",
                        "is-plain-object": "2.0.4",
                        "to-object-path": "0.3.0"
                    }
                }
            }
        },
        "uniq": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/uniq/-/uniq-1.0.1.tgz",
            "integrity": "sha1-sxxa6CVIRKOoKBVBzisEuGWnNP8="
        },
        "unique-stream": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/unique-stream/-/unique-stream-1.0.0.tgz",
            "integrity": "sha1-1ZpKdUJ0R9mqbJHnAmP40mpLEEs="
        },
        "unpipe": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
            "integrity": "sha1-sr9O6FFKrmFltIF4KdIbLvSZBOw="
        },
        "unset-value": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/unset-value/-/unset-value-1.0.0.tgz",
            "integrity": "sha1-g3aHP30jNRef+x5vw6jtDfyKtVk=",
            "requires": {
                "has-value": "0.3.1",
                "isobject": "3.0.1"
            },
            "dependencies": {
                "has-value": {
                    "version": "0.3.1",
                    "resolved": "https://registry.npmjs.org/has-value/-/has-value-0.3.1.tgz",
                    "integrity": "sha1-ex9YutpiyoJ+wKIHgCVlSEWZXh8=",
                    "requires": {
                        "get-value": "2.0.6",
                        "has-values": "0.1.4",
                        "isobject": "2.1.0"
                    },
                    "dependencies": {
                        "isobject": {
                            "version": "2.1.0",
                            "resolved": "https://registry.npmjs.org/isobject/-/isobject-2.1.0.tgz",
                            "integrity": "sha1-8GVWEJaj8dou9GJy+BXIQNh+DIk=",
                            "requires": {
                                "isarray": "1.0.0"
                            }
                        }
                    }
                },
                "has-values": {
                    "version": "0.1.4",
                    "resolved": "https://registry.npmjs.org/has-values/-/has-values-0.1.4.tgz",
                    "integrity": "sha1-bWHeldkd/Km5oCCJrThL/49it3E="
                },
                "isarray": {
                    "version": "1.0.0",
                    "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
                    "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
                }
            }
        },
        "urix": {
            "version": "0.1.0",
            "resolved": "https://registry.npmjs.org/urix/-/urix-0.1.0.tgz",
            "integrity": "sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI="
        },
        "url": {
            "version": "0.10.2",
            "resolved": "https://registry.npmjs.org/url/-/url-0.10.2.tgz",
            "integrity": "sha1-aGIdaSnqHK00Tr8TXYL89+sadGk=",
            "requires": {
                "punycode": "1.3.2"
            },
            "dependencies": {
                "punycode": {
                    "version": "1.3.2",
                    "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.3.2.tgz",
                    "integrity": "sha1-llOgNvt8HuQjQvIyXM7v6jkmxI0="
                }
            }
        },
        "url2": {
            "version": "1.0.4",
            "resolved": "https://registry.npmjs.org/url2/-/url2-1.0.4.tgz",
            "integrity": "sha1-3yKErhXHSbqAl1FRDl4l2p67gNg=",
            "requires": {
                "url": "0.10.2"
            }
        },
        "urllib": {
            "version": "2.29.1",
            "resolved": "https://registry.npmjs.org/urllib/-/urllib-2.29.1.tgz",
            "integrity": "sha512-bIz/AHk7xHuDl5P85BzmQGZ084V4vFJLBIcpXXXWe+VQEy/rPC0eWtu1d4WVNgr5E0f4AJ8qT1zdNQk/tzL+5A==",
            "requires": {
                "any-promise": "1.3.0",
                "content-type": "1.0.4",
                "debug": "2.6.9",
                "default-user-agent": "1.0.0",
                "digest-header": "0.0.1",
                "ee-first": "1.1.1",
                "humanize-ms": "1.2.1",
                "iconv-lite": "0.4.24",
                "ip": "1.1.5",
                "proxy-agent": "2.3.1",
                "pump": "3.0.0",
                "qs": "6.5.2",
                "statuses": "1.5.0",
                "utility": "1.15.0"
            }
        },
        "use": {
            "version": "3.1.1",
            "resolved": "https://registry.npmjs.org/use/-/use-3.1.1.tgz",
            "integrity": "sha512-cwESVXlO3url9YWlFW/TA9cshCEhtu7IKJ/p5soJ/gGpj7vbvFrAY/eIioQ6Dw23KjZhYgiIo8HOs1nQ2vr/oQ=="
        },
        "user-home": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/user-home/-/user-home-1.1.1.tgz",
            "integrity": "sha1-K1viOjK2Onyd640PKNSFcko98ZA="
        },
        "util": {
            "version": "0.10.4",
            "resolved": "https://registry.npmjs.org/util/-/util-0.10.4.tgz",
            "integrity": "sha512-0Pm9hTQ3se5ll1XihRic3FDIku70C+iHUdT/W926rSgHV5QgXsYbKZN8MSC3tJtSkhuROzvsQjAaFENRXr+19A==",
            "requires": {
                "inherits": "2.0.3"
            }
        },
        "util-deprecate": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
            "integrity": "sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8="
        },
        "utility": {
            "version": "1.15.0",
            "resolved": "https://registry.npmjs.org/utility/-/utility-1.15.0.tgz",
            "integrity": "sha512-cxaaLKZo8NPTJ1thA45oYZ1NyA4YTY+Hua3Pu6gPPJUkRFHFG4eegjUvJdqgegVB0TwL2xMm2poUF7SJPAwl3Q==",
            "requires": {
                "copy-to": "2.0.1",
                "escape-html": "1.0.3",
                "mkdirp": "0.5.1",
                "mz": "2.7.0",
                "unescape": "1.0.1"
            }
        },
        "uuid": {
            "version": "3.3.2",
            "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.3.2.tgz",
            "integrity": "sha512-yXJmeNaw3DnnKAOKJE51sL/ZaYfWJRl1pK9dr19YFCu0ObS231AB1/LbqTKRAQ5kw8A90rA6fr4riOUpTZvQZA=="
        },
        "v8flags": {
            "version": "2.1.1",
            "resolved": "https://registry.npmjs.org/v8flags/-/v8flags-2.1.1.tgz",
            "integrity": "sha1-qrGh+jDUX4jdMhFIh1rALAtV5bQ=",
            "requires": {
                "user-home": "1.1.1"
            }
        },
        "validate-npm-package-license": {
            "version": "3.0.4",
            "resolved": "https://registry.npmjs.org/validate-npm-package-license/-/validate-npm-package-license-3.0.4.tgz",
            "integrity": "sha512-DpKm2Ui/xN7/HQKCtpZxoRWBhZ9Z0kqtygG8XCgNQ8ZlDnxuQmWhj566j8fN4Cu3/JmbhsDo7fcAJq4s9h27Ew==",
            "requires": {
                "spdx-correct": "3.0.0",
                "spdx-expression-parse": "3.0.0"
            }
        },
        "verror": {
            "version": "1.10.0",
            "resolved": "https://registry.npmjs.org/verror/-/verror-1.10.0.tgz",
            "integrity": "sha1-OhBcoXBTr1XW4nDB+CiGguGNpAA=",
            "requires": {
                "assert-plus": "1.0.0",
                "core-util-is": "1.0.2",
                "extsprintf": "1.3.0"
            }
        },
        "vinyl": {
            "version": "0.5.3",
            "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-0.5.3.tgz",
            "integrity": "sha1-sEVbOPxeDPMNQyUTLkYZcMIJHN4=",
            "requires": {
                "clone": "1.0.4",
                "clone-stats": "0.0.1",
                "replace-ext": "0.0.1"
            }
        },
        "vinyl-file": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/vinyl-file/-/vinyl-file-2.0.0.tgz",
            "integrity": "sha1-p+v1/779obfRjRQPyweyI++2dRo=",
            "requires": {
                "graceful-fs": "4.1.11",
                "pify": "2.3.0",
                "pinkie-promise": "2.0.1",
                "strip-bom": "2.0.0",
                "strip-bom-stream": "2.0.0",
                "vinyl": "1.2.0"
            },
            "dependencies": {
                "graceful-fs": {
                    "version": "4.1.11",
                    "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.11.tgz",
                    "integrity": "sha1-Dovf5NHduIVNZOBOp8AOKgJuVlg="
                },
                "strip-bom": {
                    "version": "2.0.0",
                    "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz",
                    "integrity": "sha1-YhmoVhZSBJHzV4i9vxRHqZx+aw4=",
                    "requires": {
                        "is-utf8": "0.2.1"
                    }
                },
                "vinyl": {
                    "version": "1.2.0",
                    "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-1.2.0.tgz",
                    "integrity": "sha1-XIgDbPVl5d8FVYv8kR+GVt8hiIQ=",
                    "requires": {
                        "clone": "1.0.4",
                        "clone-stats": "0.0.1",
                        "replace-ext": "0.0.1"
                    }
                }
            }
        },
        "vinyl-fs": {
            "version": "0.3.14",
            "resolved": "https://registry.npmjs.org/vinyl-fs/-/vinyl-fs-0.3.14.tgz",
            "integrity": "sha1-mmhRzhysHBzqX+hsCTHWIMLPqeY=",
            "requires": {
                "defaults": "1.0.3",
                "glob-stream": "3.1.18",
                "glob-watcher": "0.0.6",
                "graceful-fs": "3.0.11",
                "mkdirp": "0.5.1",
                "strip-bom": "1.0.0",
                "through2": "0.6.5",
                "vinyl": "0.4.6"
            },
            "dependencies": {
                "clone": {
                    "version": "0.2.0",
                    "resolved": "https://registry.npmjs.org/clone/-/clone-0.2.0.tgz",
                    "integrity": "sha1-xhJqkK1Pctv1rNskPMN3JP6T/B8="
                },
                "readable-stream": {
                    "version": "1.0.34",
                    "resolved": "http://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz",
                    "integrity": "sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=",
                    "requires": {
                        "core-util-is": "1.0.2",
                        "inherits": "2.0.3",
                        "isarray": "0.0.1",
                        "string_decoder": "0.10.31"
                    }
                },
                "through2": {
                    "version": "0.6.5",
                    "resolved": "https://registry.npmjs.org/through2/-/through2-0.6.5.tgz",
                    "integrity": "sha1-QaucZ7KdVyCQcUEOHXp6lozTrUg=",
                    "requires": {
                        "readable-stream": "1.0.34",
                        "xtend": "4.0.1"
                    }
                },
                "vinyl": {
                    "version": "0.4.6",
                    "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-0.4.6.tgz",
                    "integrity": "sha1-LzVsh6VQolVGHza76ypbqL94SEc=",
                    "requires": {
                        "clone": "0.2.0",
                        "clone-stats": "0.0.1"
                    }
                }
            }
        },
        "vinyl-sourcemaps-apply": {
            "version": "0.2.1",
            "resolved": "https://registry.npmjs.org/vinyl-sourcemaps-apply/-/vinyl-sourcemaps-apply-0.2.1.tgz",
            "integrity": "sha1-q2VJ1h0XLCsbh75cUI0jnI74dwU=",
            "requires": {
                "source-map": "0.5.7"
            }
        },
        "which": {
            "version": "1.3.1",
            "resolved": "https://registry.npmjs.org/which/-/which-1.3.1.tgz",
            "integrity": "sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==",
            "requires": {
                "isexe": "2.0.0"
            }
        },
        "which-module": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/which-module/-/which-module-1.0.0.tgz",
            "integrity": "sha1-u6Y8qGGUiZT/MHc2CJ47lgJsKk8="
        },
        "wide-align": {
            "version": "1.1.3",
            "resolved": "https://registry.npmjs.org/wide-align/-/wide-align-1.1.3.tgz",
            "integrity": "sha512-QGkOQc8XL6Bt5PwnsExKBPuMKBxnGxWWW3fU55Xt4feHozMUhdUMaBCk290qpm/wG5u/RSKzwdAC4i51YigihA==",
            "requires": {
                "string-width": "1.0.2"
            }
        },
        "win-release": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/win-release/-/win-release-1.1.1.tgz",
            "integrity": "sha1-X6VeAr58qTTt/BJmVjLoSbcuUgk=",
            "requires": {
                "semver": "5.5.1"
            },
            "dependencies": {
                "semver": {
                    "version": "5.5.1",
                    "resolved": "https://registry.npmjs.org/semver/-/semver-5.5.1.tgz",
                    "integrity": "sha512-PqpAxfrEhlSUWge8dwIp4tZnQ25DIOthpiaHNIthsjEFQD6EvqUKUDM7L8O2rShkFccYo1VjJR0coWfNkCubRw=="
                }
            }
        },
        "window-size": {
            "version": "0.1.4",
            "resolved": "https://registry.npmjs.org/window-size/-/window-size-0.1.4.tgz",
            "integrity": "sha1-+OGqHuWlPsW/FR/6CXQqatdpeHY="
        },
        "wordwrap": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-1.0.0.tgz",
            "integrity": "sha1-J1hIEIkUVqQXHI0CJkQa3pDLyus="
        },
        "wrap-ansi": {
            "version": "2.1.0",
            "resolved": "http://registry.npmjs.org/wrap-ansi/-/wrap-ansi-2.1.0.tgz",
            "integrity": "sha1-2Pw9KE3QV5T+hJc8rs3Rz4JP3YU=",
            "requires": {
                "string-width": "1.0.2",
                "strip-ansi": "3.0.1"
            }
        },
        "wrappy": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
            "integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8="
        },
        "wreck": {
            "version": "6.3.0",
            "resolved": "https://registry.npmjs.org/wreck/-/wreck-6.3.0.tgz",
            "integrity": "sha1-oTaXafB7u2LWo3gzanhx/Hc8dAs=",
            "requires": {
                "boom": "2.10.1",
                "hoek": "2.16.3"
            }
        },
        "write": {
            "version": "0.2.1",
            "resolved": "https://registry.npmjs.org/write/-/write-0.2.1.tgz",
            "integrity": "sha1-X8A4KOJkzqP+kUVUdvejxWbLB1c=",
            "requires": {
                "mkdirp": "0.5.1"
            }
        },
        "xregexp": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/xregexp/-/xregexp-2.0.0.tgz",
            "integrity": "sha1-UqY+VsoLhKfzpfPWGHLxJq16WUM="
        },
        "xtend": {
            "version": "4.0.1",
            "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.1.tgz",
            "integrity": "sha1-pcbVMr5lbiPbgg77lDofBJmNY68="
        },
        "y18n": {
            "version": "3.2.1",
            "resolved": "https://registry.npmjs.org/y18n/-/y18n-3.2.1.tgz",
            "integrity": "sha1-bRX7qITAhnnA136I53WegR4H+kE="
        },
        "yallist": {
            "version": "2.1.2",
            "resolved": "https://registry.npmjs.org/yallist/-/yallist-2.1.2.tgz",
            "integrity": "sha1-HBH5IY8HYImkfdUS+TxmmaaoHVI="
        },
        "yargs": {
            "version": "3.32.0",
            "resolved": "http://registry.npmjs.org/yargs/-/yargs-3.32.0.tgz",
            "integrity": "sha1-AwiOnr+edWtpdRYR0qXvWRSCyZU=",
            "requires": {
                "camelcase": "2.1.1",
                "cliui": "3.2.0",
                "decamelize": "1.2.0",
                "os-locale": "1.4.0",
                "string-width": "1.0.2",
                "window-size": "0.1.4",
                "y18n": "3.2.1"
            }
        },
        "yargs-parser": {
            "version": "5.0.0",
            "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-5.0.0.tgz",
            "integrity": "sha1-J17PDX/+Bcd+ZOfIbkzZS/DhIoo=",
            "requires": {
                "camelcase": "3.0.0"
            },
            "dependencies": {
                "camelcase": {
                    "version": "3.0.0",
                    "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-3.0.0.tgz",
                    "integrity": "sha1-MvxLn82vhF/N9+c7uXysImHwqwo="
                }
            }
        }
    }
}

- ID: "6954b7c7-2487-423f-8600-436cb3b6dc0e"
  Hint: Size
  Value: 373510
- ID: "6f47a0a5-9c94-4b48-abeb-42d38def6054"
  Hint: Mime Type
  Value: "application/octet-stream"
- ID: "c06867fe-9a43-4c7d-b739-48780492d06f"
  Hint: Extension
  Value: json
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20180920T183259Z
